{"ast":null,"code":"import{has}from'@formkit/utils';/**\n * Given a string, convert it to sentence case.\n *\n * @param str - The string to sentence case.\n *\n * @returns `string`\n *\n * @public\n */function sentence(str){return str[0].toUpperCase()+str.substr(1);}/**\n * Creates an oxford-comma separated list of items.\n *\n * @param items - the items to list out.\n * @param conjunction - in the list \"x, y, and z\", \"and\" is the conjunction.\n * Defaults to \"or\".\n *\n * @returns `string`\n *\n * @public\n */function list(items,conjunction='or'){return items.reduce((oxford,item,index)=>{oxford+=item;if(index<=items.length-2&&items.length>2){oxford+=', ';}if(index===items.length-2){oxford+=`${items.length===2?' ':''}${conjunction} `;}return oxford;},'');}/**\n * Given a string or a date, return a nice human-readable version.\n *\n * @param date - A string or a date.\n *\n * @returns `string`\n *\n * @public\n */function date(date){const dateTime=typeof date==='string'?new Date(Date.parse(date)):date;if(!(dateTime instanceof Date)){return'(unknown)';}return new Intl.DateTimeFormat(undefined,{dateStyle:'medium',timeZone:'UTC'}).format(dateTime);}/**\n * Orders two variables from smallest to largest.\n *\n * @param first - The first number or string.\n * @param second - The second number or string.\n *\n * @returns `[smaller: number | string, larger: number | string]`\n *\n * @public\n */function order(first,second){return Number(first)>=Number(second)?[second,first]:[first,second];}/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */ /**\n * Standard language for interface features.\n * @public\n */const ui$C={/**\n     * Shown on buttons for adding new items.\n     */add:'إضافة',/**\n     * Shown when a button to remove items is visible.\n     */remove:'إزالة',/**\n     * Shown when there are multiple items to remove at the same time.\n     */removeAll:'إزالة الكل',/**\n     * Shown when all fields are not filled out correctly.\n     */incomplete:'عذرا، لم يتم تعبئة جميع الحقول بشكل صحيح.',/**\n     * Shown in a button inside a form to submit the form.\n     */submit:'إرسال',/**\n     * Shown when no files are selected.\n     */noFiles:'لا يوجد ملف مختار',/**\n     * Shown on buttons that move fields up in a list.\n     */moveUp:'تحرك لأعلى',/**\n     * Shown on buttons that move fields down in a list.\n     */moveDown:'انتقل لأسفل',/**\n     * Shown when something is actively loading.\n     */isLoading:'يتم الآن التحميل...',/**\n     * Shown when there is more to load.\n     */loadMore:'تحميل المزيد',/**\n     * Shown on buttons that navigate state forward\n     */next:'التالي',/**\n     * Shown on buttons that navigate state backward\n     */prev:'السابق',/**\n     * Shown when transferring items between lists.\n     */addAllValues:'أضف جميع القيم',/**\n     * Shown when adding selected values.\n     */addSelectedValues:'إضافة قيم محددة',/**\n     * Shown when removing all values.\n     */removeAllValues:'قم بإزالة جميع القيم',/**\n     * Shown when removing selected values.\n     */removeSelectedValues:'إزالة القيم المحددة',/**\n     * Shown when there is a date to choose.\n     */chooseDate:'اختر التاريخ',/**\n     * Shown when there is a date to change.\n     */changeDate:'تاريخ التغيير',/**\n     * Shown when the date is invalid.\n     */invalidDate:'التاريخ المحدد غير صالح.'};/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */const validation$C={/**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */accepted({name}){/* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */return`الرجاء قبول ${name}.`;/* </i18n> */},/**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */date_after({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */return`يجب أن يكون ${sentence(name)} بعد ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */return`يجب أن يكون ${sentence(name)} في المستقبل.`;/* </i18n> */},/**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */alpha({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */return`يمكن أن يحتوي ${sentence(name)} على أحرف أبجدية فقط.`;/* </i18n> */},/**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */alphanumeric({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */return`يمكن أن يحتوي ${sentence(name)} على أحرف وأرقام فقط.`;/* </i18n> */},/**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */alpha_spaces({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */return`يمكن أن تحتوي ${sentence(name)} على أحرف ومسافات فقط.`;/* </i18n> */},/**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */date_before({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */return`يجب أن يكون ${sentence(name)} قبل ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */return`يجب أن يكون ${sentence(name)} في الماضي.`;/* </i18n> */},/**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */between({name,args}){if(isNaN(args[0])||isNaN(args[1])){/* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */return`تمت تهيئة هذا الحقل بشكل غير صحيح ولا يمكن إرساله.`;/* </i18n> */}const[a,b]=order(args[0],args[1]);/* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */return`يجب أن يكون ${sentence(name)} ما بين ${a} و ${b}.`;/* </i18n> */},/**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */confirm({name}){/* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */return`${sentence(name)} غير متطابق.`;/* </i18n> */},/**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */date_format({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */return`${sentence(name)} ليس تاريخًا صالحًا ، يرجى استخدام التنسيق ${args[0]}`;/* </i18n> */}/* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */return'تمت تهيئة هذا الحقل بشكل غير صحيح ولا يمكن إرساله';/* </i18n> */},/**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */date_between({name,args}){/* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */return`يجب أن يكون ${sentence(name)} بين ${date(args[0])} و ${date(args[1])}`;/* </i18n> */},/**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */email:'الرجاء أدخال بريد إليكتروني صالح.',/**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */ends_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */return`لا ينتهي ${sentence(name)} بـ ${list(args)}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */is({name}){/* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */return`${sentence(name)} ليست قيمة مسموح بها.`;/* </i18n> */},/**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */length({name,args:[first=0,second=Infinity]}){const min=Number(first)<=Number(second)?first:second;const max=Number(second)>=Number(first)?second:first;if(min==1&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */return`يجب أن يكون ${sentence(name)} حرفًا واحدًا على الأقل.`;/* </i18n> */}if(min==0&&max){/* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */return`يجب أن يكون ${sentence(name)} أقل من أو يساوي ${max} حرفًا.`;/* </i18n> */}if(min===max){/* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */return`يجب أن يتكون ${sentence(name)} من الأحرف ${max}.`;/* </i18n> */}if(min&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */return`يجب أن يكون ${sentence(name)} أكبر من أو يساوي ${min} حرفًا.`;/* </i18n> */}/* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */return`يجب أن يكون ${sentence(name)} بين ${min} و ${max} حرفًا.`;/* </i18n> */},/**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */matches({name}){/* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */return`${sentence(name)} ليست قيمة مسموح بها.`;/* </i18n> */},/**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */max({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */return`لا يمكن أن يكون أكثر من ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */return`يجب أن يكون ${sentence(name)} أقل من أو يساوي ${args[0]}.`;/* </i18n> */},/**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */mime({name,args}){if(!args[0]){/* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */return'لا يسمح بتنسيقات الملفات.';/* </i18n> */}/* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */return`يجب أن يكون ${sentence(name)} من النوع: ${args[0]}`;/* </i18n> */},/**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */min({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */return`لا يمكن أن يكون أقل من ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */return`يجب أن يكون ${sentence(name)} على الأقل ${args[0]}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */not({name,node:{value}}){/* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */return`“${value}” ليس ${name} مسموحًا به.`;/* </i18n> */},/**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */number({name}){/* <i18n case=\"Shown when the user-provided value is not a number.\"> */return`${sentence(name)} يجب ان يكون رقماً`;/* </i18n> */},/**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */required({name}){/* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */return`${sentence(name)} مطلوب.`;/* </i18n> */},/**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */starts_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */return`لا يبدأ ${sentence(name)} بـ ${list(args)}.`;/* </i18n> */},/**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */url(){/* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */return`يرجى إدخال عنوان URL صالح.`;/* </i18n> */}};var ar=/*#__PURE__*/Object.freeze({__proto__:null,ui:ui$C,validation:validation$C});/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */ /**\n * Standard language for interface features.\n * @public\n */const ui$B={/**\n     * Shown on a button for adding additional items.\n     */add:'əlavə edin',/**\n     * Shown when a button to remove items is visible.\n     */remove:'çıxarmaq',/**\n     * Shown when there are multiple items to remove at the same time.\n     */removeAll:'Hamısını silin',/**\n     * Shown when all fields are not filled out correctly.\n     */incomplete:'Üzr istəyirik, bütün sahələr düzgün doldurulmayıb.',/**\n     * Shown in a button inside a form to submit the form.\n     */submit:'Təqdim et',/**\n     * Shown when no files are selected.\n     */noFiles:'Heç bir fayl seçilməyib',/**\n     * Shown on buttons that move fields up in a list.\n     */moveUp:'yuxarı hərəkət',/**\n     * Shown on buttons that move fields down in a list.\n     */moveDown:'Aşağı hərəkət',/**\n     * Shown when something is actively loading.\n     */isLoading:'Yükləmə...',/**\n     * Shown when there is more to load.\n     */loadMore:'Daha çox yüklə',/**\n     * Shown on buttons that navigate state forward\n     */next:'Növbəti',/**\n     * Shown on buttons that navigate state backward\n     */prev:'Əvvəlki',/**\n     * Shown when adding all values.\n     */addAllValues:'Bütün dəyərləri əlavə edin',/**\n     * Shown when adding selected values.\n     */addSelectedValues:'Seçilmiş dəyərləri əlavə edin',/**\n     * Shown when removing all values.\n     */removeAllValues:'Bütün dəyərləri sil',/**\n     * Shown when removing selected values.\n     */removeSelectedValues:'Seçilmiş dəyərləri sil',/**\n     * Shown when there is a date to choose.\n     */chooseDate:'Tarixi seçin',/**\n     * Shown when there is a date to change.\n     */changeDate:'Tarixi dəyişdirin',/**\n     * Shown when the date is invalid.\n     */invalidDate:'Seçilmiş tarix etibarsızdır.'};/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */const validation$B={/**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */accepted({name}){/* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */return`${name} qəbul edin.`;/* </i18n> */},/**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */date_after({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */return`${sentence(name)} ${date(args[0])} sonra olmalıdır.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} gələcəkdə olmalıdır.`;/* </i18n> */},/**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */alpha({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */return`${sentence(name)} yalnız əlifba sırası simvollarından ibarət ola bilər.`;/* </i18n> */},/**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */alphanumeric({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */return`${sentence(name)} yalnız hərf və rəqəmlərdən ibarət ola bilər.`;/* </i18n> */},/**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */alpha_spaces({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */return`${sentence(name)} yalnız hərflərdən və boşluqlardan ibarət ola bilər.`;/* </i18n> */},/**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */date_before({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */return`${sentence(name)} ${date(args[0])} əvvəl olmalıdır.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} keçmişdə olmalıdır.`;/* </i18n> */},/**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */between({name,args}){if(isNaN(args[0])||isNaN(args[1])){/* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */return`Bu sahə səhv konfiqurasiya edilib və onu təqdim etmək mümkün deyil.`;/* </i18n> */}const[a,b]=order(args[0],args[1]);/* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */return`${sentence(name)} ${a} və ${b} arasında olmalıdır.`;/* </i18n> */},/**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */confirm({name}){/* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */return`${sentence(name)} uyğun gəlmir.`;/* </i18n> */},/**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */date_format({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */return`${sentence(name)} etibarlı tarix deyil, ${args[0]} formatından istifadə edin`;/* </i18n> */}/* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */return'Bu sahə səhv konfiqurasiya edilib və onu təqdim etmək mümkün deyil';/* </i18n> */},/**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */date_between({name,args}){/* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */return`${sentence(name)} ${date(args[0])} və ${date(args[1])} arasında olmalıdır`;/* </i18n> */},/**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */email:'Etibarlı e-poçt ünvanı daxil edin.',/**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */ends_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */return`${sentence(name)} ${list(args)} ilə bitmir.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */is({name}){/* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */return`${sentence(name)} icazə verilən dəyər deyil.`;/* </i18n> */},/**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */length({name,args:[first=0,second=Infinity]}){const min=Number(first)<=Number(second)?first:second;const max=Number(second)>=Number(first)?second:first;if(min==1&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */return`${sentence(name)} ən azı bir simvol olmalıdır.`;/* </i18n> */}if(min==0&&max){/* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */return`${sentence(name)} ${max} simvoldan kiçik və ya ona bərabər olmalıdır.`;/* </i18n> */}if(min===max){/* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */return`${sentence(name)} ${max} simvol uzunluğunda olmalıdır.`;/* </i18n> */}if(min&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */return`${sentence(name)} ${min} simvoldan böyük və ya ona bərabər olmalıdır.`;/* </i18n> */}/* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */return`${sentence(name)} ${min} və ${max} simvol arasında olmalıdır.`;/* </i18n> */},/**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */matches({name}){/* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */return`${sentence(name)} icazə verilən dəyər deyil.`;/* </i18n> */},/**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */max({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */return`${args[0]} ${name}-dən çox ola bilməz.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */return`${sentence(name)} ${args[0]} dəyərindən kiçik və ya ona bərabər olmalıdır.`;/* </i18n> */},/**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */mime({name,args}){if(!args[0]){/* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */return'Fayl formatlarına icazə verilmir.';/* </i18n> */}/* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */return`${sentence(name)} aşağıdakı tipdə olmalıdır: ${args[0]}`;/* </i18n> */},/**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */min({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */return`${args[0]} ${name}-dən az ola bilməz.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */return`${sentence(name)} ən azı ${args[0]} olmalıdır.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */not({name,node:{value}}){/* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */return`“${value}” icazə verilən ${name} deyil.`;/* </i18n> */},/**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */number({name}){/* <i18n case=\"Shown when the user-provided value is not a number.\"> */return`${sentence(name)} rəqəm olmalıdır.`;/* </i18n> */},/**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */required({name}){/* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */return`${sentence(name)} tələb olunur.`;/* </i18n> */},/**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */starts_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */return`${sentence(name)} ${list(args)} ilə başlamır.`;/* </i18n> */},/**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */url(){/* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */return`Xahiş edirik, düzgün URL daxil edin.`;/* </i18n> */}};var az=/*#__PURE__*/Object.freeze({__proto__:null,ui:ui$B,validation:validation$B});/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */ /**\n * Standard language for interface features.\n * @public\n */const ui$A={/**\n     * Shown on a button for adding additional items.\n     */add:'Добави',/**\n     * Shown when a button to remove items is visible.\n     */remove:'Премахни',/**\n     * Shown when there are multiple items to remove at the same time.\n     */removeAll:'Премахни всички',/**\n     * Shown when all fields are not filled out correctly.\n     */incomplete:'Извинете, не всички полета са попълнени правилно.',/**\n     * Shown in a button inside a form to submit the form.\n     */submit:'Изпрати',/**\n     * Shown when no files are selected.\n     */noFiles:'Няма избран файл',/**\n     * Shown on buttons that move fields up in a list.\n     */moveUp:'Преместване нагоре',/**\n     * Shown on buttons that move fields down in a list.\n     */moveDown:'Преместете се надолу',/**\n     * Shown when something is actively loading.\n     */isLoading:'Зареждане...',/**\n     * Shown when there is more to load.\n     */loadMore:'Заредете повече',/**\n     * Shown on buttons that navigate state forward\n     */next:'Следващ',/**\n     * Shown on buttons that navigate state backward\n     */prev:'Предишен',/**\n     * Shown when adding all values.\n     */addAllValues:'Добавете всички стойности',/**\n     * Shown when adding selected values.\n     */addSelectedValues:'Добавяне на избрани стойности',/**\n     * Shown when removing all values.\n     */removeAllValues:'Премахнете всички стойности',/**\n     * Shown when removing selected values.\n     */removeSelectedValues:'Премахване на избраните стойности',/**\n     * Shown when there is a date to choose.\n     */chooseDate:'Избери дата',/**\n     * Shown when there is a date to change.\n     */changeDate:'Промяна на датата',/**\n     * Shown when the date is invalid.\n     */invalidDate:'Избраната дата е невалидна.'};/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */const validation$A={/**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */accepted({name}){/* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */return`Моля приемете ${name}.`;/* </i18n> */},/**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */date_after({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */return`${sentence(name)} трябва да е след ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} трябва да бъде в бъдещето.`;/* </i18n> */},/**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */alpha({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */return`${sentence(name)} може да съдържа само букви.`;/* </i18n> */},/**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */alphanumeric({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */return`${sentence(name)} може да съдържа само букви и цифри.`;/* </i18n> */},/**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */alpha_spaces({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */return`${sentence(name)} може да съдържа само букви и интервали.`;/* </i18n> */},/**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */date_before({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */return`${sentence(name)} трябва да е преди ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} трябва да бъде в миналото.`;/* </i18n> */},/**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */between({name,args}){if(isNaN(args[0])||isNaN(args[1])){/* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */return`Това поле е конфигурирано неправилно и не може да бъде изпратено`;/* </i18n> */}const[a,b]=order(args[0],args[1]);/* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */return`${sentence(name)} трябва да бъде между ${a} и ${b}.`;/* </i18n> */},/**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */confirm({name}){/* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */return`${sentence(name)} не съвпада.`;/* </i18n> */},/**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */date_format({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */return`${sentence(name)} е невалидна дата. Моля, използвайте формата ${args[0]}`;/* </i18n> */}/* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */return'Това поле е конфигурирано неправилно и не може да бъде изпратено';/* </i18n> */},/**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */date_between({name,args}){/* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */return`${sentence(name)} трябва да бъде между ${date(args[0])} и ${date(args[1])}.`;/* </i18n> */},/**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */email:'Моля, въведете валиден имейл адрес.',/**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */ends_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */return`${sentence(name)} не завършва на ${list(args)}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */is({name}){/* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */return`${sentence(name)} е неразрешена стойност.`;/* </i18n> */},/**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */length({name,args:[first=0,second=Infinity]}){const min=Number(first)<=Number(second)?first:second;const max=Number(second)>=Number(first)?second:first;if(min==1&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */return`${sentence(name)} трябва да има поне един символ.`;/* </i18n> */}if(min==0&&max){/* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */return`${sentence(name)} трябва да бъде по-малко или равно на ${max} символа.`;/* </i18n> */}if(min===max){/* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */return`${sentence(name)} трябва да бъде ${max} символи дълго.`;/* </i18n> */}if(min&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */return`${sentence(name)} трябва да бъде по-голямо или равно на ${min} символа.`;/* </i18n> */}/* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */return`${sentence(name)} трябва да бъде между ${min} и ${max} символа.`;/* </i18n> */},/**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */matches({name}){/* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */return`${sentence(name)} е неразрешена стойност.`;/* </i18n> */},/**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */max({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */return`Не може да има повече от ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */return`${sentence(name)} трябва да бъде по-малко или равно на ${args[0]}.`;/* </i18n> */},/**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */mime({name,args}){if(!args[0]){/* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */return'Не са разрешени никакви файлови формати.';/* </i18n> */}/* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */return`${sentence(name)} трябва да бъде от тип: ${args[0]}`;/* </i18n> */},/**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */min({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */return`Не може да има по-малко от ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */return`${sentence(name)} трябва да бъде поне ${args[0]}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */not({name,node:{value}}){/* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */return`“${value}” е неразрешен ${name}.`;/* </i18n> */},/**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */number({name}){/* <i18n case=\"Shown when the user-provided value is not a number.\"> */return`${sentence(name)} трябва да бъде число.`;/* </i18n> */},/**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */required({name}){/* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */return`${sentence(name)} е задължително.`;/* </i18n> */},/**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */starts_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */return`${sentence(name)} не започва с ${list(args)}.`;/* </i18n> */},/**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */url(){/* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */return`Моля, въведете валиден URL адрес.`;/* </i18n> */}};var bg=/*#__PURE__*/Object.freeze({__proto__:null,ui:ui$A,validation:validation$A});/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */ /**\n * Standard language for interface features.\n * @public\n */const ui$z={/**\n     * Shown on a button for adding additional items.\n     */add:'Afegir',/**\n     * Shown when a button to remove items is visible.\n     */remove:'Eliminar',/**\n     * Shown when there are multiple items to remove at the same time.\n     */removeAll:'Eliminar tot',/**\n     * Shown when all fields are not filled out correctly.\n     */incomplete:'Disculpi, no tots els camps estan omplerts correctament.',/**\n     * Shown in a button inside a form to submit the form.\n     */submit:'Enviar',/**\n     * Shown when no files are selected.\n     */noFiles:'Cap fitxer triat',/**\n     * Shown on buttons that move fields up in a list.\n     */moveUp:'Moure amunt',/**\n     * Shown on buttons that move fields down in a list.\n     */moveDown:'Moure avall',/**\n     * Shown when something is actively loading.\n     */isLoading:'Carregant...',/**\n     * Shown when there is more to load.\n     */loadMore:'Carregar més',/**\n     * Shown on buttons that navigate state forward\n     */next:'Següent',/**\n     * Shown on buttons that navigate state backward\n     */prev:'Anterior',/**\n     * Shown when adding all values.\n     */addAllValues:'Afegir tots els valors',/**\n     * Shown when adding selected values.\n     */addSelectedValues:'Afegeix els valors seleccionats',/**\n     * Shown when removing all values.\n     */removeAllValues:'Eliminar tots els valors',/**\n     * Shown when removing selected values.\n     */removeSelectedValues:'Elimina els valors seleccionats',/**\n     * Shown when there is a date to choose.\n     */chooseDate:'Trieu la data',/**\n     * Shown when there is a date to change.\n     */changeDate:'Canviar data',/**\n     * Shown when the date is invalid.\n     */invalidDate:'La data seleccionada no és vàlida.'};/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */const validation$z={/**\n     * The value is not an accepted value.\n     * @see {@link https://docs.formkit.com/essentials/validation#accepted}\n     */accepted({name}){/* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */return`Si us plau accepti ${name}.`;/* </i18n> */},/**\n     * The date is not after\n     * @see {@link https://docs.formkit.com/essentials/validation#date-after}\n     */date_after({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */return`${sentence(name)} ha de ser posterior a ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} ha de succeïr al futur.`;/* </i18n> */},/**\n     * The value is not a letter.\n     * @see {@link https://docs.formkit.com/essentials/validation#alpha}\n     */alpha({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */return`${sentence(name)} només pot contenir caràcters alfabètics.`;/* </i18n> */},/**\n     * The value is not alphanumeric\n     * @see {@link https://docs.formkit.com/essentials/validation#alphanumeric}\n     */alphanumeric({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */return`${sentence(name)} només pot contenir lletres i números.`;/* </i18n> */},/**\n     * The value is not letter and/or spaces\n     * @see {@link https://docs.formkit.com/essentials/validation#alpha-spaces}\n     */alpha_spaces({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */return`${sentence(name)} només pot contenir lletres i espais.`;/* </i18n> */},/**\n     * The date is not before\n     * @see {@link https://docs.formkit.com/essentials/validation#date-before}\n     */date_before({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */return`${sentence(name)} ha de ser anterior a ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} ha d'estar al passat.`;/* </i18n> */},/**\n     * The value is not between two numbers\n     * @see {@link https://docs.formkit.com/essentials/validation#between}\n     */between({name,args}){if(isNaN(args[0])||isNaN(args[1])){/* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */return`Aquest camp està configurat incorrectament i no pot ésser enviat.`;/* </i18n> */}const[a,b]=order(args[0],args[1]);/* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */return`${sentence(name)} ha d'estar entre ${a} i ${b}.`;/* </i18n> */},/**\n     * The confirmation field does not match\n     * @see {@link https://docs.formkit.com/essentials/validation#confirm}\n     */confirm({name}){/* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */return`${sentence(name)} no concorda.`;/* </i18n> */},/**\n     * The value is not a valid date\n     * @see {@link https://docs.formkit.com/essentials/validation#date-format}\n     */date_format({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */return`${sentence(name)} no és una data vàlida, si us plau empri el format ${args[0]}`;/* </i18n> */}/* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */return'Aquest camp està configurat incorrectament i no pot ésser enviat';/* </i18n> */},/**\n     * Is not within expected date range\n     * @see {@link https://docs.formkit.com/essentials/validation#date-between}\n     */date_between({name,args}){/* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */return`${sentence(name)} ha d'estar entre ${date(args[0])} i ${date(args[1])}`;/* </i18n> */},/**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://docs.formkit.com/essentials/validation#email}\n     */email:`Si us plau, entri una adreça d'e-mail vàlida.`,/**\n     * Does not end with the specified value\n     * @see {@link https://docs.formkit.com/essentials/validation#ends-with}\n     */ends_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */return`${sentence(name)} no acaba amb ${list(args)}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://docs.formkit.com/essentials/validation#is}\n     */is({name}){/* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */return`${sentence(name)} no és un valor acceptat.`;/* </i18n> */},/**\n     * Does not match specified length\n     * @see {@link https://docs.formkit.com/essentials/validation#length}\n     */length({name,args:[first=0,second=Infinity]}){const min=Number(first)<=Number(second)?first:second;const max=Number(second)>=Number(first)?second:first;if(min==1&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */return`${sentence(name)} ha de tenir com a mínim un caràcter.`;/* </i18n> */}if(min==0&&max){/* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */return`${sentence(name)} ha de ser inferior o igual a ${max} caràcters.`;/* </i18n> */}if(min===max){/* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */return`${sentence(name)} ha de tenir una longitud de ${max} caràcters.`;/* </i18n> */}if(min&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */return`${sentence(name)} ha de ser major que o igual a ${min} caràcters.`;/* </i18n> */}/* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */return`${sentence(name)} ha d'estar entre ${min} i ${max} caràcters.`;/* </i18n> */},/**\n     * Value is not a match\n     * @see {@link https://docs.formkit.com/essentials/validation#matches}\n     */matches({name}){/* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */return`${sentence(name)} no és un valor permès.`;/* </i18n> */},/**\n     * Exceeds maximum allowed value\n     * @see {@link https://docs.formkit.com/essentials/validation#max}\n     */max({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */return`No pot tenir més de ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */return`${sentence(name)} ha de ser menys que o igual a ${args[0]}.`;/* </i18n> */},/**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://docs.formkit.com/essentials/validation#mime}\n     */mime({name,args}){if(!args[0]){/* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */return'No hi ha cap format de fitxer acceptat.';/* </i18n> */}/* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */return`${sentence(name)} ha de ser del tipus: ${args[0]}`;/* </i18n> */},/**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://docs.formkit.com/essentials/validation#min}\n     */min({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */return`No pot tenir menys de ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */return`${sentence(name)} ha de ser com a mínim ${args[0]}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://docs.formkit.com/essentials/validation#not}\n     */not({name,node:{value}}){/* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */return`“${value}” no s'accepta com a ${name}.`;/* </i18n> */},/**\n     *  Is not a number\n     * @see {@link https://docs.formkit.com/essentials/validation#number}\n     */number({name}){/* <i18n case=\"Shown when the user-provided value is not a number.\"> */return`${sentence(name)} ha de ser un número.`;/* </i18n> */},/**\n     * Required field.\n     * @see {@link https://docs.formkit.com/essentials/validation#required}\n     */required({name}){/* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */return`${sentence(name)} és obligatori.`;/* </i18n> */},/**\n     * Does not start with specified value\n     * @see {@link https://docs.formkit.com/essentials/validation#starts-with}\n     */starts_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */return`${sentence(name)} no comença amb ${list(args)}.`;/* </i18n> */},/**\n     * Is not a url\n     * @see {@link https://docs.formkit.com/essentials/validation#url}\n     */url(){/* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */return`Si us plau inclogui una url vàlida.`;/* </i18n> */}};var ca=/*#__PURE__*/Object.freeze({__proto__:null,ui:ui$z,validation:validation$z});/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */ /**\n * Standard language for interface features.\n * @public\n */const ui$y={/**\n     * Shown on buttons for adding new items.\n     */add:'Přidat',/**\n     * Shown when a button to remove items is visible.\n     */remove:'Odebrat',/**\n     * Shown when there are multiple items to remove at the same time.\n     */removeAll:'Odebrat vše',/**\n     * Shown when all fields are not filled out correctly.\n     */incomplete:'Pardon, ale ne všechna pole jsou vyplněna správně.',/**\n     * Shown in a button inside a form to submit the form.\n     */submit:'Odeslat',/**\n     * Shown when no files are selected.\n     */noFiles:'Žádný soubor nebyl vybrán',/**\n     * Shown on buttons that move fields up in a list.\n     */moveUp:'Pohyb nahoru',/**\n     * Shown on buttons that move fields down in a list.\n     */moveDown:'Posunout dolů',/**\n     * Shown when something is actively loading.\n     */isLoading:'Načítání...',/**\n     * Shown when there is more to load.\n     */loadMore:'Načíst více',/**\n     * Shown on buttons that navigate state forward\n     */next:'Další',/**\n     * Shown on buttons that navigate state backward\n     */prev:'Předchozí',/**\n     * Shown when adding all values.\n     */addAllValues:'Přidat všechny hodnoty',/**\n     * Shown when adding selected values.\n     */addSelectedValues:'Přidání vybraných hodnot',/**\n     * Shown when removing all values.\n     */removeAllValues:'Odstraňte všechny hodnoty',/**\n     * Shown when removing selected values.\n     */removeSelectedValues:'Odstranění vybraných hodnot',/**\n     * Shown when there is a date to choose.\n     */chooseDate:'Zvolte datum',/**\n     * Shown when there is a date to change.\n     */changeDate:'Změnit datum',/**\n     * Shown when the date is invalid.\n     */invalidDate:'Vybrané datum je neplatné.'};/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */const validation$y={/**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */accepted({name}){/* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */return`Prosím, zaškrtněte ${name}.`;/* </i18n> */},/**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */date_after({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */return`${sentence(name)} musí být po ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} musí být v budoucnosti.`;/* </i18n> */},/**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */alpha({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */return`${sentence(name)} může obsahovat pouze písmena.`;/* </i18n> */},/**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */alphanumeric({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */return`${sentence(name)} může obsahovat pouze písmena a čísla.`;/* </i18n> */},/**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */date_before({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */return`${sentence(name)} musí být před ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} musí být v minulosti.`;/* </i18n> */},/**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */between({name,args}){if(isNaN(args[0])||isNaN(args[1])){/* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */return`Toto pole bylo špatně nakonfigurováno a nemůže být odesláno.`;/* </i18n> */}const[a,b]=order(args[0],args[1]);/* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */return`${sentence(name)} musí být mezi ${a} a ${b}.`;/* </i18n> */},/**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */confirm({name}){/* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */return`${sentence(name)} nejsou shodná.`;/* </i18n> */},/**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */date_format({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */return`${sentence(name)} není platné datum, prosím, použijte formát ${args[0]}`;/* </i18n> */}/* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */return'Toto pole bylo špatně nakonfigurováno a nemůže být odesláno.';/* </i18n> */},/**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */date_between({name,args}){/* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */return`${sentence(name)} musí být mezi ${date(args[0])} a ${date(args[1])}`;/* </i18n> */},/**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */email:'Prosím, zadejte platnou e-mailovou adresu.',/**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */ends_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */return`${sentence(name)} nekončí na ${list(args)}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */is({name}){/* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */return`${sentence(name)} není povolená hodnota.`;/* </i18n> */},/**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */length({name,args:[first=0,second=Infinity]}){const min=Number(first)<=Number(second)?first:second;const max=Number(second)>=Number(first)?second:first;if(min==1&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */return`${sentence(name)} musí mít nejméně jeden znak.`;/* </i18n> */}if(min==0&&max){/* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */return`${sentence(name)} může mít maximálně ${max} znaků.`;/* </i18n> */}if(min===max){/* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */return`${sentence(name)} by mělo být ${max} znaků dlouhé.`;/* </i18n> */}if(min&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */return`${sentence(name)} musí obsahovat minimálně ${min} znaků.`;/* </i18n> */}/* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */return`${sentence(name)} musí být dlouhé ${min} až ${max} znaků.`;/* </i18n> */},/**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */matches({name}){/* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */return`${sentence(name)} není povolená hodnota.`;/* </i18n> */},/**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */max({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */return`Nelze použít více než ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */return`${sentence(name)} musí mít menší nebo rovno než ${args[0]}.`;/* </i18n> */},/**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */mime({name,args}){if(!args[0]){/* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */return'Nejsou nakonfigurovány povolené typy souborů.';/* </i18n> */}/* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */return`${sentence(name)} musí být typu: ${args[0]}`;/* </i18n> */},/**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */min({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */return`Nelze mít méně než ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */return`${sentence(name)} musí být minimálně ${args[0]}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */not({name,node:{value}}){/* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */return`“${value}” není dovolená hodnota pro ${name}.`;/* </i18n> */},/**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */number({name}){/* <i18n case=\"Shown when the user-provided value is not a number.\"> */return`${sentence(name)} musí být číslo.`;/* </i18n> */},/**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */required({name}){/* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */return`${sentence(name)} je povinné.`;/* </i18n> */},/**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */starts_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */return`${sentence(name)} nezačíná na ${list(args)}.`;/* </i18n> */},/**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */url(){/* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */return`Zadejte prosím platnou adresu URL.`;/* </i18n> */}};var cs=/*#__PURE__*/Object.freeze({__proto__:null,ui:ui$y,validation:validation$y});/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */ /**\n * Standard language for interface features.\n * @public\n */const ui$x={/**\n     * Shown on buttons for adding new items.\n     */add:'Tilføj',/**\n     * Shown when a button to remove items is visible.\n     */remove:'Fjern',/**\n     * Shown when there are multiple items to remove at the same time.\n     */removeAll:'Fjern alle',/**\n     * Shown when all fields are not filled out correctly.\n     */incomplete:'Alle felter er ikke korrekt udfyldt.',/**\n     * Shown in a button inside a form to submit the form.\n     */submit:'Send',/**\n     * Shown when no files are selected.\n     */noFiles:'Ingen filer valgt',/**\n     * Shown on buttons that move fields up in a list.\n     */moveUp:'Flyt op',/**\n     * Shown on buttons that move fields down in a list.\n     */moveDown:'Flyt ned',/**\n     * Shown when something is actively loading.\n     */isLoading:'Indlæser...',/**\n     * Shown when there is more to load.\n     */loadMore:'Indlæs mere',/**\n     * Shown on buttons that navigate state forward\n     */next:'Næste',/**\n     * Shown on buttons that navigate state backward\n     */prev:'Forrige',/**\n     * Shown when adding all values.\n     */addAllValues:'Tilføj alle værdier',/**\n     * Shown when adding selected values.\n     */addSelectedValues:'Tilføj valgte værdier',/**\n     * Shown when removing all values.\n     */removeAllValues:'Fjern alle værdier',/**\n     * Shown when removing selected values.\n     */removeSelectedValues:'Fjern valgte værdier',/**\n     * Shown when there is a date to choose.\n     */chooseDate:'Vælg dato',/**\n     * Shown when there is a date to change.\n     */changeDate:'Skift dato',/**\n     * Shown when the date is invalid.\n     */invalidDate:'Den valgte dato er ugyldig.'};/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */const validation$x={/**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */accepted({name}){/* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */return`Accepter venligst ${name}.`;/* </i18n> */},/**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */date_after({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */return`${sentence(name)} skal være senere end ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} skal være i fremtiden.`;/* </i18n> */},/**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */alpha({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */return`${sentence(name)} kan kun indeholde bogstaver.`;/* </i18n> */},/**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */alphanumeric({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */return`${sentence(name)} kan kun indeholde bogstaver og tal.`;/* </i18n> */},/**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */alpha_spaces({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */return`${sentence(name)} kan kun indeholde bogstaver og mellemrum.`;/* </i18n> */},/**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */date_before({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */return`${sentence(name)} skal være før ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} skal være før i dag.`;/* </i18n> */},/**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */between({name,args}){if(isNaN(args[0])||isNaN(args[1])){/* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */return`Dette felt er ikke konfigureret korrekt og kan derfor ikke blive sendt.`;/* </i18n> */}const[a,b]=order(args[0],args[1]);/* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */return`${sentence(name)} skal være mellem ${a} og ${b}.`;/* </i18n> */},/**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */confirm({name}){/* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */return`${sentence(name)} matcher ikke.`;/* </i18n> */},/**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */date_format({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */return`${sentence(name)} er ikke gyldig, brug venligst formatet ${args[0]}`;/* </i18n> */}/* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */return'Dette felt er ikke konfigureret korrekt og kan derfor ikke blive sendt.';/* </i18n> */},/**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */date_between({name,args}){/* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */return`${sentence(name)} skal være mellem ${date(args[0])} og ${date(args[1])}`;/* </i18n> */},/**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */email:'Indtast venligst en gyldig email-adresse.',/**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */ends_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */return`${sentence(name)} slutter ikke med ${list(args)}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */is({name}){/* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */return`${sentence(name)} er ikke en gyldig værdi.`;/* </i18n> */},/**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */length({name,args:[first=0,second=Infinity]}){const min=Number(first)<=Number(second)?first:second;const max=Number(second)>=Number(first)?second:first;if(min==1&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */return`${sentence(name)} skal være på mindst ét tegn.`;/* </i18n> */}if(min==0&&max){/* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */return`${sentence(name)} skal være på højst ${max} tegn.`;/* </i18n> */}if(min===max){/* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */return`${sentence(name)} skal være ${max} tegn lange.`;/* </i18n> */}if(min&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */return`${sentence(name)} skal være på mindst ${min} tegn.`;/* </i18n> */}/* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */return`${sentence(name)} skal være på mindst ${min} og højst ${max} tegn.`;/* </i18n> */},/**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */matches({name}){/* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */return`${sentence(name)} er ikke en gyldig værdi.`;/* </i18n> */},/**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */max({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */return`Kan ikke have flere end ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */return`${sentence(name)} skal være mindre eller lig med ${args[0]}.`;/* </i18n> */},/**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */mime({name,args}){if(!args[0]){/* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */return'Ingen filformater tilladt.';/* </i18n> */}/* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */return`${sentence(name)} skal være af filtypen: ${args[0]}`;/* </i18n> */},/**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */min({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */return`Kan ikke have mindre end ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */return`${sentence(name)} skal være mindst ${args[0]}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */not({name,node:{value}}){/* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */return`“${value}” er ikke en tilladt ${name}.`;/* </i18n> */},/**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */number({name}){/* <i18n case=\"Shown when the user-provided value is not a number.\"> */return`${sentence(name)} skal være et tal.`;/* </i18n> */},/**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */required({name}){/* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */return`${sentence(name)} er påkrævet.`;/* </i18n> */},/**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */starts_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */return`${sentence(name)} starter ikke med ${list(args)}.`;/* </i18n> */},/**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */url(){/* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */return`Indtast en gyldig URL.`;/* </i18n> */}};var da=/*#__PURE__*/Object.freeze({__proto__:null,ui:ui$x,validation:validation$x});/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */ /**\n * Standard language for interface features.\n * @public\n */const ui$w={/**\n     * Shown on buttons for adding new items.\n     */add:'Hinzufügen',/**\n     * Shown when a button to remove items is visible.\n     */remove:'Entfernen',/**\n     * Shown when there are multiple items to remove at the same time.\n     */removeAll:'Alles entfernen',/**\n     * Shown when all fields are not filled out correctly.\n     */incomplete:'Entschuldigung, nicht alle Felder wurden korrekt ausgefüllt.',/**\n     * Shown in a button inside a form to submit the form.\n     */submit:'Senden',/**\n     * Shown when no files are selected.\n     */noFiles:'Keine Datei ausgewählt',/**\n     * Shown on buttons that move fields up in a list.\n     */moveUp:'Gehe nach oben',/**\n     * Shown on buttons that move fields down in a list.\n     */moveDown:'Gehen Sie nach unten',/**\n     * Shown when something is actively loading.\n     */isLoading:'Wird geladen...',/**\n     * Shown when there is more to load.\n     */loadMore:'Mehr laden',/**\n     * Shown on buttons that navigate state forward\n     */next:'Weiter',/**\n     * Shown on buttons that navigate state backward\n     */prev:'Voriges',/**\n     * Shown when adding all values.\n     */addAllValues:'Alle Werte hinzufügen',/**\n     * Shown when adding selected values.\n     */addSelectedValues:'Ausgewählte Werte hinzufügen',/**\n     * Shown when removing all values.\n     */removeAllValues:'Alle Werte entfernen',/**\n     * Shown when removing selected values.\n     */removeSelectedValues:'Ausgewählte Werte entfernen',/**\n     * Shown when there is a date to choose.\n     */chooseDate:'Datum wählen',/**\n     * Shown when there is a date to change.\n     */changeDate:'Datum ändern',/**\n     * Shown when the date is invalid.\n     */invalidDate:'Das gewählte Datum ist ungültig.'};/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */const validation$w={/**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */accepted({name}){/* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */return`Bitte ${name} akzeptieren.`;/* </i18n> */},/**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */date_after({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */return`${sentence(name)} muss nach dem ${date(args[0])} liegen.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} muss in der Zukunft liegen.`;/* </i18n> */},/**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */alpha({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */return`${sentence(name)} darf nur Buchstaben enthalten.`;/* </i18n> */},/**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */alphanumeric({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */return`${sentence(name)} darf nur Buchstaben und Zahlen enthalten.`;/* </i18n> */},/**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */alpha_spaces({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */return`${sentence(name)} dürfen nur Buchstaben und Leerzeichen enthalten.`;/* </i18n> */},/**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */date_before({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */return`${sentence(name)} muss vor dem ${date(args[0])} liegen.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} muss in der Vergangenheit liegen.`;/* </i18n> */},/**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */between({name,args}){if(isNaN(args[0])||isNaN(args[1])){/* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */return`Dieses Feld wurde falsch konfiguriert und kann nicht übermittelt werden.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */return`${sentence(name)} muss zwischen ${args[0]} und ${args[1]} sein.`;/* </i18n> */},/**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */confirm({name}){/* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */return`${sentence(name)} stimmt nicht überein.`;/* </i18n> */},/**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */date_format({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */return`${sentence(name)} ist kein gültiges Datum im Format ${args[0]}.`;/* </i18n> */}/* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */return'Dieses Feld wurde falsch konfiguriert und kann nicht übermittelt werden.';/* </i18n> */},/**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */date_between({name,args}){/* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */return`${sentence(name)} muss zwischen ${date(args[0])} und ${date(args[1])} liegen.`;/* </i18n> */},/**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */email:'E-Mail Adresse ist ungültig.',/**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */ends_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */return`${sentence(name)} endet nicht mit ${list(args)}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */is({name}){/* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */return`${sentence(name)} enthält einen ungültigen Wert.`;/* </i18n> */},/**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */length({name,args:[first=0,second=Infinity]}){const min=first<=second?first:second;const max=second>=first?second:first;if(min==1&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */return`${sentence(name)} muss mindestens ein Zeichen enthalten.`;/* </i18n> */}if(min==0&&max){/* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */return`${sentence(name)} darf maximal ${max} Zeichen enthalten.`;/* </i18n> */}if(min===max){/* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */return`${sentence(name)} sollte ${max} Zeichen lang sein.`;/* </i18n> */}if(min&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */return`${sentence(name)} muss mindestens ${min} Zeichen enthalten.`;/* </i18n> */}/* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */return`${sentence(name)} muss zwischen ${min} und ${max} Zeichen enthalten.`;/* </i18n> */},/**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */matches({name}){/* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */return`${sentence(name)} enthält einen ungültigen Wert.`;/* </i18n> */},/**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */max({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */return`Darf maximal ${args[0]} ${name} haben.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */return`${sentence(name)} darf maximal ${args[0]} sein.`;/* </i18n> */},/**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */mime({name,args}){if(!args[0]){/* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */return'Keine Dateiformate konfiguriert.';/* </i18n> */}/* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */return`${sentence(name)} muss vom Typ ${args[0]} sein.`;/* </i18n> */},/**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */min({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */return`Mindestens ${args[0]} ${name} erforderlich.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */return`${sentence(name)} muss mindestens ${args[0]} sein.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */not({name,node:{value}}){/* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */return`“${value}” ist kein gültiger Wert für ${name}.`;/* </i18n> */},/**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */number({name}){/* <i18n case=\"Shown when the user-provided value is not a number.\"> */return`${sentence(name)} muss eine Zahl sein.`;/* </i18n> */},/**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */required({name}){/* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */return`${sentence(name)} ist erforderlich.`;/* </i18n> */},/**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */starts_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */return`${sentence(name)} beginnt nicht mit ${list(args)}.`;/* </i18n> */},/**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */url(){/* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */return`Bitte geben Sie eine gültige URL ein.`;/* </i18n> */}};var de=/*#__PURE__*/Object.freeze({__proto__:null,ui:ui$w,validation:validation$w});/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */ /**\n * Standard language for interface features.\n * @public\n */const ui$v={/**\n     * Shown on a button for adding additional items.\n     */add:'Προσθήκη',/**\n     * Shown when a button to remove items is visible.\n     */remove:'Αφαίρεση',/**\n     * Shown when there are multiple items to remove at the same time.\n     */removeAll:'Αφαίρεση όλων',/**\n     * Shown when all fields are not filled out correctly.\n     */incomplete:'Λυπούμαστε, υπάρχουν πεδία που δεν έχουν συμπληρωθεί σωστά.',/**\n     * Shown in a button inside a form to submit the form.\n     */submit:'Υποβολή',/**\n     * Shown when no files are selected.\n     */noFiles:'Κανένα αρχείο δεν έχει επιλεγεί',/**\n     * Shown on buttons that move fields up in a list.\n     */moveUp:'Προς τα επάνω',/**\n     * Shown on buttons that move fields down in a list.\n     */moveDown:'Προς τα κάτω',/**\n     * Shown when something is actively loading.\n     */isLoading:'Φορτώνει...',/**\n     * Shown when there is more to load.\n     */loadMore:'Φόρτωση περισσότερων',/**\n     * Shown on buttons that navigate state forward\n     */next:'Επόμενη',/**\n     * Shown on buttons that navigate state backward\n     */prev:'Προηγούμενο',/**\n     * Shown when adding all values.\n     */addAllValues:'Προσθήκη όλων των τιμών',/**\n     * Shown when adding selected values.\n     */addSelectedValues:'Προσθήκη επιλεγμένων τιμών',/**\n     * Shown when removing all values.\n     */removeAllValues:'Κατάργηση όλων των τιμών',/**\n     * Shown when removing selected values.\n     */removeSelectedValues:'Αφαίρεση επιλεγμένων τιμών',/**\n     * Shown when there is a date to choose.\n     */chooseDate:'Επιλέξτε ημερομηνία',/**\n     * Shown when there is a date to change.\n     */changeDate:'Αλλαγή ημερομηνίας',/**\n     * Shown when the date is invalid.\n     */invalidDate:'Η επιλεγμένη ημερομηνία δεν είναι έγκυρη.'};/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */const validation$v={/**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */accepted({name}){/* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */return`Παρακαλώ αποδεχτείτε το ${name}.`;/* </i18n> */},/**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */date_after({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */return`${sentence(name)} πρέπει να είναι μετά της ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} πρέπει να είναι στο μέλλον.`;/* </i18n> */},/**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */alpha({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */return`${sentence(name)} μπορεί να περιέχει μόνο αλφαβητικούς χαρακτήρες.`;/* </i18n> */},/**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */alphanumeric({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */return`${sentence(name)} μπορεί να περιέχει μόνο γράμματα και αριθμούς.`;/* </i18n> */},/**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */alpha_spaces({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */return`${sentence(name)} μπορεί να περιέχει μόνο γράμματα και κενά.`;/* </i18n> */},/**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */date_before({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */return`${sentence(name)} πρέπει να είναι πριν της ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} πρέπει να είναι στο παρελθόν.`;/* </i18n> */},/**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */between({name,args}){if(isNaN(args[0])||isNaN(args[1])){/* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */return`Αυτό το πεδίο έχει ρυθμιστεί λανθασμένα και δεν μπορεί να υποβληθεί.`;/* </i18n> */}const[a,b]=order(args[0],args[1]);/* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */return`${sentence(name)} πρέπει να είναι μεταξύ ${a} και ${b}.`;/* </i18n> */},/**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */confirm({name}){/* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */return`${sentence(name)} δεν ταιριάζει.`;/* </i18n> */},/**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */date_format({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */return`${sentence(name)} δεν είναι έγυρη ημερομηνία, παρακαλώ ακολουθήστε την διαμόρφωση ${args[0]}`;/* </i18n> */}/* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */return'Αυτό το πεδίο έχει ρυθμιστεί λανθασμένα και δεν μπορεί να υποβληθεί';/* </i18n> */},/**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */date_between({name,args}){/* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */return`${sentence(name)} πρέπει να είναι μεταξύ ${date(args[0])} και ${date(args[1])}`;/* </i18n> */},/**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */email:'Παρακαλώ πληκτρολογήστε μια έγκυρη email διεύθυνση. ',/**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */ends_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */return`${sentence(name)} δεν καταλήγει με ${list(args)}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */is({name}){/* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */return`${sentence(name)} δεν είναι μια επιτρεπτή τιμή.`;/* </i18n> */},/**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */length({name,args:[first=0,second=Infinity]}){const min=Number(first)<=Number(second)?first:second;const max=Number(second)>=Number(first)?second:first;if(min==1&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */return`${sentence(name)} πρέπει να είναι τουλάχιστον ενός χαρακτήρα.`;/* </i18n> */}if(min==0&&max){/* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */return`${sentence(name)} πρέπει να είναι λιγότεροι ή ίσοι με ${max} χαρακτήρες.`;/* </i18n> */}if(min===max){/* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */return`Το ${sentence(name)} θα πρέπει να έχει μήκος ${max} χαρακτήρες.`;/* </i18n> */}if(min&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */return`${sentence(name)} πρέπει να είναι περισσότεροι ή ίσοι με ${min} χαρακτήρες.`;/* </i18n> */}/* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */return`${sentence(name)} πρέπει να είναι μεταξύ ${min} και ${max} χαρακτήρες.`;/* </i18n> */},/**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */matches({name}){/* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */return`${sentence(name)} δεν είναι μια επιτρεπτή τιμή.`;/* </i18n> */},/**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */max({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */return`Δεν μπορεί να έχει παραπάνω από ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */return`${sentence(name)} πρέπει αν είναι λιγότερο ή ίσο με το ${args[0]}.`;/* </i18n> */},/**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */mime({name,args}){if(!args[0]){/* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */return'Δεν επιτρέπονται αρχεία.';/* </i18n> */}/* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */return`${sentence(name)} πρέπει να είναι τύπου: ${args[0]}`;/* </i18n> */},/**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */min({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */return`Δεν μπορεί να είναι λιγότερο από ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */return`${sentence(name)} πρέπει να είναι τουλάχιστον ${args[0]}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */not({name,node:{value}}){/* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */return`“${value}” δεν είναι μια επιτρεπτή ${name}.`;/* </i18n> */},/**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */number({name}){/* <i18n case=\"Shown when the user-provided value is not a number.\"> */return`${sentence(name)} πρέπει να είναι αριθμός.`;/* </i18n> */},/**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */required({name}){/* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */return`${sentence(name)} είναι υποχρεωτικό.`;/* </i18n> */},/**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */starts_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */return`${sentence(name)} δεν αρχίζει με ${list(args)}.`;/* </i18n> */},/**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */url(){/* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */return`Παρακαλώ εισάγετε ένα έγκυρο URL.`;/* </i18n> */}};var el=/*#__PURE__*/Object.freeze({__proto__:null,ui:ui$v,validation:validation$v});/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */ /**\n * Standard language for interface features.\n * @public\n */const ui$u={/**\n     * Shown on a button for adding additional items.\n     */add:'Add',/**\n     * Shown when a button to remove items is visible.\n     */remove:'Remove',/**\n     * Shown when there are multiple items to remove at the same time.\n     */removeAll:'Remove all',/**\n     * Shown when all fields are not filled out correctly.\n     */incomplete:'Sorry, not all fields are filled out correctly.',/**\n     * Shown in a button inside a form to submit the form.\n     */submit:'Submit',/**\n     * Shown when no files are selected.\n     */noFiles:'No file chosen',/**\n     * Shown on buttons that move fields up in a list.\n     */moveUp:'Move up',/**\n     * Shown on buttons that move fields down in a list.\n     */moveDown:'Move down',/**\n     * Shown when something is actively loading.\n     */isLoading:'Loading...',/**\n     * Shown when there is more to load.\n     */loadMore:'Load more',/**\n     * Show on buttons that navigate state forward\n     */next:'Next',/**\n     * Show on buttons that navigate state backward\n     */prev:'Previous',/**\n     * Shown when adding all values.\n     */addAllValues:'Add all values',/**\n     * Shown when adding selected values.\n     */addSelectedValues:'Add selected values',/**\n     * Shown when removing all values.\n     */removeAllValues:'Remove all values',/**\n     * Shown when removing selected values.\n     */removeSelectedValues:'Remove selected values',/**\n     * Shown when there is a date to choose.\n     */chooseDate:'Choose date',/**\n     * Shown when there is a date to change.\n     */changeDate:'Change date',/**\n     * Shown when the date is invalid.\n     */invalidDate:'The selected date is invalid.'};/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */const validation$u={/**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */accepted({name}){/* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */return`Please accept the ${name}.`;/* </i18n> */},/**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */date_after({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */return`${sentence(name)} must be after ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} must be in the future.`;/* </i18n> */},/**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */alpha({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */return`${sentence(name)} can only contain alphabetical characters.`;/* </i18n> */},/**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */alphanumeric({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */return`${sentence(name)} can only contain letters and numbers.`;/* </i18n> */},/**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */alpha_spaces({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */return`${sentence(name)} can only contain letters and spaces.`;/* </i18n> */},/**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */date_before({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */return`${sentence(name)} must be before ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} must be in the past.`;/* </i18n> */},/**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */between({name,args}){if(isNaN(args[0])||isNaN(args[1])){/* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */return`This field was configured incorrectly and can’t be submitted.`;/* </i18n> */}const[a,b]=order(args[0],args[1]);/* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */return`${sentence(name)} must be between ${a} and ${b}.`;/* </i18n> */},/**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */confirm({name}){/* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */return`${sentence(name)} does not match.`;/* </i18n> */},/**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */date_format({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */return`${sentence(name)} is not a valid date, please use the format ${args[0]}`;/* </i18n> */}/* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */return'This field was configured incorrectly and can’t be submitted';/* </i18n> */},/**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */date_between({name,args}){/* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */return`${sentence(name)} must be between ${date(args[0])} and ${date(args[1])}`;/* </i18n> */},/**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */email:'Please enter a valid email address.',/**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */ends_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */return`${sentence(name)} doesn’t end with ${list(args)}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */is({name}){/* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */return`${sentence(name)} is not an allowed value.`;/* </i18n> */},/**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */length({name,args:[first=0,second=Infinity]}){const min=Number(first)<=Number(second)?first:second;const max=Number(second)>=Number(first)?second:first;if(min==1&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */return`${sentence(name)} must be at least one character.`;/* </i18n> */}if(min==0&&max){/* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */return`${sentence(name)} must be less than or equal to ${max} characters.`;/* </i18n> */}if(min===max){/* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */return`${sentence(name)} should be ${max} characters long.`;/* </i18n> */}if(min&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */return`${sentence(name)} must be greater than or equal to ${min} characters.`;/* </i18n> */}/* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */return`${sentence(name)} must be between ${min} and ${max} characters.`;/* </i18n> */},/**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */matches({name}){/* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */return`${sentence(name)} is not an allowed value.`;/* </i18n> */},/**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */max({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */return`Cannot have more than ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */return`${sentence(name)} must be less than or equal to ${args[0]}.`;/* </i18n> */},/**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */mime({name,args}){if(!args[0]){/* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */return'No file formats allowed.';/* </i18n> */}/* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */return`${sentence(name)} must be of the type: ${args[0]}`;/* </i18n> */},/**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */min({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */return`Cannot have fewer than ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */return`Must be at least ${args[0]} ${name} .`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */not({name,node:{value}}){/* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */return`“${value}” is not an allowed ${name}.`;/* </i18n> */},/**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */number({name}){/* <i18n case=\"Shown when the user-provided value is not a number.\"> */return`${sentence(name)} must be a number.`;/* </i18n> */},/**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */required({name}){/* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */return`${sentence(name)} is required.`;/* </i18n> */},/**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */starts_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */return`${sentence(name)} doesn’t start with ${list(args)}.`;/* </i18n> */},/**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */url(){/* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */return`Please enter a valid URL.`;/* </i18n> */}};var en=/*#__PURE__*/Object.freeze({__proto__:null,ui:ui$u,validation:validation$u});/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */ /**\n * Standard language for interface features.\n * @public\n */const ui$t={/**\n     * Shown on buttons for adding new items.\n     */add:'Añadir',/**\n     * Shown when a button to remove items is visible.\n     */remove:'Quitar',/**\n     * Shown when there are multiple items to remove at the same time.\n     */removeAll:'Quitar todos',/**\n     * Shown when all fields are not filled out correctly.\n     */incomplete:'Discúlpe, los campos no fueron completados correctamente.',/**\n     * Shown in a button inside a form to submit the form.\n     */submit:'Enviar',/**\n     * Shown when no files are selected.\n     */noFiles:'Archivo no seleccionado',/**\n     * Shown on buttons that move fields up in a list.\n     */moveUp:'Moverse hacia arriba',/**\n     * Shown on buttons that move fields down in a list.\n     */moveDown:'Moverse hacia abajo',/**\n     * Shown when something is actively loading.\n     */isLoading:'Cargando...',/**\n     * Shown when there is more to load.\n     */loadMore:'Cargar más',/**\n     * Shown on buttons that navigate state forward\n     */next:'Próximo',/**\n     * Shown on buttons that navigate state backward\n     */prev:'Anterior',/**\n     * Shown when adding all values.\n     */addAllValues:'Añadir todos los valores',/**\n     * Shown when adding selected values.\n     */addSelectedValues:'Añadir valores seleccionados',/**\n     * Shown when removing all values.\n     */removeAllValues:'Eliminar todos los valores',/**\n     * Shown when removing selected values.\n     */removeSelectedValues:'Eliminar los valores seleccionados',/**\n     * Shown when there is a date to choose.\n     */chooseDate:'Elige fecha',/**\n     * Shown when there is a date to change.\n     */changeDate:'Cambiar fecha',/**\n     * Shown when the date is invalid.\n     */invalidDate:'La fecha seleccionada no es válida.'};/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */const validation$t={/**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */accepted({name}){/* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */return`Acepte el ${name} por favor.`;/* </i18n> */},/**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */date_after({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */return`${sentence(name)} debe ser posterior a ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} debe ser una fecha futura.`;/* </i18n> */},/**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */alpha({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */return`${sentence(name)} debe contener solo caractéres alfabéticos.`;/* </i18n> */},/**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */alphanumeric({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */return`${sentence(name)} debe ser alfanumérico.`;/* </i18n> */},/**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */alpha_spaces({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */return`${sentence(name)} espacios alfa solo pueden contener letras y espacios.`;/* </i18n> */},/**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */date_before({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */return`${sentence(name)} debe ser anterior a ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} debe ser una fecha pasada.`;/* </i18n> */},/**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */between({name,args}){if(isNaN(args[0])||isNaN(args[1])){/* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */return`El campo no fue completado correctamente y no puede ser enviado.`;/* </i18n> */}const[a,b]=order(args[0],args[1]);/* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */return`${sentence(name)} debe estar entre ${a} y ${b}.`;/* </i18n> */},/**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */confirm({name}){/* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */return`${sentence(name)} no coincide.`;/* </i18n> */},/**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */date_format({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */return`${sentence(name)} no es una fecha válida, por favor utilice el formato ${args[0]}`;/* </i18n> */}/* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */return'El campo no fue completado correctamente y no puede ser enviado.';/* </i18n> */},/**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */date_between({name,args}){/* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */return`${sentence(name)} debe estar entre ${date(args[0])} y ${date(args[1])}`;/* </i18n> */},/**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */email:'Ingrese una dirección de correo electrónico válida por favor.',/**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */ends_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */return`${sentence(name)} no termina con ${list(args)}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */is({name}){/* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */return`${sentence(name)} no es un valor permitido.`;/* </i18n> */},/**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */length({name,args:[first=0,second=Infinity]}){const min=Number(first)<=Number(second)?first:second;const max=Number(second)>=Number(first)?second:first;if(min==1&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */return`${sentence(name)} debe tener al menos una letra.`;/* </i18n> */}if(min==0&&max){/* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */return`${sentence(name)} debe tener como máximo ${max} caractéres.`;/* </i18n> */}if(min===max){/* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */return`${sentence(name)} debe tener ${max} caracteres.`;/* </i18n> */}if(min&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */return`${sentence(name)} debe tener como mínimo ${min} caractéres.`;/* </i18n> */}/* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */return`${sentence(name)} debe tener entre ${min} y ${max} caractéres.`;/* </i18n> */},/**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */matches({name}){/* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */return`${sentence(name)} no es un valor permitido.`;/* </i18n> */},/**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */max({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */return`No puede tener más de ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */return`${sentence(name)} debe ser menor o igual a ${args[0]}.`;/* </i18n> */},/**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */mime({name,args}){if(!args[0]){/* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */return'No existen formatos de archivos permitidos.';/* </i18n> */}/* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */return`${sentence(name)} debe ser del tipo: ${args[0]}`;/* </i18n> */},/**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */min({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */return`No puede tener menos de ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */return`${sentence(name)} debe ser de al menos ${args[0]}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */not({name,node:{value}}){/* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */return`“${value}” no es un valor permitido de ${name}.`;/* </i18n> */},/**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */number({name}){/* <i18n case=\"Shown when the user-provided value is not a number.\"> */return`${sentence(name)} debe ser un número.`;/* </i18n> */},/**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */required({name}){/* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */return`${sentence(name)} es requerido.`;/* </i18n> */},/**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */starts_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */return`${sentence(name)} debe comenzar con ${list(args)}.`;/* </i18n> */},/**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */url(){/* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */return`Introduce una URL válida.`;/* </i18n> */}};var es=/*#__PURE__*/Object.freeze({__proto__:null,ui:ui$t,validation:validation$t});/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */ /**\n * Standard language for interface features.\n * @public\n */const ui$s={/**\n     * Shown on buttons for adding new items.\n     */add:'افزودن',/**\n     * Shown when a button to remove items is visible.\n     */remove:'حذف',/**\n     * Shown when there are multiple items to remove at the same time.\n     */removeAll:'همه را حذف کنید',/**\n     * Shown when all fields are not filled out correctly.\n     */incomplete:'همه فیلدها به‌درستی پر نشده‌اند',/**\n     * Shown in a button inside a form to submit the form.\n     */submit:'ثبت',/**\n     * Shown when no files are selected.\n     */noFiles:'هیچ فایلی انتخاب نشده است',/**\n     * Shown on buttons that move fields up in a list.\n     */moveUp:'حرکت به بالا',/**\n     * Shown on buttons that move fields down in a list.\n     */moveDown:'حرکت به پایین',/**\n     * Shown when something is actively loading.\n     */isLoading:'در حال بارگذاری...',/**\n     * Shown when there is more to load.\n     */loadMore:'بارگذاری بیشتر',/**\n     * Shown on buttons that navigate state forward\n     */next:'بعدی',/**\n     * Shown on buttons that navigate state backward\n     */prev:'قبلی',/**\n     * Shown when adding all values.\n     */addAllValues:'تمام مقادیر را اضافه کنید',/**\n     * Shown when adding selected values.\n     */addSelectedValues:'مقادیر انتخاب شده را اضافه کنید',/**\n     * Shown when removing all values.\n     */removeAllValues:'تمام مقادیر را حذف کنید',/**\n     * Shown when removing selected values.\n     */removeSelectedValues:'حذف مقادیر انتخاب شده',/**\n     * Shown when there is a date to choose.\n     */chooseDate:'تاریخ را انتخاب کنید',/**\n     * Shown when there is a date to change.\n     */changeDate:'تغییر تاریخ',/**\n     * Shown when the date is invalid.\n     */invalidDate:'تاریخ انتخاب شده نامعتبر است'};/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */const validation$s={/**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */accepted({name}){/* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */return`لطفاً ${name} را بپذیرید.`;/* </i18n> */},/**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */date_after({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */return`${sentence(name)} باید بعد از تاریخ ${date(args[0])} باشد.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} باید مربوط به آینده باشد.`;/* </i18n> */},/**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */alpha({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */return`${sentence(name)} فقط میتواند شامل حروف الفبا باشد.`;/* </i18n> */},/**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */alphanumeric({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */return`${sentence(name)} فقط میتواند شامل حروف و اعداد باشد.`;/* </i18n> */},/**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */alpha_spaces({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */return`${sentence(name)} فقط می تواند شامل حروف و فاصله باشد.`;/* </i18n> */},/**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */date_before({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */return`${sentence(name)} باید قبل از تاریخ ${date(args[0])} باشد.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} باید مربوط به گذشته باشد.`;/* </i18n> */},/**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */between({name,args}){if(isNaN(args[0])||isNaN(args[1])){/* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */return`این فیلد به اشتباه پیکربندی شده است و قابل ارسال نیست`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */return`${sentence(name)} باید بین ${args[0]} و ${args[1]} باشد.`;/* </i18n> */},/**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */confirm({name}){/* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */return`${sentence(name)} مطابقت ندارد.`;/* </i18n> */},/**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */date_format({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */return`${sentence(name)} تاریخ معتبری نیست، لطفاً از قالب ${args[0]} استفاده کنید\n`;/* </i18n> */}/* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */return'این فیلد به اشتباه پیکربندی شده است و قابل ارسال نیست';/* </i18n> */},/**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */date_between({name,args}){/* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */return`${sentence(name)} باید بین ${date(args[0])} و ${date(args[1])} باشد.`;/* </i18n> */},/**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */email:'لطفا آدرس ایمیل معتبر وارد کنید.',/**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */ends_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */return`${sentence(name)} باید به ${list(args)} ختم شود.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */is({name}){/* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */return`${sentence(name)} مجاز نیست.`;/* </i18n> */},/**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */length({name,args:[first=0,second=Infinity]}){const min=first<=second?first:second;const max=second>=first?second:first;if(min==1&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */return`${sentence(name)} باید حداقل یک کاراکتر باشد.`;/* </i18n> */}if(min==0&&max){/* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */return`${sentence(name)} باید کمتر یا برابر با ${max} کاراکتر باشد.`;/* </i18n> */}if(min===max){/* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */return`${sentence(name)} باید ${max} کاراکتر طولانی باشد.`;/* </i18n> */}if(min&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */return`${sentence(name)} باید بزرگتر یا برابر با ${min} کاراکتر باشد.`;/* </i18n> */}/* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */return`${sentence(name)} باید بین ${min} و ${max} کاراکتر باشد.`;/* </i18n> */},/**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */matches({name}){/* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */return`${sentence(name)} مجاز نیست.`;/* </i18n> */},/**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */max({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */return`${name} نمی تواند بیش از ${args[0]} باشد.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */return`${sentence(name)} باید کمتر یا برابر با ${args[0]} باشد.`;/* </i18n> */},/**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */mime({name,args}){if(!args[0]){/* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */return'فرمت فایل مجاز نیست.';/* </i18n> */}/* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */return`${sentence(name)} باید از این نوع باشد: ${args[0]}`;/* </i18n> */},/**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */min({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */return`${name} نمی تواند کمتر از ${args[0]} باشد.\n`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */return`${sentence(name)} باید حداقل ${args[0]} باشد.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */not({name,node:{value}}){/* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */return`\"${value}\" یک ${name} مجاز نیست.`;/* </i18n> */},/**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */number({name}){/* <i18n case=\"Shown when the user-provided value is not a number.\"> */return`${sentence(name)} باید عدد باشد.`;/* </i18n> */},/**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */required({name}){/* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */return`پر کردن ${sentence(name)} اجباری است.`;/* </i18n> */},/**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */starts_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */return`${sentence(name)} باید با ${list(args)} شروع شود.`;/* </i18n> */},/**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */url(){/* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */return`لطفا یک URL معتبر وارد کنید.`;/* </i18n> */}};var fa=/*#__PURE__*/Object.freeze({__proto__:null,ui:ui$s,validation:validation$s});/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */ /**\n * Standard language for interface features.\n * @public\n */const ui$r={/**\n     * Shown on buttons for adding new items.\n     */add:'Lisää',/**\n     * Shown when a button to remove items is visible.\n     */remove:'Poista',/**\n     * Shown when there are multiple items to remove at the same time.\n     */removeAll:'Poista kaikki',/**\n     * Shown when all fields are not filled out correctly.\n     */incomplete:'Kaikkia kenttiä ei ole täytetty oikein.',/**\n     * Shown in a button inside a form to submit the form.\n     */submit:'Tallenna',/**\n     * Shown when no files are selected.\n     */noFiles:'Ei valittuja tiedostoja',/**\n     * Shown on buttons that move fields up in a list.\n     */moveUp:'Siirrä ylös',/**\n     * Shown on buttons that move fields down in a list.\n     */moveDown:'Siirrä alas',/**\n     * Shown when something is actively loading.\n     */isLoading:'Ladataan...',/**\n     * Shown when there is more to load.\n     */loadMore:'Lataa lisää',/**\n     * Shown on buttons that navigate state forward\n     */next:'Seuraava',/**\n     * Shown on buttons that navigate state backward\n     */prev:'Edellinen',/**\n     * Shown when adding all values.\n     */addAllValues:'Lisää kaikki arvot',/**\n     * Shown when adding selected values.\n     */addSelectedValues:'Lisää valitut arvot',/**\n     * Shown when removing all values.\n     */removeAllValues:'Poista kaikki arvot',/**\n     * Shown when removing selected values.\n     */removeSelectedValues:'Poista valitut arvot',/**\n     * Shown when there is a date to choose.\n     */chooseDate:'Valitse päivämäärä',/**\n     * Shown when there is a date to change.\n     */changeDate:'Vaihda päivämäärä',/**\n     * Shown when the date is invalid.\n     */invalidDate:'Valittu päivämäärä on virheellinen.'};/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */const validation$r={/**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */accepted({name}){/* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */return`Ole hyvä ja hyväksy ${name}`;/* </i18n> */},/**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */date_after({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */return`${sentence(name)} tulee olla ${date(args[0])} jälkeen.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} on oltava tulevaisuudessa.`;/* </i18n> */},/**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */alpha({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */return`${sentence(name)} saa sisältää vain kirjaimia.`;/* </i18n> */},/**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */alphanumeric({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */return`${sentence(name)} saa sisältää vain kirjaimia ja numeroita.`;/* </i18n> */},/**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */alpha_spaces({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */return`${sentence(name)} voivat sisältää vain kirjaimia ja välilyöntejä.`;/* </i18n> */},/**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */date_before({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */return`${sentence(name)} tulee olla ennen: ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} on oltava menneisyydessä.`;/* </i18n> */},/**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */between({name,args}){if(isNaN(args[0])||isNaN(args[1])){/* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */return`Tämä kenttä on täytetty virheellisesti joten sitä ei voitu lähettää.`;/* </i18n> */}const[a,b]=order(args[0],args[1]);/* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */return`${sentence(name)} on oltava välillä ${a} - ${b} `;/* </i18n> */},/**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */confirm({name}){/* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */return`${sentence(name)} ei täsmää.`;/* </i18n> */},/**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */date_format({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */return`${sentence(name)} ei ole validi päivämäärä, ole hyvä ja syötä muodossa: ${args[0]}`;/* </i18n> */}/* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */return'Tämä kenttä on täytetty virheellisesti joten sitä ei voitu lähettää.';/* </i18n> */},/**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */date_between({name,args}){/* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */return`${sentence(name)} on oltava välillä ${date(args[0])} - ${date(args[1])}`;/* </i18n> */},/**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */email:'Syötä validi sähköpostiosoite.',/**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */ends_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */return`${sentence(name)} tulee päättyä ${list(args)}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */is({name}){/* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */return`${sentence(name)} ei ole sallittu vaihtoehto.`;/* </i18n> */},/**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */length({name,args:[first=0,second=Infinity]}){const min=Number(first)<=Number(second)?first:second;const max=Number(second)>=Number(first)?second:first;if(min==1&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */return`${sentence(name)} on oltava vähintään yksi merkki.`;/* </i18n> */}if(min==0&&max){/* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */return`${sentence(name)} on oltava ${max} tai alle merkkiä.`;/* </i18n> */}if(min===max){/* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */return`${sentence(name)} pitäisi olla ${max} merkkiä pitkä.`;/* </i18n> */}if(min&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */return`${sentence(name)} on oltava vähintään ${min} merkkiä.`;/* </i18n> */}/* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */return`${sentence(name)} on oltava vähintään ${min}, enintään ${max} merkkiä.`;/* </i18n> */},/**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */matches({name}){/* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */return`${sentence(name)} ei ole sallittu arvo.`;/* </i18n> */},/**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */max({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */return`Valitse enintään ${args[0]} ${name} vaihtoehtoa.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */return`${sentence(name)} on oltava ${args[0]} tai alle.`;/* </i18n> */},/**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */mime({name,args}){if(!args[0]){/* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */return'Tiedostoja ei sallita.';/* </i18n> */}/* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */return`${sentence(name)} tulee olla ${args[0]}-tiedostotyyppiä.`;/* </i18n> */},/**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */min({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */return`Valitse vähintään ${args[0]} ${name} vaihtoehtoa.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */return`${sentence(name)} tulee olla ${args[0]} tai suurempi.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */not({name,node:{value}}){/* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */return`“${value}” ei ole sallittu ${name}.`;/* </i18n> */},/**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */number({name}){/* <i18n case=\"Shown when the user-provided value is not a number.\"> */return`Kentän ${sentence(name)} tulee olla numero.`;/* </i18n> */},/**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */required({name}){/* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */return`${sentence(name)} vaaditaan.`;/* </i18n> */},/**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */starts_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */return`${sentence(name)} on alettava ${list(args)}.`;/* </i18n> */},/**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */url(){/* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */return`Anna kelvollinen URL-osoite.`;/* </i18n> */}};var fi=/*#__PURE__*/Object.freeze({__proto__:null,ui:ui$r,validation:validation$r});/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */ /**\n * Standard language for interface features.\n * @public\n */const ui$q={/**\n     * Shown on buttons for adding new items.\n     */add:'Ajouter',/**\n     * Shown when a button to remove items is visible.\n     */remove:'Supprimer',/**\n     * Shown when there are multiple items to remove at the same time.\n     */removeAll:'Enlever tout',/**\n     * Shown when all fields are not filled out correctly.\n     */incomplete:'Désolé, tous les champs ne sont pas remplis correctement.',/**\n     * Shown in a button inside a form to submit the form.\n     */submit:'Valider',/**\n     * Shown when no files are selected.\n     */noFiles:'Aucun fichier choisi',/**\n     * Shown on buttons that move fields up in a list.\n     */moveUp:'Déplacez-vous',/**\n     * Shown on buttons that move fields down in a list.\n     */moveDown:'Déplacez-vous',/**\n     * Shown when something is actively loading.\n     */isLoading:'Chargement...',/**\n     * Shown when there is more to load.\n     */loadMore:'Chargez plus',/**\n     * Shown on buttons that navigate state forward\n     */next:'Suivant',/**\n     * Shown on buttons that navigate state backward\n     */prev:'Précédent',/**\n     * Shown when adding all values.\n     */addAllValues:'Ajouter toutes les valeurs',/**\n     * Shown when adding selected values.\n     */addSelectedValues:'Ajouter les valeurs sélectionnées',/**\n     * Shown when removing all values.\n     */removeAllValues:'Supprimer toutes les valeurs',/**\n     * Shown when removing selected values.\n     */removeSelectedValues:'Supprimer les valeurs sélectionnées',/**\n     * Shown when there is a date to choose.\n     */chooseDate:'Choisissez la date',/**\n     * Shown when there is a date to change.\n     */changeDate:'Modifier la date',/**\n     * Shown when the date is invalid.\n     */invalidDate:`La date sélectionnée n'est pas valide.`};/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */const validation$q={/**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */accepted({name}){/* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */return`Veuillez accepter le ${name}.`;/* </i18n> */},/**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */date_after({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */return`${sentence(name)} doit être postérieure au ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} doit être dans le futur.`;/* </i18n> */},/**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */alpha({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */return`${sentence(name)} ne peut contenir que des caractères alphabétiques.`;/* </i18n> */},/**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */alphanumeric({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */return`${sentence(name)} ne peut contenir que des lettres et des chiffres.`;/* </i18n> */},/**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */alpha_spaces({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */return`${sentence(name)} ne peuvent contenir que des lettres et des espaces.`;/* </i18n> */},/**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */date_before({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */return`${sentence(name)} doit être antérieure au ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} doit être dans le passé.`;/* </i18n> */},/**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */between({name,args}){if(isNaN(args[0])||isNaN(args[1])){/* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */return`Ce champ a été configuré de manière incorrecte et ne peut pas être soumis.`;/* </i18n> */}const[a,b]=order(args[0],args[1]);/* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */return`${sentence(name)} doit être comprise entre ${a} et ${b}.`;/* </i18n> */},/**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */confirm({name}){/* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */return`${sentence(name)} ne correspond pas.`;/* </i18n> */},/**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */date_format({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */return`${sentence(name)} n'est pas une date valide, veuillez utiliser le format ${args[0]}`;/* </i18n> */}/* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */return'Ce champ a été configuré de manière incorrecte et ne peut pas être soumis.';/* </i18n> */},/**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */date_between({name,args}){/* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */return`${sentence(name)} doit être comprise entre ${date(args[0])} et ${date(args[1])}`;/* </i18n> */},/**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */email:'Veuillez saisir une adresse email valide.',/**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */ends_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */return`${sentence(name)} ne se termine pas par ${list(args)}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */is({name}){/* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */return`${sentence(name)} n'est pas une valeur autorisée.`;/* </i18n> */},/**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */length({name,args:[first=0,second=Infinity]}){const min=Number(first)<=Number(second)?first:second;const max=Number(second)>=Number(first)?second:first;if(min==1&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */return`${sentence(name)} doit comporter au moins un caractère.`;/* </i18n> */}if(min==0&&max){/* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */return`${sentence(name)} doit être inférieur ou égal à ${max} caractères.`;/* </i18n> */}if(min===max){/* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */return`${sentence(name)} doit contenir ${max} caractères.`;/* </i18n> */}if(min&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */return`${sentence(name)} doit être supérieur ou égal à ${min} caractères.`;/* </i18n> */}/* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */return`${sentence(name)} doit être comprise entre ${min} et ${max} caractères.`;/* </i18n> */},/**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */matches({name}){/* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */return`${sentence(name)} n'est pas une valeur autorisée.`;/* </i18n> */},/**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */max({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */return`Ne peut pas avoir plus de ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */return`${sentence(name)} doit être inférieur ou égal à ${args[0]}.`;/* </i18n> */},/**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */mime({name,args}){if(!args[0]){/* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */return'Aucun format de fichier n’est autorisé';/* </i18n> */}/* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */return`${sentence(name)} doit être du type: ${args[0]}`;/* </i18n> */},/**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */min({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */return`Ne peut pas avoir moins de ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */return`${sentence(name)} doit être au moins de ${args[0]}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */not({name,node:{value}}){/* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */return`“${value}” n'est pas un ${name} autorisé.`;/* </i18n> */},/**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */number({name}){/* <i18n case=\"Shown when the user-provided value is not a number.\"> */return`${sentence(name)} doit être un nombre.`;/* </i18n> */},/**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */required({name}){/* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */return`${sentence(name)} est requis.`;/* </i18n> */},/**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */starts_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */return`${sentence(name)} ne commence pas par ${list(args)}.`;/* </i18n> */},/**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */url(){/* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */return`Entrez une URL valide.`;/* </i18n> */}};var fr=/*#__PURE__*/Object.freeze({__proto__:null,ui:ui$q,validation:validation$q});/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */ /**\n * Standard language for interface features.\n * @public\n */const ui$p={/**\n     * Shown on a button for adding additional items.\n     */add:'Foeg ta',/**\n     * Shown when a button to remove items is visible.\n     */remove:'Ferwider',/**\n     * Shown when there are multiple items to remove at the same time.\n     */removeAll:'Ferwider alles',/**\n     * Shown when all fields are not filled out correctly.\n     */incomplete:'Sorry, net alle fjilden binne korrekt ynfolle.',/**\n     * Shown in a button inside a form to submit the form.\n     */submit:'Ferstjoere',/**\n     * Shown when no files are selected.\n     */noFiles:'Gjin bestân keazen',/**\n     * Shown on buttons that move fields up in a list.\n     */moveUp:'Gean omheech',/**\n     * Shown on buttons that move fields down in a list.\n     */moveDown:'Nei ûnderen',/**\n     * Shown when something is actively loading.\n     */isLoading:'Lade…',/**\n     * Shown when there is more to load.\n     */loadMore:'Mear lade',/**\n     * Show on buttons that navigate state forward\n     */next:'Folgende',/**\n     * Show on buttons that navigate state backward\n     */prev:'Foarige',/**\n     * Shown when adding all values.\n     */addAllValues:'Foegje alle wearden ta',/**\n     * Shown when adding selected values.\n     */addSelectedValues:'Foegje selektearre wearden ta',/**\n     * Shown when removing all values.\n     */removeAllValues:'Fuortsmite alle wearden',/**\n     * Shown when removing selected values.\n     */removeSelectedValues:'Fuortsmite selektearre wearden',/**\n     * Shown when there is a date to choose.\n     */chooseDate:'Kies datum',/**\n     * Shown when there is a date to change.\n     */changeDate:'Feroarje datum',/**\n     * Shown when the date is invalid.\n     */invalidDate:'De selektearre datum is ûnjildich.'};/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */const validation$p={/**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */accepted({name}){/* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */return`Akseptearje de ${name}.`;/* </i18n> */},/**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */date_after({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */return`${sentence(name)} moat nei ${date(args[0])} wêze.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} moat yn de takomst lizze.`;/* </i18n> */},/**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */alpha({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */return`${sentence(name)} mei allinne alfabetyske tekens befetsje.`;/* </i18n> */},/**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */alphanumeric({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */return`${sentence(name)} mei allinne letters en sifers befetsje.`;/* </i18n> */},/**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */alpha_spaces({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */return`${sentence(name)} mei allinne letters en spaasjes befetsje.`;/* </i18n> */},/**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */date_before({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */return`${sentence(name)} moat foar ${date(args[0])} falle.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} moat yn it ferline wêze.`;/* </i18n> */},/**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */between({name,args}){if(isNaN(args[0])||isNaN(args[1])){/* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */return`Dit fjild is ferkeard konfigurearre en kin net ferstjoerd wurde.`;/* </i18n> */}const[a,b]=order(args[0],args[1]);/* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */return`${sentence(name)} moat tusken ${a} en ${b} lizze.`;/* </i18n> */},/**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */confirm({name}){/* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */return`${sentence(name)} komt net oerien.`;/* </i18n> */},/**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */date_format({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */return`${sentence(name)} is gjin jildige datum, brûk de notaasje ${args[0]}`;/* </i18n> */}/* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */return'Dit fjild is ferkeard konfigurearre en kin net ferstjoerd wurde';/* </i18n> */},/**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */date_between({name,args}){/* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */return`${sentence(name)} moat tusken ${date(args[0])} en ${date(args[1])} lizze`;/* </i18n> */},/**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */email:'Folje in jildich e-mailadres yn.',/**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */ends_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */return`${sentence(name)} einiget net mei ${list(args)}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */is({name}){/* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */return`${sentence(name)} is gjin tastiene wearde.`;/* </i18n> */},/**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */length({name,args:[first=0,second=Infinity]}){const min=Number(first)<=Number(second)?first:second;const max=Number(second)>=Number(first)?second:first;if(min==1&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */return`${sentence(name)} moat minimaal ien teken wêze.`;/* </i18n> */}if(min==0&&max){/* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */return`${sentence(name)} moat lytser wêze as of gelyk wêze oan ${max} tekens.`;/* </i18n> */}if(min===max){/* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */return`${sentence(name)} moat ${max} tekens lang wêze.`;/* </i18n> */}if(min&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */return`${sentence(name)} moat grutter wêze as of gelyk wêze oan ${min} tekens.`;/* </i18n> */}/* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */return`${sentence(name)} moat tusken de ${min} en ${max} tekens befetsje.`;/* </i18n> */},/**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */matches({name}){/* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */return`${sentence(name)} is gjin tastiene wearde.`;/* </i18n> */},/**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */max({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */return`Mei net mear as ${args[0]} ${name} hawwe.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */return`${sentence(name)} moat lytser wêze as of gelyk wêze oan ${args[0]}.`;/* </i18n> */},/**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */mime({name,args}){if(!args[0]){/* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */return'Gjin bestânsnotaasjes tastien.';/* </i18n> */}/* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */return`${sentence(name)} moat fan it type: ${args[0]} wêze`;/* </i18n> */},/**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */min({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */return`Mei net minder as ${args[0]} ${name} hawwe.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */return`${sentence(name)} moat minimaal ${args[0]} wêze.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */not({name,node:{value}}){/* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */return`\"${value}\" is gjin tastiene ${name}.`;/* </i18n> */},/**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */number({name}){/* <i18n case=\"Shown when the user-provided value is not a number.\"> */return`${sentence(name)} moat in getal wêze.`;/* </i18n> */},/**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */required({name}){/* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */return`${sentence(name)} is ferplicht.`;/* </i18n> */},/**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */starts_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */return`${sentence(name)} begjint net mei ${list(args)}.`;/* </i18n> */},/**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */url(){/* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */return`Doch der in jildige url by.`;/* </i18n> */}};var fy=/*#__PURE__*/Object.freeze({__proto__:null,ui:ui$p,validation:validation$p});/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */ /**\n * Standard language for interface features.\n * @public\n */const ui$o={/**\n     * Shown on a button for adding additional items.\n     */add:'הוסף',/**\n     * Shown when a button to remove items is visible.\n     */remove:'מחק',/**\n     * Shown when there are multiple items to remove at the same time.\n     */removeAll:'מחק הכל',/**\n     * Shown when all fields are not filled out correctly.\n     */incomplete:'שים לב, לא כל השדות מלאים כראוי.',/**\n     * Shown in a button inside a form to submit the form.\n     */submit:'שלח',/**\n     * Shown when no files are selected.\n     */noFiles:'לא נבחר קובץ..',/**\n     * Shown on buttons that move fields up in a list.\n     */moveUp:'הזז למעלה',/**\n     * Shown on buttons that move fields down in a list.\n     */moveDown:'הזז למטה',/**\n     * Shown when something is actively loading.\n     */isLoading:'טוען...',/**\n     * Shown when there is more to load.\n     */loadMore:'טען יותר',/**\n     * Shown on buttons that navigate state forward\n     */next:'הבא',/**\n     * Shown on buttons that navigate state backward\n     */prev:'הקודם',/**\n     * Shown when adding all values.\n     */addAllValues:'הוסף את כל הערכים',/**\n     * Shown when adding selected values.\n     */addSelectedValues:'הוספת ערכים נבחרים',/**\n     * Shown when removing all values.\n     */removeAllValues:'הסר את כל הערכים',/**\n     * Shown when removing selected values.\n     */removeSelectedValues:'הסר ערכים נבחרים',/**\n     * Shown when there is a date to choose.\n     */chooseDate:'בחר תאריך',/**\n     * Shown when there is a date to change.\n     */changeDate:'שינוי תאריך',/**\n     * Shown when the date is invalid.\n     */invalidDate:'התאריך שנבחר אינו חוקי.'};/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */const validation$o={/**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */accepted({name}){/* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */return`אנא אשר את ${name}.`;/* </i18n> */},/**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */date_after({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */return`${sentence(name)} חייב להיות אחרי ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} חייב להיות בעתיד.`;/* </i18n> */},/**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */alpha({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */return`${sentence(name)} חייב להכיל אותיות אלפבת.`;/* </i18n> */},/**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */alphanumeric({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */return`${sentence(name)} יכול להכיל רק מספרים ואותיות.`;/* </i18n> */},/**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */alpha_spaces({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */return`${sentence(name)} יכול להכיל רק אותיות ורווחים.`;/* </i18n> */},/**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */date_before({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */return`${sentence(name)} חייב להיות לפני ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} חייב להיות בעבר`;/* </i18n> */},/**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */between({name,args}){if(isNaN(args[0])||isNaN(args[1])){/* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */return`שדה זה לא הוגדר כראוי ולא יכול להישלח.`;/* </i18n> */}const[a,b]=order(args[0],args[1]);/* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */return`${sentence(name)} חייב להיות בין ${a} ו- ${b}.`;/* </i18n> */},/**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */confirm({name}){/* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */return`${sentence(name)} לא מתאים.`;/* </i18n> */},/**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */date_format({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */return`${sentence(name)} הוא לא תאריך תקין, אנא השתמש בפורמט ${args[0]}`;/* </i18n> */}/* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */return'שדה זה לא הוגדר כראוי ולא יכול להישלח.';/* </i18n> */},/**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */date_between({name,args}){/* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */return`${sentence(name)} חייב להיות בין ${date(args[0])} ו- ${date(args[1])}`;/* </i18n> */},/**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */email:'אנא הקלד אימייל תקין.',/**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */ends_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */return`${sentence(name)} לא מסתיים ב- ${list(args)}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */is({name}){/* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */return`${sentence(name)} הוא לא ערך מורשה.`;/* </i18n> */},/**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */length({name,args:[first=0,second=Infinity]}){const min=Number(first)<=Number(second)?first:second;const max=Number(second)>=Number(first)?second:first;if(min==1&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */return`${sentence(name)} חייב להיות לפחות תו אחד.`;/* </i18n> */}if(min==0&&max){/* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */return`${sentence(name)} חייב להיות פחות או שווה ל- ${max} תווים.`;/* </i18n> */}if(min===max){/* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */return`${sentence(name)} צריך להיות ${max} תווים ארוכים.`;/* </i18n> */}if(min&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */return`${sentence(name)} חייב להיות גדול או שווה ל- ${min} תווים.`;/* </i18n> */}/* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */return`${sentence(name)} חייב להיות בין ${min} ו- ${max} תווים.`;/* </i18n> */},/**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */matches({name}){/* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */return`${sentence(name)} הוא לא ערך תקין.`;/* </i18n> */},/**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */max({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */return`${name} לא יכול להיות עם יותר מ- ${args[0]}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */return`${sentence(name)} חייב להיות פחות או שווה ל- ${args[0]}.`;/* </i18n> */},/**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */mime({name,args}){if(!args[0]){/* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */return'פורמט הקובץ לא מורשה.';/* </i18n> */}/* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */return`${sentence(name)} חייב להיות מסוג: ${args[0]}`;/* </i18n> */},/**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */min({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */return`${name} לא יכול להיות עם פחות מ- ${args[0]}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */return`${sentence(name)} חייב להיות לפחות ${args[0]}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */not({name,node:{value}}){/* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */return`“${value}” לא מתאים ל- ${name}.`;/* </i18n> */},/**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */number({name}){/* <i18n case=\"Shown when the user-provided value is not a number.\"> */return`${sentence(name)} חייב להיות מספר.`;/* </i18n> */},/**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */required({name}){/* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */return`${sentence(name)} הינו חובה.`;/* </i18n> */},/**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */starts_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */return`${sentence(name)} לא מתחיל ב- ${list(args)}.`;/* </i18n> */},/**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */url(){/* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */return`הזן כתובת URL חוקית.`;/* </i18n> */}};var he=/*#__PURE__*/Object.freeze({__proto__:null,ui:ui$o,validation:validation$o});/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */ /**\n * Standard language for interface features.\n * @public\n */const ui$n={/**\n     * Shown on buttons for adding new items.\n     */add:'Dodaj',/**\n     * Shown when a button to remove items is visible.\n     */remove:'Ukloni',/**\n     * Shown when all fields are not filled out correctly.\n     */incomplete:'Pojedina polja nisu ispravno ispunjena.',/**\n     * Shown in a button inside a form to submit the form.\n     */submit:'Predaj',/**\n     * Shown on buttons that move fields up in a list.\n     */moveUp:'Pomaknite se gore',/**\n     * Shown on buttons that move fields down in a list.\n     */moveDown:'Pomakni se dolje',/**\n     * Shown when something is actively loading.\n     */isLoading:'Učitavanje...',/**\n     * Shown when there is more to load.\n     */loadMore:'Učitaj više',/**\n     * Shown on buttons that navigate state forward\n     */next:'Sljedeći',/**\n     * Shown on buttons that navigate state backward\n     */prev:'prijašnji',/**\n     * Shown when adding all values.\n     */addAllValues:'Dodajte sve vrijednosti',/**\n     * Shown when adding selected values.\n     */addSelectedValues:'Dodavanje odabranih vrijednosti',/**\n     * Shown when removing all values.\n     */removeAllValues:'Ukloni sve vrijednosti',/**\n     * Shown when removing selected values.\n     */removeSelectedValues:'Ukloni odabrane vrijednosti',/**\n     * Shown when there is a date to choose.\n     */chooseDate:'Odaberite datum',/**\n     * Shown when there is a date to change.\n     */changeDate:'Promijeni datum',/**\n     * Shown when the date is invalid.\n     */invalidDate:'Odabrani datum je nevažeći.'};/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */const validation$n={/**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */accepted({name}){/* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */return`Potrebno je potvrditi ${name}.`;/* </i18n> */},/**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */date_after({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */return`${sentence(name)} mora biti u periodu poslije ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} mora biti u budućnosti.`;/* </i18n> */},/**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */alpha({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */return`${sentence(name)} mora sadržavati samo slova.`;/* </i18n> */},/**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */alphanumeric({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */return`${sentence(name)} mora sadržavati slova i brojeve.`;/* </i18n> */},/**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */alpha_spaces({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */return`${sentence(name)} mogu sadržavati samo slova i razmake..`;/* </i18n> */},/**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */date_before({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */return`${sentence(name)} mora biti prije ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} mora biti u prošlosti.`;/* </i18n> */},/**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */between({name,args}){if(isNaN(args[0])||isNaN(args[1])){/* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */return`Format sadržaja nije ispravan i ne može biti predan.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */return`${sentence(name)} mora biti između ${args[0]} i ${args[1]}.`;/* </i18n> */},/**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */confirm({name}){/* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */return`${sentence(name)} ne odgovara zadanoj vrijednosti.`;/* </i18n> */},/**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */date_format({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */return`${sentence(name)} nije ispravan format datuma. Molimo koristite sljedeći format: ${args[0]}`;/* </i18n> */}/* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */return'Ovo polje nije ispravno postavljeno i ne može biti predano.';/* </i18n> */},/**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */date_between({name,args}){/* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */return`${sentence(name)} mora biti vrijednost između ${date(args[0])} i ${date(args[1])}`;/* </i18n> */},/**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */email:'Molimo upišite ispravnu email adresu.',/**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */ends_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */return`${sentence(name)} ne završava s ${list(args)}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */is({name}){/* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */return`${sentence(name)} nije dopuštena vrijednost.`;/* </i18n> */},/**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */length({name,args:[first=0,second=Infinity]}){const min=first<=second?first:second;const max=second>=first?second:first;if(min==1&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */return`${sentence(name)} mora sadržavati barem jedan znak.`;/* </i18n> */}if(min==0&&max){/* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */return`${sentence(name)} mora imati ${max} ili manje znakova.`;/* </i18n> */}if(min===max){/* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */return`${sentence(name)} trebao bi biti dugačak ${max} znakova.`;/* </i18n> */}if(min&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */return`${sentence(name)} mora imati barem ${min} znakova.`;/* </i18n> */}/* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */return`Broj znakova za polje ${sentence(name)} mora biti između ${min} i ${max}.`;/* </i18n> */},/**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */matches({name}){/* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */return`${sentence(name)} nije dozvoljena vrijednost.`;/* </i18n> */},/**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */max({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */return`Ne smije imati više od ${args[0]} ${name} polja.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */return`${sentence(name)} mora imati vrijednost manju ili jednaku ${args[0]}.`;/* </i18n> */},/**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */mime({name,args}){if(!args[0]){/* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */return'Format datoteke nije dozvoljen.';/* </i18n> */}/* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */return`Format datoteke na polju ${sentence(name)} mora odgovarati: ${args[0]}`;/* </i18n> */},/**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */min({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */return`Broj upisanih vrijednosti na polju ${name} mora biti barem ${args[0]}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */return`${sentence(name)} mora biti barem ${args[0]}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */not({name,node:{value}}){/* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */return`“${value}” nije dozvoljena vrijednost na polju ${name}.`;/* </i18n> */},/**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */number({name}){/* <i18n case=\"Shown when the user-provided value is not a number.\"> */return`${sentence(name)} mora biti broj.`;/* </i18n> */},/**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */required({name}){/* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */return`${sentence(name)} je obavezno.`;/* </i18n> */},/**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */starts_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */return`${sentence(name)} ne počinje s ${list(args)}.`;/* </i18n> */},/**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */url(){/* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */return`Unesite valjanu URL adresu.`;/* </i18n> */}};var hr=/*#__PURE__*/Object.freeze({__proto__:null,ui:ui$n,validation:validation$n});/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */ /**\n * Standard language for interface features.\n * @public\n */const ui$m={/**\n     * Shown on a button for adding additional items.\n     */add:'Hozzáadás',/**\n     * Shown when a button to remove items is visible.\n     */remove:'Eltávolítás',/**\n     * Shown when there are multiple items to remove at the same time.\n     */removeAll:'Összes eltávolítása',/**\n     * Shown when all fields are not filled out correctly.\n     */incomplete:'Sajnáljuk, nem minden mező lett helyesen kitöltve.',/**\n     * Shown in a button inside a form to submit the form.\n     */submit:'Beküldés',/**\n     * Shown when no files are selected.\n     */noFiles:'Nincs fájl kiválasztva',/**\n     * Shown on buttons that move fields up in a list.\n     */moveUp:'Mozgás felfelé',/**\n     * Shown on buttons that move fields down in a list.\n     */moveDown:'Mozgás lefelé',/**\n     * Shown when something is actively loading.\n     */isLoading:'Betöltés...',/**\n     * Shown when there is more to load.\n     */loadMore:'Töltsön be többet',/**\n     * Shown on buttons that navigate state forward\n     */next:'Következő',/**\n     * Shown on buttons that navigate state backward\n     */prev:'Előző',/**\n     * Shown when adding all values.\n     */addAllValues:'Adja hozzá az összes értéket',/**\n     * Shown when adding selected values.\n     */addSelectedValues:'Kiválasztott értékek hozzáadása',/**\n     * Shown when removing all values.\n     */removeAllValues:'Távolítsa el az összes értéket',/**\n     * Shown when removing selected values.\n     */removeSelectedValues:'A kiválasztott értékek eltávolítása',/**\n     * Shown when there is a date to choose.\n     */chooseDate:'Válassza ki a dátumot',/**\n     * Shown when there is a date to change.\n     */changeDate:'Dátum módosítása',/**\n     * Shown when the date is invalid.\n     */invalidDate:'A kiválasztott dátum érvénytelen.'};/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */const validation$m={/**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */accepted({name}){/* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */return`Fogadja el a ${name} mezőt.`;/* </i18n> */},/**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */date_after({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */return`${sentence(name)} mezőnek ${date(args[0])} után kell lennie.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} mezőnek a jövőben kell lennie.`;/* </i18n> */},/**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */alpha({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */return`${sentence(name)} csak alfanumerikus karaktereket tartalmazhat.`;/* </i18n> */},/**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */alphanumeric({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */return`${sentence(name)} csak betűket és számokat tartalmazhat.`;/* </i18n> */},/**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */alpha_spaces({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */return`${sentence(name)} csak betűket és szóközöket tartalmazhat.`;/* </i18n> */},/**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */date_before({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */return`${sentence(name)} mezőnek ${date(args[0])} előtt kell lennie.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} mezőnek a múltban kell lennie.`;/* </i18n> */},/**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */between({name,args}){if(isNaN(args[0])||isNaN(args[1])){/* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */return`Ez a mező hibásan lett konfigurálva, így nem lehet beküldeni.`;/* </i18n> */}const[a,b]=order(args[0],args[1]);/* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */return`A ${sentence(name)} mezőnek ${a} és ${b} között kell lennie.`;/* </i18n> */},/**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */confirm({name}){/* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */return`${sentence(name)} nem egyezik.`;/* </i18n> */},/**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */date_format({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */return`${sentence(name)} nem érvényes dátum, ${args[0]} formátumot használj`;/* </i18n> */}/* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */return'Ez a mező hibásan lett konfigurálva, így nem lehet beküldeni.';/* </i18n> */},/**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */date_between({name,args}){/* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */return`${sentence(name)} mezőnek ${date(args[0])} és ${args[1]} között kell lennie`;/* </i18n> */},/**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */email:'Kérjük, érvényes email címet adjon meg.',/**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */ends_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */return`${sentence(name)} mező nem a kijelölt (${list(args)}) módon ér véget.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */is({name}){/* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */return`${sentence(name)} nem engedélyezett érték.`;/* </i18n> */},/**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */length({name,args:[first=0,second=Infinity]}){const min=Number(first)<=Number(second)?first:second;const max=Number(second)>=Number(first)?second:first;if(min==1&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */return`${sentence(name)} mezőnek legalább egy karakteresnek kell lennie.`;/* </i18n> */}if(min==0&&max){/* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */return`${sentence(name)} mezőnek maximum ${max} karakteresnek kell lennie.`;/* </i18n> */}if(min===max){/* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */return`${sentence(name)} ${max} karakter hosszúnak kell lennie.`;/* </i18n> */}if(min&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */return`${sentence(name)} mezőnek minimum ${min} karakteresnek kell lennie.`;/* </i18n> */}/* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */return`${sentence(name)} mezőnek ${min} és ${max} karakter között kell lennie.`;/* </i18n> */},/**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */matches({name}){/* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */return`${sentence(name)} nem engedélyezett érték.`;/* </i18n> */},/**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */max({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */return`Nem lehet több mint ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */return`${sentence(name)} nem lehet nagyobb, mint ${args[0]}.`;/* </i18n> */},/**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */mime({name,args}){if(!args[0]){/* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */return'Nincsenek támogatott fájlformátumok.';/* </i18n> */}/* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */return`${sentence(name)}-nak/nek a következőnek kell lennie: ${args[0]}`;/* </i18n> */},/**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */min({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */return`Nem lehet kevesebb, mint ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */return`${sentence(name)}-nak/nek minimum ${args[0]}-nak/nek kell lennie.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */not({name,node:{value}}){/* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */return`\"${value}\" nem engedélyezett ${name}.`;/* </i18n> */},/**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */number({name}){/* <i18n case=\"Shown when the user-provided value is not a number.\"> */return`${sentence(name)} mezőnek számnak kell lennie.`;/* </i18n> */},/**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */required({name}){/* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */return`${sentence(name)} mező kötelező.`;/* </i18n> */},/**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */starts_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */return`${sentence(name)} nem a következővel kezdődik: ${list(args)}.`;/* </i18n> */},/**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */url(){/* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */return`Kérjük, adjon meg egy érvényes URL-t.`;/* </i18n> */}};var hu=/*#__PURE__*/Object.freeze({__proto__:null,ui:ui$m,validation:validation$m});/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */ /**\n * Standard language for interface features.\n * @public\n */const ui$l={/**\n     * Shown on buttons for adding new items.\n     */add:'Tambah',/**\n     * Shown when a button to remove items is visible.\n     */remove:'Hapus',/**\n     * Shown when there are multiple items to remove at the same time.\n     */removeAll:'Hapus semua',/**\n     * Shown when all fields are not filled out correctly.\n     */incomplete:'Maaf, tidak semua bidang formulir terisi dengan benar',/**\n     * Shown in a button inside a form to submit the form.\n     */submit:'Kirim',/**\n     * Shown when no files are selected.\n     */noFiles:'Tidak ada file yang dipilih',/**\n     * Shown on buttons that move fields up in a list.\n     */moveUp:'Pindah ke atas',/**\n     * Shown on buttons that move fields down in a list.\n     */moveDown:'Pindah ke bawah',/**\n     * Shown when something is actively loading.\n     */isLoading:'Memuat...',/**\n     * Shown when there is more to load.\n     */loadMore:'Muat lebih',/**\n     * Shown on buttons that navigate state forward\n     */next:'Berikutnya',/**\n     * Shown on buttons that navigate state backward\n     */prev:'Sebelumnya',/**\n     * Shown when adding all values.\n     */addAllValues:'Tambahkan semua nilai',/**\n     * Shown when adding selected values.\n     */addSelectedValues:'Tambahkan nilai yang dipilih',/**\n     * Shown when removing all values.\n     */removeAllValues:'Hapus semua nilai',/**\n     * Shown when removing selected values.\n     */removeSelectedValues:'Hapus nilai yang dipilih',/**\n     * Shown when there is a date to choose.\n     */chooseDate:'Pilih tanggal',/**\n     * Shown when there is a date to change.\n     */changeDate:'Ubah tanggal',/**\n     * Shown when the date is invalid.\n     */invalidDate:'Tanggal yang dipilih tidak valid.'};/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */const validation$l={/**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */accepted({name}){/* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */return`Tolong terima kolom ${name}.`;/* </i18n> */},/**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */date_after({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */return`${sentence(name)} nilainya harus lebih dari waktu ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} harus berisi waktu di masa depan.`;/* </i18n> */},/**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */alpha({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */return`${sentence(name)} hanya bisa diisi huruf alfabet.`;/* </i18n> */},/**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */alphanumeric({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */return`${sentence(name)} hanya bisa diisi huruf dan angka.`;/* </i18n> */},/**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */alpha_spaces({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */return`${sentence(name)} hanya boleh berisi huruf dan spasi..`;/* </i18n> */},/**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */date_before({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */return`${sentence(name)} nilainya harus kurang dari waktu ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} harus berisi waktu yang sudah lampau.`;/* </i18n> */},/**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */between({name,args}){if(isNaN(args[0])||isNaN(args[1])){/* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */return`Kolom ini tidak diisi dengan benar sehingga tidak bisa dikirim`;/* </i18n> */}const[a,b]=order(args[0],args[1]);/* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */return`${sentence(name)} harus bernilai diantara ${a} dan ${b}.`;/* </i18n> */},/**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */confirm({name}){/* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */return`${sentence(name)} nilainya tidak cocok.`;/* </i18n> */},/**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */date_format({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */return`${sentence(name)} waktu tidak cocok, mohon gunakan format waktu ${args[0]}`;/* </i18n> */}/* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */return'Kolom ini tidak diisi dengan benar sehingga tidak bisa dikirim';/* </i18n> */},/**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */date_between({name,args}){/* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */return`${sentence(name)} harus diantara waktu ${date(args[0])} dan waktu ${date(args[1])}`;/* </i18n> */},/**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */email:'Tolong tulis alamat email yang benar.',/**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */ends_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */return`${sentence(name)} nilainya tidak berakhiran dengan ${list(args)}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */is({name}){/* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */return`${sentence(name)} adalah nilai yang tidak diizinkan.`;/* </i18n> */},/**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */length({name,args:[first=0,second=Infinity]}){const min=Number(first)<=Number(second)?first:second;const max=Number(second)>=Number(first)?second:first;if(min==1&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */return`${sentence(name)} nilainya setidaknya berisi satu karakter.`;/* </i18n> */}if(min==0&&max){/* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */return`${sentence(name)} jumlah karakternya harus kurang dari atau sama dengan ${max} karakter.`;/* </i18n> */}if(min===max){/* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */return`${sentence(name)} harus ${max} karakter panjang.`;/* </i18n> */}if(min&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */return`${sentence(name)} jumlah karakternya harus lebih dari atau sama dengan ${min} karakter.`;/* </i18n> */}/* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */return`${sentence(name)} jumlah karakternya hanya bisa antara ${min} dan ${max} karakter.`;/* </i18n> */},/**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */matches({name}){/* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */return`${sentence(name)} nilainya tidak diizinkan.`;/* </i18n> */},/**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */max({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */return`Tidak bisa memiliki lebih dari ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */return`${sentence(name)} harus lebih kecil atau sama dengan ${args[0]}.`;/* </i18n> */},/**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */mime({name,args}){if(!args[0]){/* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */return'Format file tidak diizinkan';/* </i18n> */}/* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */return`${sentence(name)} hanya bisa bertipe: ${args[0]}`;/* </i18n> */},/**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */min({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */return`Tidak boleh kurang dari ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */return`${sentence(name)} setidaknya harus berisi ${args[0]}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */not({name,node:{value}}){/* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */return`“${value}” adalah nilai yang tidak diperbolehkan untuk ${name}.`;/* </i18n> */},/**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */number({name}){/* <i18n case=\"Shown when the user-provided value is not a number.\"> */return`${sentence(name)} harus berupa angka.`;/* </i18n> */},/**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */required({name}){/* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */return`${sentence(name)} harus diisi.`;/* </i18n> */},/**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */starts_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */return`${sentence(name)} tidak dimulai dengan ${list(args)}.`;/* </i18n> */},/**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */url(){/* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */return`Harap masukkan URL yang valid.`;/* </i18n> */}};var id=/*#__PURE__*/Object.freeze({__proto__:null,ui:ui$l,validation:validation$l});/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */ /**\n * Standard language for interface features.\n * @public\n */const ui$k={/**\n     * Shown on buttons for adding new items.\n     */add:'Inserisci',/**\n     * Shown when a button to remove items is visible.\n     */remove:'Rimuovi',/**\n     * Shown when there are multiple items to remove at the same time.\n     */removeAll:'Rimuovi tutti',/**\n     * Shown when all fields are not filled out correctly.\n     */incomplete:'Ci dispiace, non tutti i campi sono compilati correttamente.',/**\n     * Shown in a button inside a form to submit the form.\n     */submit:'Invia',/**\n     * Shown when no files are selected.\n     */noFiles:'Nessun file selezionato',/**\n     * Shown on buttons that move fields up in a list.\n     */moveUp:'Sposta in alto',/**\n     * Shown on buttons that move fields down in a list.\n     */moveDown:'Sposta giù',/**\n     * Shown when something is actively loading.\n     */isLoading:'Caricamento...',/**\n     * Shown when there is more to load.\n     */loadMore:'Carica altro',/**\n     * Shown on buttons that navigate state forward\n     */next:'Prossimo',/**\n     * Shown on buttons that navigate state backward\n     */prev:'Precedente',/**\n     * Shown when adding all values.\n     */addAllValues:'Aggiungi tutti i valori',/**\n     * Shown when adding selected values.\n     */addSelectedValues:'Aggiungi valori selezionati',/**\n     * Shown when removing all values.\n     */removeAllValues:'Rimuovi tutti i valori',/**\n     * Shown when removing selected values.\n     */removeSelectedValues:'Rimuovi i valori selezionati',/**\n     * Shown when there is a date to choose.\n     */chooseDate:'Scegli la data',/**\n     * Shown when there is a date to change.\n     */changeDate:'Cambia data',/**\n     * Shown when the date is invalid.\n     */invalidDate:'La data selezionata non è valida.'};/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */const validation$k={/**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */accepted({name}){/* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */return`Si prega di accettare ${name}.`;/* </i18n> */},/**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */date_after({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */return`la data ${sentence(name)} deve essere successiva ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */return`la data ${sentence(name)} deve essere nel futuro.`;/* </i18n> */},/**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */alpha({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */return`${sentence(name)} può contenere solo caratteri alfanumerici.`;/* </i18n> */},/**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */alphanumeric({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */return`${sentence(name)} può contenere solo lettere e numeri.`;/* </i18n> */},/**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */alpha_spaces({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */return`${sentence(name)} può contenere solo lettere e spazi.`;/* </i18n> */},/**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */date_before({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */return`la data ${sentence(name)} deve essere antecedente ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} deve essere nel passato.`;/* </i18n> */},/**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */between({name,args}){if(isNaN(args[0])||isNaN(args[1])){/* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */return`Questo campo è stato configurato male e non può essere inviato.`;/* </i18n> */}const[a,b]=order(args[0],args[1]);/* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */return`${sentence(name)} deve essere tra ${a} e ${b}.`;/* </i18n> */},/**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */confirm({name}){/* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */return`${sentence(name)} non corrisponde.`;/* </i18n> */},/**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */date_format({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */return`${sentence(name)} non è una data valida, per favore usa il formato ${args[0]}`;/* </i18n> */}/* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */return'Questo campo è stato configurato in modo errato e non può essere inviato.';/* </i18n> */},/**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */date_between({name,args}){/* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */return`${sentence(name)} deve essere tra ${date(args[0])} e ${date(args[1])}`;/* </i18n> */},/**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */email:'Per favore inserire un indirizzo email valido.',/**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */ends_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */return`${sentence(name)} non termina con ${list(args)}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */is({name}){/* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */return`${sentence(name)} non è un valore consentito.`;/* </i18n> */},/**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */length({name,args:[first=0,second=Infinity]}){const min=Number(first)<=Number(second)?first:second;const max=Number(second)>=Number(first)?second:first;if(min==1&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */return`${sentence(name)} deve contenere almeno un carattere.`;/* </i18n> */}if(min==0&&max){/* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */return`${sentence(name)} deve essere minore o uguale a ${max} caratteri.`;/* </i18n> */}if(min===max){/* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */return`${sentence(name)} deve contenere ${max} caratteri.`;/* </i18n> */}if(min&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */return`${sentence(name)} deve essere maggiore o uguale a ${min} caratteri.`;/* </i18n> */}/* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */return`${sentence(name)} deve essere tra ${min} e ${max} caratteri.`;/* </i18n> */},/**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */matches({name}){/* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */return`${sentence(name)} non è un valore consentito.`;/* </i18n> */},/**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */max({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */return`Non può avere più di ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */return`${sentence(name)} deve essere minore o uguale a ${args[0]}.`;/* </i18n> */},/**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */mime({name,args}){if(!args[0]){/* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */return'Formato file non consentito.';/* </i18n> */}/* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */return`${sentence(name)} deve essere di tipo: ${args[0]}`;/* </i18n> */},/**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */min({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */return`Non può avere meno di ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */return`${sentence(name)} deve essere almeno ${args[0]}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */not({name,node:{value}}){/* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */return`\"${value}\" non è un ${name} consentito.`;/* </i18n> */},/**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */number({name}){/* <i18n case=\"Shown when the user-provided value is not a number.\"> */return`${sentence(name)} deve essere un numero.`;/* </i18n> */},/**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */required({name}){/* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */return`${sentence(name)} è richiesto.`;/* </i18n> */},/**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */starts_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */return`${sentence(name)} non inizia con ${list(args)}.`;/* </i18n> */},/**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */url(){/* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */return`Inserisci un URL valido.`;/* </i18n> */}};var it=/*#__PURE__*/Object.freeze({__proto__:null,ui:ui$k,validation:validation$k});/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */ /**\n * Standard language for interface features.\n * @public\n */const ui$j={/**\n     * Shown on buttons for adding new items.\n     */add:'追加',/**\n     * Shown when a button to remove items is visible.\n     */remove:'削除',/**\n     * Shown when there are multiple items to remove at the same time.\n     */removeAll:'全て削除',/**\n     * Shown when all fields are not filled out correctly.\n     */incomplete:'項目が正しく入力されていません。',/**\n     * Shown in a button inside a form to submit the form.\n     */submit:'送信',/**\n     * Shown when no files are selected.\n     */noFiles:'ファイルが選択されていません',/**\n     * Shown on buttons that move fields up in a list.\n     */moveUp:'上に移動',/**\n     * Shown on buttons that move fields down in a list.\n     */moveDown:'下へ移動',/**\n     * Shown when something is actively loading.\n     */isLoading:'読み込み中...',/**\n     * Shown when there is more to load.\n     */loadMore:'さらに読み込む',/**\n     * Shown on buttons that navigate state forward\n     */next:'[次へ]',/**\n     * Shown on buttons that navigate state backward\n     */prev:'前へ',/**\n     * Shown when adding all values.\n     */addAllValues:'すべての値を追加',/**\n     * Shown when adding selected values.\n     */addSelectedValues:'選択した値を追加',/**\n     * Shown when removing all values.\n     */removeAllValues:'すべての値を削除',/**\n     * Shown when removing selected values.\n     */removeSelectedValues:'選択した値を削除',/**\n     * Shown when there is a date to choose.\n     */chooseDate:'日付を選択',/**\n     * Shown when there is a date to change.\n     */changeDate:'日付を変更',/**\n     * Shown when the date is invalid.\n     */invalidDate:'選択した日付は無効です。'};/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */const validation$j={/**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */accepted({name}){/* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */return`${name}の同意が必要です。`;/* </i18n> */},/**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */date_after({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */return`${sentence(name)}は${date(args[0])}より後の日付である必要があります。`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */return`${sentence(name)}は将来の日付でなければなりません。`;/* </i18n> */},/**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */alpha({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */return`${sentence(name)}には英字のみを含めることができます。`;/* </i18n> */},/**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */alphanumeric({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */return`${sentence(name)}には、文字と数字のみを含めることができます。`;/* </i18n> */},/**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */alpha_spaces({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */return`${sentence(name)}には、文字とスペースのみを含めることができます。`;/* </i18n> */},/**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */date_before({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */return`${sentence(name)}は${date(args[0])}より前の日付である必要があります。`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */return`${sentence(name)}は過去の日付である必要があります。`;/* </i18n> */},/**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */between({name,args}){if(isNaN(args[0])||isNaN(args[1])){/* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */return`このフィールドは正しく構成されていないため、送信できません。`;/* </i18n> */}const[a,b]=order(args[0],args[1]);/* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */return`${sentence(name)}は${a}と${b}の間にある必要があります。`;/* </i18n> */},/**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */confirm({name}){/* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */return`${sentence(name)}が一致しません。`;/* </i18n> */},/**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */date_format({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */return`${sentence(name)}は有効な日付ではありません。${args[0]}の形式を使用してください。`;/* </i18n> */}/* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */return'このフィールドは正しく構成されておらず、送信できません。';/* </i18n> */},/**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */date_between({name,args}){/* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */return`${sentence(name)}は${date(args[0])}と${date(args[1])}の間にある必要があります。`;/* </i18n> */},/**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */email:'有効なメールアドレスを入力してください。',/**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */ends_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */return`${sentence(name)}は${list(args)}で終わっていません。`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */is({name}){/* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */return`${sentence(name)}は許可された値ではありません。`;/* </i18n> */},/**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */length({name,args:[first=0,second=Infinity]}){const min=Number(first)<=Number(second)?first:second;const max=Number(second)>=Number(first)?second:first;if(min==1&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */return`${sentence(name)}は少なくとも1文字である必要があります。`;/* </i18n> */}if(min==0&&max){/* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */return`${sentence(name)}は${max}文字以下である必要があります。`;/* </i18n> */}if(min===max){/* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */return`${sentence(name)} の長さは ${max} 文字でなければなりません。`;/* </i18n> */}if(min&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */return`${sentence(name)}は${min}文字以上である必要があります。`;/* </i18n> */}/* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */return`${sentence(name)}は${min}から${max}文字の間でなければなりません。`;/* </i18n> */},/**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */matches({name}){/* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */return`${sentence(name)}は許可された値ではありません。`;/* </i18n> */},/**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */max({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */return`${name}は${args[0]}を超えることはできません。`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */return`${sentence(name)}は${args[0]}以下である必要があります。`;/* </i18n> */},/**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */mime({name,args}){if(!args[0]){/* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */return'ファイル形式は許可されていません。';/* </i18n> */}/* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */return`${sentence(name)}は${args[0]}である必要があります。`;/* </i18n> */},/**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */min({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */return`${name}は${args[0]}未満にすることはできません。`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */return`${sentence(name)}は少なくとも${args[0]}である必要があります。`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */not({name,node:{value}}){/* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */return`“${value}”は許可された${name}ではありません。`;/* </i18n> */},/**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */number({name}){/* <i18n case=\"Shown when the user-provided value is not a number.\"> */return`${sentence(name)}は数値でなければなりません。`;/* </i18n> */},/**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */required({name}){/* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */return`${sentence(name)}は必須です。`;/* </i18n> */},/**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */starts_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */return`${sentence(name)}は${list(args)}で始まっていません。`;/* </i18n> */},/**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */url(){/* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */return`有効な URL を入力してください。`;/* </i18n> */}};var ja=/*#__PURE__*/Object.freeze({__proto__:null,ui:ui$j,validation:validation$j});/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */ /**\n * Standard language for interface features.\n * @public\n */const ui$i={/**\n     * Shown on a button for adding additional items.\n     */add:'қосу',/**\n     * Shown when a button to remove items is visible.\n     */remove:'Жою',/**\n     * Shown when there are multiple items to remove at the same time.\n     */removeAll:'Барлығын жою',/**\n     * Shown when all fields are not filled out correctly.\n     */incomplete:'Кешіріңіз, барлық өрістер дұрыс толтырылмаған.',/**\n     * Shown in a button inside a form to submit the form.\n     */submit:'Жіберу',/**\n     * Shown when no files are selected.\n     */noFiles:'Ешбір файл таңдалмады',/**\n     * Shown on buttons that move fields up in a list.\n     */moveUp:'Жоғары жылжу',/**\n     * Shown on buttons that move fields down in a list.\n     */moveDown:'Төмен жылжытыңыз',/**\n     * Shown when something is actively loading.\n     */isLoading:'Жүктеу...',/**\n     * Shown when there is more to load.\n     */loadMore:'Көбірек жүктеңіз',/**\n     * Shown on buttons that navigate state forward\n     */next:'Келесі',/**\n     * Shown on buttons that navigate state backward\n     */prev:'Алдыңғы',/**\n     * Shown when adding all values.\n     */addAllValues:'Барлық мәндерді қосыңыз',/**\n     * Shown when adding selected values.\n     */addSelectedValues:'Таңдалған мәндерді қосыңыз',/**\n     * Shown when removing all values.\n     */removeAllValues:'Барлық мәндерді алып тастаңыз',/**\n     * Shown when removing selected values.\n     */removeSelectedValues:'Таңдалған мәндерді алып тастаңыз',/**\n     * Shown when there is a date to choose.\n     */chooseDate:'Күнді таңдаңыз',/**\n     * Shown when there is a date to change.\n     */changeDate:'Өзгерту күні',/**\n     * Shown when the date is invalid.\n     */invalidDate:'Таңдалған күн жарамсыз.'};/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */const validation$i={/**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */accepted({name}){/* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */return`қабылдаңыз ${name}.`;/* </i18n> */},/**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */date_after({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */return`${sentence(name)} кейін болуы керек ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} болашақта болуы керек.`;/* </i18n> */},/**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */alpha({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */return`${sentence(name)} тек алфавиттік таңбаларды қамтуы мүмкін.`;/* </i18n> */},/**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */alphanumeric({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */return`${sentence(name)} тек әріптер мен сандардан тұруы мүмкін.`;/* </i18n> */},/**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */alpha_spaces({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */return`${sentence(name)} тек әріптер мен бос орындар болуы мүмкін.`;/* </i18n> */},/**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */date_before({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */return`${sentence(name)} бұрын болуы керек ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} өткенде болуы керек.`;/* </i18n> */},/**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */between({name,args}){if(isNaN(args[0])||isNaN(args[1])){/* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */return`Бұл өріс қате конфигурацияланған және оны жіберу мүмкін емес.`;/* </i18n> */}const[a,b]=order(args[0],args[1]);/* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */return`${sentence(name)} арасында болуы керек ${a} және ${b}.`;/* </i18n> */},/**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */confirm({name}){/* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */return`${sentence(name)} сәйкес келмейді.`;/* </i18n> */},/**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */date_format({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */return`${sentence(name)} жарамды күн емес, пішімді пайдаланыңыз ${args[0]}`;/* </i18n> */}/* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */return'Бұл өріс қате конфигурацияланған және оны жіберу мүмкін емес';/* </i18n> */},/**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */date_between({name,args}){/* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */return`${sentence(name)} арасында болуы керек ${date(args[0])} және ${date(args[1])}`;/* </i18n> */},/**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */email:'Өтінеміз қолданыстағы электронды пошта адресін енгізіңіз.',/**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */ends_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */return`${sentence(name)} -мен бітпейді ${list(args)}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */is({name}){/* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */return`${sentence(name)} рұқсат етілген мән емес.`;/* </i18n> */},/**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */length({name,args:[first=0,second=Infinity]}){const min=Number(first)<=Number(second)?first:second;const max=Number(second)>=Number(first)?second:first;if(min==1&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */return`${sentence(name)} кем дегенде бір таңба болуы керек.`;/* </i18n> */}if(min==0&&max){/* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */return`${sentence(name)} кем немесе тең болуы керек ${max} кейіпкерлер.`;/* </i18n> */}if(min===max){/* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */return`${sentence(name)} ${max} таңбалары болуы керек.`;/* </i18n> */}if(min&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */return`${sentence(name)} артық немесе тең болуы керек ${min} кейіпкерлер.`;/* </i18n> */}/* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */return`${sentence(name)} арасында болуы керек ${min} және ${max} кейіпкерлер.`;/* </i18n> */},/**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */matches({name}){/* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */return`${sentence(name)} рұқсат етілген мән емес.`;/* </i18n> */},/**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */max({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */return`артық болуы мүмкін емес ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */return`${sentence(name)} кем немесе тең болуы керек ${args[0]}.`;/* </i18n> */},/**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */mime({name,args}){if(!args[0]){/* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */return'Файл пішімдері рұқсат етілмейді.';/* </i18n> */}/* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */return`${sentence(name)} типте болуы керек: ${args[0]}`;/* </i18n> */},/**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */min({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */return`кем болуы мүмкін емес ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */return`${sentence(name)} кем дегенде болуы керек ${args[0]}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */not({name,node:{value}}){/* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */return`“${value}” рұқсат етілмейді ${name}.`;/* </i18n> */},/**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */number({name}){/* <i18n case=\"Shown when the user-provided value is not a number.\"> */return`${sentence(name)} сан болуы керек.`;/* </i18n> */},/**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */required({name}){/* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */return`${sentence(name)} талап етіледі.`;/* </i18n> */},/**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */starts_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */return`${sentence(name)} -ден басталмайды ${list(args)}.`;/* </i18n> */},/**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */url(){/* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */return`Жарамды URL мекенжайын енгізіңіз.`;/* </i18n> */}};var kk=/*#__PURE__*/Object.freeze({__proto__:null,ui:ui$i,validation:validation$i});/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */ /**\n * Standard language for interface features.\n * @public\n */const ui$h={/**\n     * Shown on buttons for adding new items.\n     */add:'추가',/**\n     * Shown when a button to remove items is visible.\n     */remove:'제거',/**\n     * Shown when there are multiple items to remove at the same time.\n     */removeAll:'모두 제거',/**\n     * Shown when all fields are not filled out correctly.\n     */incomplete:'모든 값을 채워주세요',/**\n     * Shown in a button inside a form to submit the form.\n     */submit:'제출하기',/**\n     * Shown when no files are selected.\n     */noFiles:'선택된 파일이 없습니다',/**\n     * Shown on buttons that move fields up in a list.\n     */moveUp:'위로 이동',/**\n     * Shown on buttons that move fields down in a list.\n     */moveDown:'아래로 이동',/**\n     * Shown when something is actively loading.\n     */isLoading:'로드 중...',/**\n     * Shown when there is more to load.\n     */loadMore:'더 불러오기',/**\n     * Shown on buttons that navigate state forward\n     */next:'다음',/**\n     * Shown on buttons that navigate state backward\n     */prev:'이전',/**\n     * Shown when adding all values.\n     */addAllValues:'모든 값 추가',/**\n     * Shown when adding selected values.\n     */addSelectedValues:'선택한 값 추가',/**\n     * Shown when removing all values.\n     */removeAllValues:'모든 값 제거',/**\n     * Shown when removing selected values.\n     */removeSelectedValues:'선택한 값 제거',/**\n     * Shown when there is a date to choose.\n     */chooseDate:'날짜 선택',/**\n     * Shown when there is a date to change.\n     */changeDate:'날짜 변경',/**\n     * Shown when the date is invalid.\n     */invalidDate:'선택한 날짜가 잘못되었습니다.'};/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */const validation$h={/**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */accepted({name}){/* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */return`${name} 올바른 값을 선택 해주세요`;/* </i18n> */},/**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */date_after({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */return`${sentence(name)} ${date(args[0])} 이후여야 합니다`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} 미래의 날짜여야합니다`;/* </i18n> */},/**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */alpha({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */return`${sentence(name)} 알파벳 문자만 포함할 수 있습니다`;/* </i18n> */},/**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */alphanumeric({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */return`${sentence(name)} 문자와 숫자만 포함될 수 있습니다`;/* </i18n> */},/**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */alpha_spaces({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */return`${sentence(name)} 문자와 공백만 포함할 수 있습니다.`;/* </i18n> */},/**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */date_before({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */return`${sentence(name)} ${date(args[0])} 이전여야 합니다`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} 과거의 날짜여야합니다`;/* </i18n> */},/**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */between({name,args}){if(isNaN(args[0])||isNaN(args[1])){/* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */return`잘못된 구성으로 제출할 수 없습니다`;/* </i18n> */}const[a,b]=order(args[0],args[1]);/* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */return`${sentence(name)} ${a}와 ${b} 사이여야 합니다`;/* </i18n> */},/**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */confirm({name}){/* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */return`${sentence(name)} 일치하지 않습니다`;/* </i18n> */},/**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */date_format({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */return`${sentence(name)} 유효한 날짜가 아닙니다. ${args[0]}과 같은 형식을 사용해주세요`;/* </i18n> */}/* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */return'잘못된 구성으로 제출할 수 없습니다';/* </i18n> */},/**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */date_between({name,args}){/* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */return`${sentence(name)} ${date(args[0])}에서 ${date(args[1])} 사이여야 합니다`;/* </i18n> */},/**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */email:'올바른 이메일 주소를 입력해주세요',/**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */ends_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */return`${sentence(name)} ${list(args)}로 끝나지 않습니다`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */is({name}){/* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */return`${sentence(name)} 허용되는 값이 아닙니다`;/* </i18n> */},/**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */length({name,args:[first=0,second=Infinity]}){const min=Number(first)<=Number(second)?first:second;const max=Number(second)>=Number(first)?second:first;if(min==1&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */return`${sentence(name)} 하나 이상의 문자여야 합니다`;/* </i18n> */}if(min==0&&max){/* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */return`${sentence(name)} ${max}자 이하여야 합니다`;/* </i18n> */}if(min===max){/* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */return`${sentence(name)} 는 ${max} 자 길이여야 합니다.`;/* </i18n> */}if(min&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */return`${sentence(name)} ${min} 문자보다 크거나 같아야 합니다`;/* </i18n> */}/* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */return`${sentence(name)} ${min}에서 ${max}자 사이여야 합니다`;/* </i18n> */},/**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */matches({name}){/* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */return`${sentence(name)} 허용되는 값이 아닙니다`;/* </i18n> */},/**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */max({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */return`${args[0]} ${name} 초과할 수 없습니다`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */return`${sentence(name)} ${args[0]}보다 작거나 같아야 합니다`;/* </i18n> */},/**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */mime({name,args}){if(!args[0]){/* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */return'파일 형식이 허용되지 않습니다';/* </i18n> */}/* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */return`${sentence(name)} ${args[0]} 유형이어야 합니다`;/* </i18n> */},/**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */min({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */return`${args[0]} ${name}보다 작을 수 없습니다`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */return`${sentence(name)} ${args[0]} 이상이어야 합니다`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */not({name,node:{value}}){/* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */return`${value}\" 허용되지 않는 ${name}입니다`;/* </i18n> */},/**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */number({name}){/* <i18n case=\"Shown when the user-provided value is not a number.\"> */return`${sentence(name)} 숫자여야 합니다`;/* </i18n> */},/**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */required({name}){/* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */return`${sentence(name)} 필수 값입니다`;/* </i18n> */},/**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */starts_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */return`${sentence(name)} ${list(args)}로 시작하지 않습니다`;/* </i18n> */},/**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */url(){/* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */return`유효한 URL을 입력하십시오.`;/* </i18n> */}};var ko=/*#__PURE__*/Object.freeze({__proto__:null,ui:ui$h,validation:validation$h});/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */ /**\n * Standard language for interface features.\n * @public\n */const ui$g={/**\n     * Shown on a button for adding additional items.\n     */add:'Legg til',/**\n     * Shown when a button to remove items is visible.\n     */remove:'Fjern',/**\n     * Shown when there are multiple items to remove at the same time.\n     */removeAll:'Fjern alle',/**\n     * Shown when all fields are not filled out correctly.\n     */incomplete:'Beklager, noen felter er ikke fylt ut korrekt.',/**\n     * Shown in a button inside a form to submit the form.\n     */submit:'Send inn',/**\n     * Shown when no files are selected.\n     */noFiles:'Ingen fil valgt',/**\n     * Shown on buttons that move fields up in a list.\n     */moveUp:'Flytt opp',/**\n     * Shown on buttons that move fields down in a list.\n     */moveDown:'Flytt ned',/**\n     * Shown when something is actively loading.\n     */isLoading:'Laster...',/**\n     * Shown when there is more to load.\n     */loadMore:'Last mer',/**\n     * Show on buttons that navigate state forward\n     */next:'Neste',/**\n     * Show on buttons that navigate state backward\n     */prev:'Forrige',/**\n     * Shown when adding all values.\n     */addAllValues:'Legg til alle verdier',/**\n     * Shown when adding selected values.\n     */addSelectedValues:'Legg til valgte verdier',/**\n     * Shown when removing all values.\n     */removeAllValues:'Fjern alle verdier',/**\n     * Shown when removing selected values.\n     */removeSelectedValues:'Fjern valgte verdier',/**\n     * Shown when there is a date to choose.\n     */chooseDate:'Velg dato',/**\n     * Shown when there is a date to change.\n     */changeDate:'Endre dato',/**\n     * Shown when the date is invalid.\n     */invalidDate:'Den valgte datoen er ugyldig.'};/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */const validation$g={/**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */accepted({name}){/* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */return`Vennligst aksepter ${name}.`;/* </i18n> */},/**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */date_after({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */return`${sentence(name)} må være senere enn ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} må være i fremtiden.`;/* </i18n> */},/**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */alpha({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */return`${sentence(name)} kan bare inneholde alfabetiske tegn.`;/* </i18n> */},/**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */alphanumeric({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */return`${sentence(name)} kan bare inneholde bokstaver og tall.`;/* </i18n> */},/**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */alpha_spaces({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */return`${sentence(name)} kan bare inneholde bokstaver og mellomrom.`;/* </i18n> */},/**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */date_before({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */return`${sentence(name)} må være tidligere enn ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} må være i fortiden.`;/* </i18n> */},/**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */between({name,args}){if(isNaN(args[0])||isNaN(args[1])){/* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */return`Dette feltet er feilkonfigurert og kan ikke innsendes.`;/* </i18n> */}const[a,b]=order(args[0],args[1]);/* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */return`${sentence(name)} må være mellom ${a} og ${b}.`;/* </i18n> */},/**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */confirm({name}){/* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */return`${sentence(name)} stemmer ikke overens.`;/* </i18n> */},/**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */date_format({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */return`${sentence(name)} er ikke en gyldig dato, vennligst bruk formatet ${args[0]}`;/* </i18n> */}/* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */return'Dette feltet er feilkonfigurert og kan ikke innsendes.';/* </i18n> */},/**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */date_between({name,args}){/* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */return`${sentence(name)} må være mellom ${date(args[0])} og ${date(args[1])}`;/* </i18n> */},/**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */email:'Vennligst oppgi en gyldig epostadresse.',/**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */ends_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */return`${sentence(name)} slutter ikke med ${list(args)}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */is({name}){/* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */return`${sentence(name)} er ikke en tillatt verdi.`;/* </i18n> */},/**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */length({name,args:[first=0,second=Infinity]}){const min=Number(first)<=Number(second)?first:second;const max=Number(second)>=Number(first)?second:first;if(min==1&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */return`${sentence(name)} må ha minst ett tegn.`;/* </i18n> */}if(min==0&&max){/* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */return`${sentence(name)} må ha mindre enn eller nøyaktig ${max} tegn.`;/* </i18n> */}if(min===max){/* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */return`${sentence(name)} skal være ${max} tegn langt.`;/* </i18n> */}if(min&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */return`${sentence(name)} må ha mer enn eller nøyaktig ${min} tegn.`;/* </i18n> */}/* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */return`${sentence(name)} må ha mellom ${min} og ${max} tegn.`;/* </i18n> */},/**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */matches({name}){/* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */return`${sentence(name)} er ikke en tillatt verdi.`;/* </i18n> */},/**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */max({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */return`Kan ikke ha mer enn ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */return`${sentence(name)} må være mindre enn eller nøyaktig ${args[0]}.`;/* </i18n> */},/**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */mime({name,args}){if(!args[0]){/* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */return'Ingen tillatte filformater.';/* </i18n> */}/* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */return`${sentence(name)} må være av typen: ${args[0]}`;/* </i18n> */},/**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */min({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */return`Kan ikke ha mindre enn ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */return`${sentence(name)} må være minst ${args[0]}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */not({name,node:{value}}){/* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */return`“${value}” er ikke en tillatt ${name}.`;/* </i18n> */},/**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */number({name}){/* <i18n case=\"Shown when the user-provided value is not a number.\"> */return`${sentence(name)} må være et tall.`;/* </i18n> */},/**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */required({name}){/* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */return`${sentence(name)} er påkrevd.`;/* </i18n> */},/**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */starts_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */return`${sentence(name)} starter ikke med ${list(args)}.`;/* </i18n> */},/**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */url(){/* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */return`Vennligst inkluder en gyldig url.`;/* </i18n> */}};var nb=/*#__PURE__*/Object.freeze({__proto__:null,ui:ui$g,validation:validation$g});/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */ /**\n * Standard language for interface features.\n * @public\n */const ui$f={/**\n     * Shown on buttons for adding new items.\n     */add:'Toevoegen',/**\n     * Shown when a button to remove items is visible.\n     */remove:'Verwijderen',/**\n     * Shown when there are multiple items to remove at the same time.\n     */removeAll:'Alles verwijderen',/**\n     * Shown when all fields are not filled out correctly.\n     */incomplete:'Sorry, niet alle velden zijn correct ingevuld.',/**\n     * Shown in a button inside a form to submit the form.\n     */submit:'Versturen',/**\n     * Shown when no files are selected.\n     */noFiles:'Geen bestand gekozen',/**\n     * Shown on buttons that move fields up in a list.\n     */moveUp:'Naar boven gaan',/**\n     * Shown on buttons that move fields down in a list.\n     */moveDown:'Naar beneden verplaatsen',/**\n     * Shown when something is actively loading.\n     */isLoading:'Aan het laden...',/**\n     * Shown when there is more to load.\n     */loadMore:'Meer laden',/**\n     * Shown on buttons that navigate state forward\n     */next:'Vervolgens',/**\n     * Shown on buttons that navigate state backward\n     */prev:'Voorgaand',/**\n     * Shown when adding all values.\n     */addAllValues:'Alle waarden toevoegen',/**\n     * Shown when adding selected values.\n     */addSelectedValues:'Geselecteerde waarden toevoegen',/**\n     * Shown when removing all values.\n     */removeAllValues:'Alle waarden verwijderen',/**\n     * Shown when removing selected values.\n     */removeSelectedValues:'Geselecteerde waarden verwijderen',/**\n     * Shown when there is a date to choose.\n     */chooseDate:'Kies een datum',/**\n     * Shown when there is a date to change.\n     */changeDate:'Datum wijzigen',/**\n     * Shown when the date is invalid.\n     */invalidDate:'De geselecteerde datum is ongeldig.'};/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */const validation$f={/**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */accepted({name}){/* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */return`Accepteer de ${name}.`;/* </i18n> */},/**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */date_after({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */return`${sentence(name)} moet na ${date(args[0])} zijn.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} moet in de toekomst liggen.`;/* </i18n> */},/**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */alpha({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */return`${sentence(name)} mag alleen alfabetische tekens bevatten.`;/* </i18n> */},/**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */alphanumeric({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */return`${sentence(name)} mag alleen letters en cijfers bevatten.`;/* </i18n> */},/**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */alpha_spaces({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */return`${sentence(name)} mag alleen letters en spaties bevatten.`;/* </i18n> */},/**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */date_before({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */return`${sentence(name)} moet vóór ${date(args[0])} vallen.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} moet in het verleden liggen.`;/* </i18n> */},/**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */between({name,args}){if(isNaN(args[0])||isNaN(args[1])){/* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */return`Dit veld is onjuist geconfigureerd en kan niet worden verzonden.`;/* </i18n> */}const[a,b]=order(args[0],args[1]);/* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */return`${sentence(name)} moet tussen ${a} en ${b} liggen.`;/* </i18n> */},/**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */confirm({name}){/* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */return`${sentence(name)} komt niet overeen.`;/* </i18n> */},/**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */date_format({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */return`${sentence(name)} is geen geldige datum, gebruik de notatie ${args[0]}`;/* </i18n> */}/* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */return'Dit veld is onjuist geconfigureerd en kan niet worden verzonden';/* </i18n> */},/**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */date_between({name,args}){/* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */return`${sentence(name)} moet tussen ${date(args[0])} en ${date(args[1])} liggen`;/* </i18n> */},/**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */email:'Vul een geldig e-mailadres in.',/**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */ends_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */return`${sentence(name)} eindigt niet met ${list(args)}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */is({name}){/* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */return`${sentence(name)} is geen toegestane waarde.`;/* </i18n> */},/**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */length({name,args:[first=0,second=Infinity]}){const min=Number(first)<=Number(second)?first:second;const max=Number(second)>=Number(first)?second:first;if(min==1&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */return`${sentence(name)} moet minimaal één teken zijn.`;/* </i18n> */}if(min==0&&max){/* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */return`${sentence(name)} moet kleiner zijn dan of gelijk zijn aan ${max} tekens.`;/* </i18n> */}if(min===max){/* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */return`${sentence(name)} moet ${max} tekens lang zijn.`;/* </i18n> */}if(min&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */return`${sentence(name)} moet groter zijn dan of gelijk zijn aan ${min} tekens.`;/* </i18n> */}/* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */return`${sentence(name)} moet tussen de ${min} en ${max} tekens bevatten.`;/* </i18n> */},/**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */matches({name}){/* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */return`${sentence(name)} is geen toegestane waarde.`;/* </i18n> */},/**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */max({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */return`Mag niet meer dan ${args[0]} ${name} hebben.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */return`${sentence(name)} moet kleiner zijn dan of gelijk zijn aan ${args[0]}.`;/* </i18n> */},/**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */mime({name,args}){if(!args[0]){/* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */return'Geen bestandsformaten toegestaan.';/* </i18n> */}/* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */return`${sentence(name)} moet van het type: ${args[0]} zijn`;/* </i18n> */},/**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */min({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */return`Mag niet minder dan ${args[0]} ${name} hebben.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */return`${sentence(name)} moet minimaal ${args[0]} zijn.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */not({name,node:{value}}){/* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */return`\"${value}\" is geen toegestane ${name}.`;/* </i18n> */},/**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */number({name}){/* <i18n case=\"Shown when the user-provided value is not a number.\"> */return`${sentence(name)} moet een getal zijn.`;/* </i18n> */},/**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */required({name}){/* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */return`${sentence(name)} is verplicht.`;/* </i18n> */},/**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */starts_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */return`${sentence(name)} begint niet met ${list(args)}.`;/* </i18n> */},/**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */url(){/* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */return`Voer een geldige URL in.`;/* </i18n> */}};var nl=/*#__PURE__*/Object.freeze({__proto__:null,ui:ui$f,validation:validation$f});/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */ /**\n * Standard language for interface features.\n * @public\n */const ui$e={/**\n     * Shown on buttons for adding new items.\n     */add:'Dodaj',/**\n     * Shown when a button to remove items is visible.\n     */remove:'Usuń',/**\n     * Shown when there are multiple items to remove at the same time.\n     */removeAll:'Usuń wszystko',/**\n     * Shown when all fields are not filled out correctly.\n     */incomplete:'Nie wszystkie pola zostały wypełnione poprawnie.',/**\n     * Shown in a button inside a form to submit the form.\n     */submit:'Wyślij',/**\n     * Shown when no files are selected.\n     */noFiles:'Nie wybrano pliku',/**\n     * Shown on buttons that move fields up in a list.\n     */moveUp:'Przesuń w górę',/**\n     * Shown on buttons that move fields down in a list.\n     */moveDown:'Przesuń w dół',/**\n     * Shown when something is actively loading.\n     */isLoading:'Ładowanie...',/**\n     * Shown when there is more to load.\n     */loadMore:'Załaduj więcej',/**\n     * Shown on buttons that navigate state forward\n     */next:'Kolejny',/**\n     * Shown on buttons that navigate state backward\n     */prev:'Poprzednia',/**\n     * Shown when adding all values.\n     */addAllValues:'Dodaj wszystkie wartości',/**\n     * Shown when adding selected values.\n     */addSelectedValues:'Dodaj wybrane wartości',/**\n     * Shown when removing all values.\n     */removeAllValues:'Usuń wszystkie wartości',/**\n     * Shown when removing selected values.\n     */removeSelectedValues:'Usuń wybrane wartości',/**\n     * Shown when there is a date to choose.\n     */chooseDate:'Wybierz datę',/**\n     * Shown when there is a date to change.\n     */changeDate:'Zmień datę',/**\n     * Shown when the date is invalid.\n     */invalidDate:'Wybrana data jest nieprawidłowa.'};/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */const validation$e={/**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */accepted({name}){/* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */return`Proszę zaakceptować ${name}.`;/* </i18n> */},/**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */date_after({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */return`${sentence(name)} musi być po ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} musi być w przyszłości.`;/* </i18n> */},/**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */alpha({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */return`Pole ${sentence(name)} może zawierać tylko znaki alfabetyczne.`;/* </i18n> */},/**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */alphanumeric({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */return`Pole ${sentence(name)} może zawierać tylko znaki alfanumeryczne.`;/* </i18n> */},/**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */alpha_spaces({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */return`Pole ${sentence(name)} mogą zawierać tylko litery i spacje.`;/* </i18n> */},/**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */date_before({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */return`${sentence(name)} musi być przed ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} musi być w przeszłości.`;/* </i18n> */},/**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */between({name,args}){if(isNaN(args[0])||isNaN(args[1])){/* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */return`Pole zostało wypełnione niepoprawnie i nie może zostać wysłane.`;/* </i18n> */}const[a,b]=order(args[0],args[1]);/* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */return`Wartość pola ${sentence(name)} musi być pomiędzy ${a} i ${b}.`;/* </i18n> */},/**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */confirm({name}){/* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */return`${sentence(name)} nie pokrywa się.`;/* </i18n> */},/**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */date_format({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */return`Wartość pola ${sentence(name)} nie jest poprawną datą, proszę użyć formatu ${args[0]}`;/* </i18n> */}/* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */return'To pole zostało wypełnione niepoprawnie i nie może zostać wysłane';/* </i18n> */},/**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */date_between({name,args}){/* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */return`Data w polu ${sentence(name)} musi być pomiędzy ${date(args[0])} i ${date(args[1])}`;/* </i18n> */},/**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */email:'Proszę wpisać poprawny adres email.',/**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */ends_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */return`Pole ${sentence(name)} nie kończy się na ${list(args)}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */is({name}){/* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */return`Pole ${sentence(name)} nie jest dozwoloną wartością.`;/* </i18n> */},/**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */length({name,args:[first=0,second=Infinity]}){const min=Number(first)<=Number(second)?first:second;const max=Number(second)>=Number(first)?second:first;if(min==1&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */return`Pole ${sentence(name)} musi posiadać minimum jeden znak.`;/* </i18n> */}if(min==0&&max){/* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */return`Pole ${sentence(name)} musi zawierać ${max} lub mniej znaków.`;/* </i18n> */}if(min&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */return`Pole ${sentence(name)} musi zawierać ${min} lub więcej znaków.`;/* </i18n> */}if(min===max){/* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */return`Pole ${sentence(name)} musi mieć ${min} znaków.`;/* </i18n> */}/* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */return`Pole ${sentence(name)} musi mieć ${min}-${max} znaków.`;/* </i18n> */},/**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */matches({name}){/* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */return`Pole ${sentence(name)} zawiera niedozwolone znaki.`;/* </i18n> */},/**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */max({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */return`Nie można mieć więcej niż ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */return`Wartość pola ${sentence(name)} musi być mniejsza lub równa ${args[0]}.`;/* </i18n> */},/**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */mime({name,args}){if(!args[0]){/* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */return'Nie podano dozwolonych typów plików.';/* </i18n> */}/* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */return`${sentence(name)} musi być typem: ${args[0]}`;/* </i18n> */},/**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */min({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */return`Musisz podać więcej niż ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */return` Musisz podać conajmniej ${args[0]} ${sentence(name)}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */not({name}){/* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */return`Wartość pola ${name} jest niedozwolona.`;/* </i18n> */},/**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */number({name}){/* <i18n case=\"Shown when the user-provided value is not a number.\"> */return`${sentence(name)} musi być numerem.`;/* </i18n> */},/**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */required({name}){/* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */return`Pole ${sentence(name)} jest wymagane.`;/* </i18n> */},/**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */starts_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */return`Wartośc pola ${sentence(name)} nie zaczyna się od ${list(args)}.`;/* </i18n> */},/**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */url(){/* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */return`Wprowadź prawidłowy adres URL.`;/* </i18n> */}};var pl=/*#__PURE__*/Object.freeze({__proto__:null,ui:ui$e,validation:validation$e});/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */ /**\n * Standard language for interface features.\n * @public\n */const ui$d={/**\n     * Shown on buttons for adding new items.\n     */add:'Incluir',/**\n     * Shown when a button to remove items is visible.\n     */remove:'Remover',/**\n     * Shown when there are multiple items to remove at the same time.\n     */removeAll:'Remover todos',/**\n     * Shown when all fields are not filled out correctly.\n     */incomplete:'Desculpe, alguns campos não foram preenchidos corretamente.',/**\n     * Shown in a button inside a form to submit the form.\n     */submit:'Enviar',/**\n     * Shown when no files are selected.\n     */noFiles:'Nenhum arquivo selecionado.',/**\n     * Shown on buttons that move fields up in a list.\n     */moveUp:'Mover para cima',/**\n     * Shown on buttons that move fields down in a list.\n     */moveDown:'Mover para baixo',/**\n     * Shown when something is actively loading.\n     */isLoading:'Carregando...',/**\n     * Shown when there is more to load.\n     */loadMore:'Carregar mais',/**\n     * Shown on buttons that navigate state forward\n     */next:'Próximo',/**\n     * Shown on buttons that navigate state backward\n     */prev:'Anterior',/**\n     * Shown when adding all values.\n     */addAllValues:'Adicione todos os valores',/**\n     * Shown when adding selected values.\n     */addSelectedValues:'Adicionar valores selecionados',/**\n     * Shown when removing all values.\n     */removeAllValues:'Remover todos os valores',/**\n     * Shown when removing selected values.\n     */removeSelectedValues:'Remover valores selecionados',/**\n     * Shown when there is a date to choose.\n     */chooseDate:'Escolha a data',/**\n     * Shown when there is a date to change.\n     */changeDate:'Data da alteração',/**\n     * Shown when the date is invalid.\n     */invalidDate:'A data selecionada é inválida.'};/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */const validation$d={/**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */accepted({name}){/* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */return`Por favor aceite o ${name}.`;/* </i18n> */},/**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */date_after({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */return`${sentence(name)} precisa ser depois de ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} precisa ser no futuro.`;/* </i18n> */},/**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */alpha({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */return`${sentence(name)} precisa conter apenas letras.`;/* </i18n> */},/**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */alphanumeric({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */return`${sentence(name)} pode conter apenas letras e números.`;/* </i18n> */},/**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */alpha_spaces({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */return`${sentence(name)} pode conter apenas números e espaços.`;/* </i18n> */},/**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */date_before({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */return`${sentence(name)} precisa ser antes de ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} precisa ser no passado.`;/* </i18n> */},/**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */between({name,args}){if(isNaN(args[0])||isNaN(args[1])){/* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */return`Este campo não foi configurado corretamente e não pode ser submetido.`;/* </i18n> */}const[a,b]=order(args[0],args[1]);/* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */return`${sentence(name)} precisa ser entre ${a} e ${b}.`;/* </i18n> */},/**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */confirm({name}){/* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */return`${sentence(name)} não é igual.`;/* </i18n> */},/**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */date_format({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */return`${sentence(name)} não é uma data válida, por favor use este formato ${args[0]}`;/* </i18n> */}/* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */return'Este campo não foi configurado corretamente e não pode ser submetido.';/* </i18n> */},/**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */date_between({name,args}){/* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */return`${sentence(name)} precisa ser entre ${date(args[0])} e ${date(args[1])}`;/* </i18n> */},/**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */email:'Por favor, insira um endereço de email válido.',/**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */ends_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */return`${sentence(name)} não termina com ${list(args)}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */is({name}){/* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */return`${sentence(name)} não é um valor permitido.`;/* </i18n> */},/**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */length({name,args:[first=0,second=Infinity]}){const min=first<=second?first:second;const max=second>=first?second:first;if(min==1&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */return`${sentence(name)} precisa conter ao menos um caractere.`;/* </i18n> */}if(min==0&&max){/* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */return`${sentence(name)} precisa ser menor ou igual a ${max} caracteres.`;/* </i18n> */}if(min===max){/* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */return`${sentence(name)} precisa conter ${max} caracteres.`;/* </i18n> */}if(min&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */return`${sentence(name)} precisa ser maior ou igual a ${min} caracteres.`;/* </i18n> */}/* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */return`${sentence(name)} precisa ter entre ${min} e ${max} caracteres.`;/* </i18n> */},/**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */matches({name}){/* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */return`${sentence(name)} não é um valor permitido.`;/* </i18n> */},/**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */max({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */return`Não pode ter mais de ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */return`${sentence(name)} precisa ser menor ou igual a ${args[0]}.`;/* </i18n> */},/**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */mime({name,args}){if(!args[0]){/* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */return'Não há formatos de arquivos permitidos.';/* </i18n> */}/* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */return`${sentence(name)} precisa ser do tipo: ${args[0]}`;/* </i18n> */},/**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */min({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */return`Não pode ter menos de ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */return`${sentence(name)} precisa ser pelo menos ${args[0]}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */not({name,node:{value}}){/* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */return`“${value}” não é um(a) ${name} permitido(a).`;/* </i18n> */},/**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */number({name}){/* <i18n case=\"Shown when the user-provided value is not a number.\"> */return`${sentence(name)} precisa ser um número.`;/* </i18n> */},/**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */required({name}){/* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */return`${sentence(name)} é obrigatório.`;/* </i18n> */},/**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */starts_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */return`${sentence(name)} não começa com ${list(args)}.`;/* </i18n> */},/**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */url(){/* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */return`Por favor, insira uma url válida.`;/* </i18n> */}};var pt=/*#__PURE__*/Object.freeze({__proto__:null,ui:ui$d,validation:validation$d});/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */ /**\n * Standard language for interface features.\n * @public\n */const ui$c={/**\n     * Shown on buttons for adding new items.\n     */add:'Adăugare',/**\n     * Shown when a button to remove items is visible.\n     */remove:'Elimină',/**\n     * Shown when there are multiple items to remove at the same time.\n     */removeAll:'Elimină tot',/**\n     * Shown when all fields are not filled out correctly.\n     */incomplete:'Pare rău, unele câmpuri nu sunt corect completate.',/**\n     * Shown in a button inside a form to submit the form.\n     */submit:'Trimite',/**\n     * Shown when no files are selected.\n     */noFiles:'Nu este selectat nici un fișier',/**\n     * Shown on buttons that move fields up in a list.\n     */moveUp:'Mutare în sus',/**\n     * Shown on buttons that move fields down in a list.\n     */moveDown:'Mutare în jos',/**\n     * Shown when something is actively loading.\n     */isLoading:'Se încarcă...',/**\n     * Shown when there is more to load.\n     */loadMore:'Încărcați mai mult',/**\n     * Shown on buttons that navigate state forward\n     */next:'Urmatorul',/**\n     * Shown on buttons that navigate state backward\n     */prev:'Precedent',/**\n     * Shown when adding all values.\n     */addAllValues:'Adăugați toate valorile',/**\n     * Shown when adding selected values.\n     */addSelectedValues:'Adăugarea valorilor selectate',/**\n     * Shown when removing all values.\n     */removeAllValues:'Eliminați toate valorile',/**\n     * Shown when removing selected values.\n     */removeSelectedValues:'Eliminați valorile selectate',/**\n     * Shown when there is a date to choose.\n     */chooseDate:'Alege data',/**\n     * Shown when there is a date to change.\n     */changeDate:'Modificați data',/**\n     * Shown when the date is invalid.\n     */invalidDate:'Data selectată este nevalidă.'};/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */const validation$c={/**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */accepted({name}){/* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */return`Te rog acceptă ${name}.`;/* </i18n> */},/**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */date_after({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */return`${sentence(name)} trebuie să fie după ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} trebuie sa fie în viitor.`;/* </i18n> */},/**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */alpha({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */return`${sentence(name)} poate conține doar caractere alafetice.`;/* </i18n> */},/**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */alphanumeric({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */return`${sentence(name)} poate conține doar litere și numere.`;/* </i18n> */},/**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */alpha_spaces({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */return`${sentence(name)} poate conține doar litere și spații.`;/* </i18n> */},/**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */date_before({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */return`${sentence(name)} trebuie să preceadă ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} trebuie să fie în trecut.`;/* </i18n> */},/**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */between({name,args}){if(isNaN(args[0])||isNaN(args[1])){/* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */return`Câmpul a fost configurat incorect și nu poate fi trimis.`;/* </i18n> */}const[a,b]=order(args[0],args[1]);/* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */return`${sentence(name)} trebuie să fie între ${a} și ${b}.`;/* </i18n> */},/**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */confirm({name}){/* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */return`${sentence(name)} nu se potrivește.`;/* </i18n> */},/**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */date_format({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */return`${sentence(name)} nu este validă, te rog foloște formatul ${args[0]}`;/* </i18n> */}/* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */return'Câmpul a fost incorect configurat și nu poate fi trimis.';/* </i18n> */},/**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */date_between({name,args}){/* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */return`${sentence(name)} trebuie să fie între ${date(args[0])} și ${date(args[1])}`;/* </i18n> */},/**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */email:'Te rog folosește o adresă de email validă.',/**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */ends_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */return`${sentence(name)} nu se termină cu ${list(args)}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */is({name}){/* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */return`${sentence(name)} nu este o valoare acceptată.`;/* </i18n> */},/**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */length({name,args:[first=0,second=Infinity]}){const min=Number(first)<=Number(second)?first:second;const max=Number(second)>=Number(first)?second:first;if(min==1&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */return`${sentence(name)} trebuie sa conțină cel puțin un caracter.`;/* </i18n> */}if(min==0&&max){/* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */return`${sentence(name)} trebuie sa aibă cel mult ${max} caractere.`;/* </i18n> */}if(min===max){/* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */return`${sentence(name)} ar trebui să aibă ${max} caractere lungi.`;/* </i18n> */}if(min&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */return`${sentence(name)} trebuie să aibă cel puțin ${min} caractere.`;/* </i18n> */}/* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */return`${sentence(name)} trebuie să aibă între ${min} și ${max} caractere.`;/* </i18n> */},/**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */matches({name}){/* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */return`${sentence(name)} nu este o valoare acceptată.`;/* </i18n> */},/**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */max({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */return`Nu poate avea mai mult decat ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */return`${sentence(name)} trebuie să fie cel mult egal cu ${args[0]}.`;/* </i18n> */},/**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */mime({name,args}){if(!args[0]){/* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */return'Tipul de fișier neacceptat.';/* </i18n> */}/* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */return`${sentence(name)} trebuie să fie de tipul: ${args[0]}`;/* </i18n> */},/**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */min({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */return`Nu poate avea mai puțin decât ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */return`${sentence(name)} trebuie să fie cel puțin ${args[0]}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */not({name,node:{value}}){/* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */return`“${value}” nu este o valoare acceptă pentru ${name}.`;/* </i18n> */},/**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */number({name}){/* <i18n case=\"Shown when the user-provided value is not a number.\"> */return`${sentence(name)} trebuie să fie un număr.`;/* </i18n> */},/**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */required({name}){/* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */return`${sentence(name)} este necesar.`;/* </i18n> */},/**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */starts_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */return`${sentence(name)} nu începe cu ${list(args)}.`;/* </i18n> */},/**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */url(){/* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */return`Introduceți o adresă URL validă.`;/* </i18n> */}};var ro=/*#__PURE__*/Object.freeze({__proto__:null,ui:ui$c,validation:validation$c});/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */ /**\n * Standard language for interface features.\n * @public\n */const ui$b={/**\n     * Shown on buttons for adding new items.\n     */add:'Добавить',/**\n     * Shown when a button to remove items is visible.\n     */remove:'Удалить',/**\n     * Shown when there are multiple items to remove at the same time.\n     */removeAll:'Убрать все',/**\n     * Shown when all fields are not filled out correctly.\n     */incomplete:'Извините, не все поля заполнены верно.',/**\n     * Shown in a button inside a form to submit the form.\n     */submit:'Отправить',/**\n     * Shown when no files are selected.\n     */noFiles:'Файл не выбран',/**\n     * Shown on buttons that move fields up in a list.\n     */moveUp:'Переместить вверх',/**\n     * Shown on buttons that move fields down in a list.\n     */moveDown:'Переместить вниз',/**\n     * Shown when something is actively loading.\n     */isLoading:'Загрузка...',/**\n     * Shown when there is more to load.\n     */loadMore:'Загрузить больше',/**\n     * Shown on buttons that navigate state forward\n     */next:'Следующий',/**\n     * Shown on buttons that navigate state backward\n     */prev:'Предыдущий',/**\n     * Shown when adding all values.\n     */addAllValues:'Добавить все значения',/**\n     * Shown when adding selected values.\n     */addSelectedValues:'Добавить выбранные значения',/**\n     * Shown when removing all values.\n     */removeAllValues:'Удалить все значения',/**\n     * Shown when removing selected values.\n     */removeSelectedValues:'Удалить выбранные значения',/**\n     * Shown when there is a date to choose.\n     */chooseDate:'Выберите дату',/**\n     * Shown when there is a date to change.\n     */changeDate:'Изменить дату',/**\n     * Shown when the date is invalid.\n     */invalidDate:'Выбранная дата недействительна.'};/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */const validation$b={/**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */accepted({name}){/* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */return`Пожалуйста, примите ${name}.`;/* </i18n> */},/**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */date_after({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */return`Дата ${sentence(name)} должна быть позже ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */return`Дата ${sentence(name)} должна быть в будущем.`;/* </i18n> */},/**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */alpha({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */return`Поле ${sentence(name)} может содержать только буквы.`;/* </i18n> */},/**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */alphanumeric({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */return`Поле ${sentence(name)} может содержать только буквы и цифры.`;/* </i18n> */},/**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */alpha_spaces({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */return`${sentence(name)} могут содержать только буквы и пробелы.`;/* </i18n> */},/**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */date_before({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */return`Дата ${sentence(name)} должна быть раньше ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */return`Дата ${sentence(name)} должна быть в прошлом.`;/* </i18n> */},/**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */between({name,args}){if(isNaN(args[0])||isNaN(args[1])){/* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */return`Это поле заполнено неверно и не может быть отправлено.`;/* </i18n> */}const[a,b]=order(args[0],args[1]);/* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */return`Поле ${sentence(name)} должно быть между ${a} и ${b}.`;/* </i18n> */},/**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */confirm({name}){/* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */return`Поле ${sentence(name)} не совпадает.`;/* </i18n> */},/**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */date_format({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */return`Поле ${sentence(name)} имеет неверную дату. Пожалуйста, используйте формат ${args[0]}`;/* </i18n> */}/* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */return'Это поле заполнено неверно и не может быть отправлено.';/* </i18n> */},/**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */date_between({name,args}){/* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */return`Дата ${sentence(name)} должна быть между ${date(args[0])} и ${date(args[1])}`;/* </i18n> */},/**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */email:'Пожалуйста, введите действительный электронный адрес.',/**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */ends_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */return`Поле ${sentence(name)} не должно заканчиваться на ${list(args)}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */is({name}){/* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */return`Поле ${sentence(name)} имеет неподустимое значение.`;/* </i18n> */},/**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */length({name,args:[first=0,second=Infinity]}){const min=Number(first)<=Number(second)?first:second;const max=Number(second)>=Number(first)?second:first;if(min==1&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */return`Поле ${sentence(name)} должно содержать минимум один символ.`;/* </i18n> */}if(min==0&&max){/* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */return`Длина поля ${sentence(name)} должна быть меньше или равна ${max} символам.`;/* </i18n> */}if(min===max){/* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */return`Длина ${sentence(name)} должна составлять ${max} символов.`;/* </i18n> */}if(min&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */return`Длина поля ${sentence(name)} должна быть больше или равна ${min} символам.`;/* </i18n> */}/* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */return`Длина поля ${sentence(name)} должна быть между ${min} и ${max} символами.`;/* </i18n> */},/**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */matches({name}){/* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */return`Поле ${sentence(name)} имеет недопустимое значение.`;/* </i18n> */},/**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */max({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */return`Не может быть выбрано больше, чем ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */return`Поле ${sentence(name)} должно быть меньше или равно ${args[0]}.`;/* </i18n> */},/**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */mime({name,args}){if(!args[0]){/* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */return'Не указаны поддержиавемые форматы файла.';/* </i18n> */}/* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */return`Формат файла в поле ${sentence(name)} должен быть: ${args[0]}.`;/* </i18n> */},/**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */min({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */return`Не может быть выбрано меньше, чем ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */return`Поле ${sentence(name)} должно быть не менее, чем ${args[0]}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */not({name,node:{value}}){/* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */return`“${value}” не поддерживается в поле ${name}.`;/* </i18n> */},/**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */number({name}){/* <i18n case=\"Shown when the user-provided value is not a number.\"> */return`Поле ${sentence(name)} должно быть числом.`;/* </i18n> */},/**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */required({name}){/* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */return`Поле ${sentence(name)} обязательно для заполнения.`;/* </i18n> */},/**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */starts_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */return`Поле ${sentence(name)} должно начинаться с ${list(args)}.`;/* </i18n> */},/**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */url(){/* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */return`Пожалуйста, введите действительный URL-адрес.`;/* </i18n> */}};var ru=/*#__PURE__*/Object.freeze({__proto__:null,ui:ui$b,validation:validation$b});/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */ /**\n * Standard language for interface features.\n * @public\n */const ui$a={/**\n     * Shown on a button for adding additional items.\n     */add:'Pridať',/**\n     * Shown when a button to remove items is visible.\n     */remove:'Odstrániť',/**\n     * Shown when there are multiple items to remove at the same time.\n     */removeAll:'Odstrániť všetko',/**\n     * Shown when all fields are not filled out correctly.\n     */incomplete:'Prepáčte, ale nie všetky polia sú vyplnené správne.',/**\n     * Shown in a button inside a form to submit the form.\n     */submit:'Odoslať',/**\n     * Shown when no files are selected.\n     */noFiles:'Nebol vybraný žiadny súbor',/**\n     * Shown on buttons that move fields up in a list.\n     */moveUp:'Posunúť hore',/**\n     * Shown on buttons that move fields down in a list.\n     */moveDown:'Posunúť dole',/**\n     * Shown when something is actively loading.\n     */isLoading:'Načítavanie...',/**\n     * Shown when there is more to load.\n     */loadMore:'Načítať viac',/**\n     * Shown on buttons that navigate state forward\n     */next:'Ďalšie',/**\n     * Shown on buttons that navigate state backward\n     */prev:'Predošlý',/**\n     * Shown when adding all values.\n     */addAllValues:'Pridajte všetky hodnoty',/**\n     * Shown when adding selected values.\n     */addSelectedValues:'Pridajte vybrané hodnoty',/**\n     * Shown when removing all values.\n     */removeAllValues:'Odstrániť všetky hodnoty',/**\n     * Shown when removing selected values.\n     */removeSelectedValues:'Odstrániť vybrané hodnoty',/**\n     * Shown when there is a date to choose.\n     */chooseDate:'Vyberte dátum',/**\n     * Shown when there is a date to change.\n     */changeDate:'Zmena dátumu',/**\n     * Shown when the date is invalid.\n     */invalidDate:'Vybraný dátum je neplatný.'};/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */const validation$a={/**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */accepted({name}){/* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */return`Prosím zaškrtnite ${name}.`;/* </i18n> */},/**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */date_after({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */return`${sentence(name)} musí byť za ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} musí byť v budúcnosti.`;/* </i18n> */},/**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */alpha({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */return`${sentence(name)} môže obsahovať iba písmená.`;/* </i18n> */},/**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */alphanumeric({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */return`${sentence(name)} môže obsahovať iba písmená a čísla.`;/* </i18n> */},/**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */alpha_spaces({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */return`${sentence(name)} môže obsahovať iba písmená a medzery.`;/* </i18n> */},/**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */date_before({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */return`${sentence(name)} musí byť pred ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} musí byť v minulosti.`;/* </i18n> */},/**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */between({name,args}){if(isNaN(args[0])||isNaN(args[1])){/* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */return`Toto pole bolo nesprávne nakonfigurované a nemôže byť odoslané.`;/* </i18n> */}const[a,b]=order(args[0],args[1]);/* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */return`${sentence(name)} musí byť medzi ${a} and ${b}.`;/* </i18n> */},/**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */confirm({name}){/* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */return`${sentence(name)} does not match.`;/* </i18n> */},/**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */date_format({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */return`${sentence(name)} nie je platným dátumom, prosím, použite formát ${args[0]}`;/* </i18n> */}/* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */return'Toto pole bolo nesprávne nakonfigurované a nemôže byť odoslané.';/* </i18n> */},/**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */date_between({name,args}){/* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */return`${sentence(name)} musí byť medzi ${date(args[0])} a ${date(args[1])}`;/* </i18n> */},/**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */email:'Prosím, zadajte platnú emailovú adresu.',/**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */ends_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */return`${sentence(name)} nekončí na ${list(args)}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */is({name}){/* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */return`${sentence(name)} nie je povolená hodnota.`;/* </i18n> */},/**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */length({name,args:[first=0,second=Infinity]}){const min=Number(first)<=Number(second)?first:second;const max=Number(second)>=Number(first)?second:first;if(min==1&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */return`${sentence(name)} musí mať najmenej jeden znak.`;/* </i18n> */}if(min==0&&max){/* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */return`${sentence(name)} musí byť menšie alebo rovné ako ${max} znakov.`;/* </i18n> */}if(min===max){/* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */return`${sentence(name)} by mala mať dĺžku ${max} znakov.`;/* </i18n> */}if(min&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */return`${sentence(name)} musí byť väčšie alebo rovné ako ${min} znakov.`;/* </i18n> */}/* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */return`${sentence(name)} musí byť medzi ${min} až ${max} znakov.`;/* </i18n> */},/**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */matches({name}){/* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */return`${sentence(name)} nie je povolená hodnota.`;/* </i18n> */},/**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */max({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */return`Nie je možné použiť viac než ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */return`${sentence(name)} musí byť menšie alebo rovné ako ${args[0]}.`;/* </i18n> */},/**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */mime({name,args}){if(!args[0]){/* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */return'Nie sú povolené formáty súborov.';/* </i18n> */}/* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */return`${sentence(name)} musí byť typu: ${args[0]}`;/* </i18n> */},/**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */min({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */return`Nemôže byť menej než ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */return`${sentence(name)} musí byť minimálne ${args[0]}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */not({name,node:{value}}){/* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */return`“${value}” nie je povolené hodnota pre ${name}.`;/* </i18n> */},/**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */number({name}){/* <i18n case=\"Shown when the user-provided value is not a number.\"> */return`${sentence(name)} musí byť číslo.`;/* </i18n> */},/**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */required({name}){/* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */return`${sentence(name)} je povinné.`;/* </i18n> */},/**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */starts_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */return`${sentence(name)} nezačíná s ${list(args)}.`;/* </i18n> */},/**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */url(){/* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */return`Zadajte platnú adresu URL.`;/* </i18n> */}};var sk=/*#__PURE__*/Object.freeze({__proto__:null,ui:ui$a,validation:validation$a});/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */ /**\n * Standard language for interface features.\n * @public\n */const ui$9={/**\n     * Shown on buttons for adding new items.\n     */add:'Dodaj',/**\n     * Shown when a button to remove items is visible.\n     */remove:'Odstrani',/**\n     * Shown when there are multiple items to remove at the same time.\n     */removeAll:'Odstrani vse',/**\n     * Shown when all fields are not filled out correctly.\n     */incomplete:'Nekatera polja niso pravilno izpolnjena.',/**\n     * Shown in a button inside a form to submit the form.\n     */submit:'Pošlji',/**\n     * Shown when no files are selected.\n     */noFiles:'Nobena datoteka ni izbrana',/**\n     * Shown on buttons that move fields up in a list.\n     */moveUp:'Premakni se navzgor',/**\n     * Shown on buttons that move fields down in a list.\n     */moveDown:'Premakni se navzdol',/**\n     * Shown when something is actively loading.\n     */isLoading:'Nalaganje...',/**\n     * Shown when there is more to load.\n     */loadMore:'Naloži več',/**\n     * Shown on buttons that navigate state forward\n     */next:'Naslednji',/**\n     * Shown on buttons that navigate state backward\n     */prev:'Prejšnji',/**\n     * Shown when adding all values.\n     */addAllValues:'Dodajte vse vrednosti',/**\n     * Shown when adding selected values.\n     */addSelectedValues:'Dodajanje izbranih vrednosti',/**\n     * Shown when removing all values.\n     */removeAllValues:'Odstranite vse vrednosti',/**\n     * Shown when removing selected values.\n     */removeSelectedValues:'Odstrani izbrane vrednosti',/**\n     * Shown when there is a date to choose.\n     */chooseDate:'Izberite datum',/**\n     * Shown when there is a date to change.\n     */changeDate:'Spremeni datum',/**\n     * Shown when the date is invalid.\n     */invalidDate:'Izbrani datum je neveljaven.'};/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */const validation$9={/**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */accepted({name}){/* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */return`Prosimo popravite ${name}.`;/* </i18n> */},/**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */date_after({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */return`${sentence(name)} mora biti po ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} mora biti v prihodnosti.`;/* </i18n> */},/**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */alpha({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */return`${sentence(name)} lahko vsebuje samo znake abecede.`;/* </i18n> */},/**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */alphanumeric({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */return`${sentence(name)} lahko vsebuje samo črke in številke.`;/* </i18n> */},/**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */alpha_spaces({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */return`${sentence(name)} lahko vsebuje samo črke in presledke.`;/* </i18n> */},/**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */date_before({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */return`${sentence(name)} mora biti pred ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} mora biti v preteklosti.`;/* </i18n> */},/**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */between({name,args}){if(isNaN(args[0])||isNaN(args[1])){/* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */return`To polje je narobe nastavljeno in ne mora biti izpolnjeno.`;/* </i18n> */}const[a,b]=order(args[0],args[1]);/* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */return`${sentence(name)} mora biti med ${a} in ${b}.`;/* </i18n> */},/**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */confirm({name}){/* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */return`${sentence(name)} se ne ujema.`;/* </i18n> */},/**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */date_format({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */return`${sentence(name)} ni pravilen datum, prosimo uporabite format ${args[0]}`;/* </i18n> */}/* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */return'To polje je narobe nastavljeno in ne mora biti izpolnjeno.';/* </i18n> */},/**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */date_between({name,args}){/* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */return`${sentence(name)} mora biti med ${date(args[0])} in ${date(args[1])}`;/* </i18n> */},/**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */email:'Vnesite veljaven e-poštni naslov.',/**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */ends_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */return`${sentence(name)} se mora kočati z ${list(args)}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */is({name}){/* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */return`${sentence(name)} ni dovoljena vrednost.`;/* </i18n> */},/**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */length({name,args:[first=0,second=Infinity]}){const min=Number(first)<=Number(second)?first:second;const max=Number(second)>=Number(first)?second:first;if(min==1&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */return`${sentence(name)} mora vsebovati vsaj en znak.`;/* </i18n> */}if(min==0&&max){/* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */return`${sentence(name)} mora vsebovati največ ${max} znakov.`;/* </i18n> */}if(min===max){/* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */return`${sentence(name)} mora biti dolg ${max} znakov.`;/* </i18n> */}if(min&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */return`${sentence(name)} mora vsebovati vsaj ${min} znakov.`;/* </i18n> */}/* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */return`${sentence(name)} mora vsebovati med ${min} in ${max} znakov.`;/* </i18n> */},/**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */matches({name}){/* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */return`${sentence(name)} ni dovoljena vrednost.`;/* </i18n> */},/**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */max({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */return`Največ je ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */return`${sentence(name)} je lahko največ ${args[0]}.`;/* </i18n> */},/**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */mime({name,args}){if(!args[0]){/* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */return'Nobena vrsta datoteke ni dovoljena.';/* </i18n> */}/* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */return`${sentence(name)} mora biti tipa: ${args[0]}`;/* </i18n> */},/**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */min({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */return`Najmanj ${args[0]} ${name} je dovoljenih.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */return`${sentence(name)} mora biti vsaj ${args[0]}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */not({name,node:{value}}){/* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */return`“${value}” ni dovoljen(a/o) ${name}.`;/* </i18n> */},/**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */number({name}){/* <i18n case=\"Shown when the user-provided value is not a number.\"> */return`${sentence(name)} mora biti številka.`;/* </i18n> */},/**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */required({name}){/* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */return`${sentence(name)} je zahtevan(o/a).`;/* </i18n> */},/**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */starts_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */return`${sentence(name)} se mora začeti z ${list(args)}.`;/* </i18n> */},/**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */url(){/* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */return`Vnesite veljaven URL.`;/* </i18n> */}};var sl=/*#__PURE__*/Object.freeze({__proto__:null,ui:ui$9,validation:validation$9});/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */ /**\n * Standard language for interface features.\n * @public\n */const ui$8={/**\n     * Shown on a button for adding additional items.\n     */add:'Dodaj',/**\n     * Shown when a button to remove items is visible.\n     */remove:'Ukloni',/**\n     * Shown when there are multiple items to remove at the same time.\n     */removeAll:'Ukloni sve',/**\n     * Shown when all fields are not filled out correctly.\n     */incomplete:'Pojedina polja nisu ispravno ispunjena.',/**\n     * Shown in a button inside a form to submit the form.\n     */submit:'Pošalji',/**\n     * Shown when no files are selected.\n     */noFiles:'Fajl nije odabran',/**\n     * Shown on buttons that move fields up in a list.\n     */moveUp:'Pomerite se gore',/**\n     * Shown on buttons that move fields down in a list.\n     */moveDown:'Pomeri se dole',/**\n     * Shown when something is actively loading.\n     */isLoading:'Učitavanje...',/**\n     * Shown when there is more to load.\n     */loadMore:'Učitaj više',/**\n     * Shown on buttons that navigate state forward\n     */next:'Sledeća',/**\n     * Shown on buttons that navigate state backward\n     */prev:'Prethodna',/**\n     * Shown when adding all values.\n     */addAllValues:'Dodajte sve vrednosti',/**\n     * Shown when adding selected values.\n     */addSelectedValues:'Dodajte izabrane vrednosti',/**\n     * Shown when removing all values.\n     */removeAllValues:'Uklonite sve vrednosti',/**\n     * Shown when removing selected values.\n     */removeSelectedValues:'Uklonite izabrane vrednosti',/**\n     * Shown when there is a date to choose.\n     */chooseDate:'Izaberite datum',/**\n     * Shown when there is a date to change.\n     */changeDate:'Promenite datum',/**\n     * Shown when the date is invalid.\n     */invalidDate:'Izabrani datum je nevažeći.'};/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */const validation$8={/**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */accepted({name}){/* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */return`Molimo prihvatite ${name}`;/* </i18n> */},/**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */date_after({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */return`${sentence(name)} mora biti posle ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} mora biti u budućnosti.`;/* </i18n> */},/**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */alpha({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */return`${sentence(name)} može da sadrži samo abecedne znakove.`;/* </i18n> */},/**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */alphanumeric({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */return`${sentence(name)} može da sadrži samo slova i brojeve.`;/* </i18n> */},/**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */alpha_spaces({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */return`${sentence(name)} može da sadrži samo slova i razmake.`;/* </i18n> */},/**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */date_before({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */return`${sentence(name)} mora biti pre ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} mora biti u prošlosti.`;/* </i18n> */},/**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */between({name,args}){if(isNaN(args[0])||isNaN(args[1])){/* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */return`Ovo polje je pogrešno konfigurisano i ne može se poslati.`;/* </i18n> */}const[a,b]=order(args[0],args[1]);/* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */return`${sentence(name)} mora biti između ${a} i ${b}.`;/* </i18n> */},/**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */confirm({name}){/* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */return`${sentence(name)} se ne podudara.`;/* </i18n> */},/**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */date_format({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */return`${sentence(name)} nije važeći datum, molimo Vas koristite format ${args[0]}`;/* </i18n> */}/* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */return'Ovo polje je pogrešno konfigurisano i ne može se poslati';/* </i18n> */},/**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */date_between({name,args}){/* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */return`${sentence(name)} mora biti između ${date(args[0])} i ${date(args[1])}`;/* </i18n> */},/**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */email:'Unesite ispravnu e-mail adresu.',/**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */ends_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */return`${sentence(name)} se ne završava sa ${list(args)}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */is({name}){/* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */return`${sentence(name)} nije dozvoljena vrednost`;/* </i18n> */},/**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */length({name,args:[first=0,second=Infinity]}){const min=Number(first)<=Number(second)?first:second;const max=Number(second)>=Number(first)?second:first;if(min==1&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */return`${sentence(name)} mora biti najmanje jedan karakter.`;/* </i18n> */}if(min==0&&max){/* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */return`${sentence(name)} mora biti manji ili jednaki od ${max} karaktera.`;/* </i18n> */}if(min===max){/* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */return`${sentence(name)} treba da bude ${max} znakova dugačak.`;/* </i18n> */}if(min&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */return`${sentence(name)} mora biti veći ili jednaki od ${min} karaktera.`;/* </i18n> */}/* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */return`${sentence(name)} mora biti između ${min} i ${max} karaktera.`;/* </i18n> */},/**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */matches({name}){/* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */return`${sentence(name)} nije dozvoljena vrednost.`;/* </i18n> */},/**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */max({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */return`Ne može imati više od ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */return`${sentence(name)} mora biti manji ili jednaki od ${args[0]}.`;/* </i18n> */},/**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */mime({name,args}){if(!args[0]){/* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */return'Nisu dozvoljeni formati datoteka.';/* </i18n> */}/* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */return`${sentence(name)} mora biti tipa: ${args[0]}`;/* </i18n> */},/**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */min({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */return`Ne može imati manje od ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */return`${sentence(name)} mora da ima najmanje ${args[0]}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */not({name,node:{value}}){/* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */return`“${value}” nije dozvoljeno ${name}.`;/* </i18n> */},/**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */number({name}){/* <i18n case=\"Shown when the user-provided value is not a number.\"> */return`${sentence(name)} mora biti broj.`;/* </i18n> */},/**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */required({name}){/* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */return`${sentence(name)} je obavezno polje.`;/* </i18n> */},/**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */starts_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */return`${sentence(name)} ne počinje sa ${list(args)}.`;/* </i18n> */},/**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */url(){/* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */return`Unesite važeću URL adresu.`;/* </i18n> */}};var sr=/*#__PURE__*/Object.freeze({__proto__:null,ui:ui$8,validation:validation$8});/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */ /**\n * Standard language for interface features.\n * @public\n */const ui$7={/**\n     * Shown when a button to remove items is visible.\n     */remove:'Ta bort',/**\n     * Shown when there are multiple items to remove at the same time.\n     */removeAll:'Ta bort alla',/**\n     * Shown when all fields are not filled out correctly.\n     */incomplete:'Tyvärr är inte alla fält korrekt ifyllda',/**\n     * Shown in a button inside a form to submit the form.\n     */submit:'Skicka',/**\n     * Shown when no files are selected.\n     */noFiles:'Ingen fil vald',/**\n     * Shown on buttons that move fields up in a list.\n     */moveUp:'Flytta upp',/**\n     * Shown on buttons that move fields down in a list.\n     */moveDown:'Flytta ner',/**\n     * Shown when something is actively loading.\n     */isLoading:'Laddar...',/**\n     * Shown when there is more to load.\n     */loadMore:'Ladda mer',/**\n     * Shown on buttons that navigate state forward\n     */next:'Nästa',/**\n     * Shown on buttons that navigate state backward\n     */prev:'Föregående',/**\n     * Shown when adding all values.\n     */addAllValues:'Lägg till alla värden',/**\n     * Shown when adding selected values.\n     */addSelectedValues:'Lägg till valda värden',/**\n     * Shown when removing all values.\n     */removeAllValues:'Ta bort alla värden',/**\n     * Shown when removing selected values.\n     */removeSelectedValues:'Ta bort valda värden',/**\n     * Shown when there is a date to choose.\n     */chooseDate:'Välj datum',/**\n     * Shown when there is a date to change.\n     */changeDate:'Ändra datum',/**\n     * Shown when the date is invalid.\n     */invalidDate:'Det valda datumet är ogiltigt.'};/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */const validation$7={/**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */accepted({name}){/* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */return`Var god acceptera ${name}.`;/* </i18n> */},/**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */date_after({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */return`${sentence(name)} måste vara efter ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} måste vara framåt i tiden.`;/* </i18n> */},/**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */alpha({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */return`${sentence(name)} kan enbart innehålla bokstäver i alfabetet.`;/* </i18n> */},/**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */alphanumeric({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */return`${sentence(name)} kan bara innehålla bokstäver och siffror.`;/* </i18n> */},/**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */alpha_spaces({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */return`${sentence(name)} kan bara innehålla bokstäver och blanksteg.`;/* </i18n> */},/**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */date_before({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */return`${sentence(name)} måste vara före ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} måste vara bakåt i tiden.`;/* </i18n> */},/**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */between({name,args}){if(isNaN(args[0])||isNaN(args[1])){/* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */return`Det här fältet ställdes inte in korrekt och kan inte användas.`;/* </i18n> */}const[a,b]=order(args[0],args[1]);/* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */return`${sentence(name)} måste vara mellan ${a} och ${b}.`;/* </i18n> */},/**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */confirm({name}){/* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */return`${sentence(name)} matchar inte.`;/* </i18n> */},/**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */date_format({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */return`${sentence(name)} är inte ett giltigt datum, var god använd formatet ${args[0]}`;/* </i18n> */}/* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */return'Det här fältet ställdes inte in korrekt och kan inte användas';/* </i18n> */},/**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */date_between({name,args}){/* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */return`${sentence(name)} måste vara mellan ${date(args[0])} och ${date(args[1])}`;/* </i18n> */},/**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */email:'Var god fyll i en giltig e-postadress.',/**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */ends_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */return`${sentence(name)} slutar inte med ${list(args)}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */is({name}){/* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */return`${sentence(name)} är inte ett godkänt värde.`;/* </i18n> */},/**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */length({name,args:[first=0,second=Infinity]}){const min=Number(first)<=Number(second)?first:second;const max=Number(second)>=Number(first)?second:first;if(min==1&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */return`${sentence(name)} måste ha minst ett tecken.`;/* </i18n> */}if(min==0&&max){/* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */return`${sentence(name)} måste vara ${max} tecken eller färre.`;/* </i18n> */}if(min===max){/* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */return`${sentence(name)} bör vara ${max} tecken långa.`;/* </i18n> */}if(min&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */return`${sentence(name)} måste vara ${min} tecken eller fler.`;/* </i18n> */}/* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */return`${sentence(name)} måste vara mellan ${min} och ${max} tecken.`;/* </i18n> */},/**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */matches({name}){/* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */return`${sentence(name)} är inte ett godkänt värde.`;/* </i18n> */},/**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */max({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */return`Kan inte ha mer än ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */return`${sentence(name)} måste vara ${args[0]} eller mindre.`;/* </i18n> */},/**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */mime({name,args}){if(!args[0]){/* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */return'Inga filtyper tillåtna.';/* </i18n> */}/* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */return`${sentence(name)} måste vara av filtypen: ${args[0]}`;/* </i18n> */},/**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */min({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */return`Kan inte ha mindre än ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */return`${sentence(name)} måste vara minst ${args[0]}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */not({name,node:{value}}){/* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */return`“${value}” är inte ett godkänt ${name}.`;/* </i18n> */},/**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */number({name}){/* <i18n case=\"Shown when the user-provided value is not a number.\"> */return`${sentence(name)} måste vara en siffra.`;/* </i18n> */},/**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */required({name}){/* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */return`${sentence(name)} är obligatoriskt.`;/* </i18n> */},/**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */starts_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */return`${sentence(name)} börjar inte med ${list(args)}.`;/* </i18n> */},/**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */url(){/* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */return`Ange en giltig URL.`;/* </i18n> */}};var sv=/*#__PURE__*/Object.freeze({__proto__:null,ui:ui$7,validation:validation$7});/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */ /**\n * Standard language for interface features.\n * @public\n */const ui$6={/**\n     * Shown on a button for adding additional items.\n     */add:'Илова кардан',/**\n     * Shown when a button to remove items is visible.\n     */remove:'Хориҷ кардан',/**\n     * Shown when there are multiple items to remove at the same time.\n     */removeAll:'Ҳамаро хориҷ кунед',/**\n     * Shown when all fields are not filled out correctly.\n     */incomplete:'Бубахшед, на ҳама майдонҳо дуруст пур карда шудаанд.',/**\n     * Shown in a button inside a form to submit the form.\n     */submit:'Пешниҳод кунед',/**\n     * Shown when no files are selected.\n     */noFiles:'Ягон файл интихоб нашудааст',/**\n     * Shown on buttons that move fields up in a list.\n     */moveUp:'Ба боло ҳаракат кунед',/**\n     * Shown on buttons that move fields down in a list.\n     */moveDown:'Ба поён ҳаракат кунед',/**\n     * Shown when something is actively loading.\n     */isLoading:'Дар ҳоли боргузорӣ',/**\n     * Shown when there is more to load.\n     */loadMore:'Бештар бор кунед',/**\n     * Show on buttons that navigate state forward\n     */next:'Баъдӣ',/**\n     * Show on buttons that navigate state backward\n     */prev:'Гузашта',/**\n     * Shown when adding all values.\n     */addAllValues:'Ҳама арзишҳоро илова кунед',/**\n     * Shown when adding selected values.\n     */addSelectedValues:'Илова кардани арзишҳои интихобшуда',/**\n     * Shown when removing all values.\n     */removeAllValues:'Ҳама арзишҳоро хориҷ кунед',/**\n     * Shown when removing selected values.\n     */removeSelectedValues:'Арзишҳои интихобшударо хориҷ кунед',/**\n     * Shown when there is a date to choose.\n     */chooseDate:'Сана интихоб кунед',/**\n     * Shown when there is a date to change.\n     */changeDate:'Тағйир додани сана',/**\n     * Shown when the date is invalid.\n     */invalidDate:'Санаи интихобшуда нодуруст аст.'};/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */const validation$6={/**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */accepted({name}){/* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */return`Лутфан ${name}-ро қабул кунед`;/* </i18n> */},/**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */date_after({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */return`${sentence(name)} бояд пас аз ${date(args[0])} бошад.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} бояд дар оянда бошад.`;/* </i18n> */},/**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */alpha({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */return`${sentence(name)} метавонад танҳо аломатҳои алифборо дар бар гирад.`;/* </i18n> */},/**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */alphanumeric({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */return`${sentence(name)} метавонад танҳо ҳарфҳо ва рақамҳоро дар бар гирад.`;/* </i18n> */},/**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */alpha_spaces({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */return`${sentence(name)} метавонад танҳо ҳарфҳо ва фосилаҳоро дар бар гирад.`;/* </i18n> */},/**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */date_before({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */return`${sentence(name)} бояд пеш аз ${date(args[0])} бошад.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} бояд дар гузашта бошад.`;/* </i18n> */},/**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */between({name,args}){if(isNaN(args[0])||isNaN(args[1])){/* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */return`Ин майдон нодуруст танзим шудааст ва онро пешниҳод кардан ғайриимкон аст.`;/* </i18n> */}const[a,b]=order(args[0],args[1]);/* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */return`${sentence(name)} бояд дар байни ${a} ва ${b} бошад.`;/* </i18n> */},/**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */confirm({name}){/* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */return`${sentence(name)} мувофиқат намекунад.`;/* </i18n> */},/**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */date_format({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */return`${sentence(name)} санаи дуруст нест, лутфан формати ${args[0]}-ро истифода баред`;/* </i18n> */}/* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */return'Ин майдон нодуруст танзим шудааст ва онро пешниҳод кардан ғайриимкон аст';/* </i18n> */},/**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */date_between({name,args}){/* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */return`${sentence(name)} бояд дар байни ${date(args[0])} ва ${date(args[1])} бошад`;/* </i18n> */},/**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */email:'Лутфан нишонаи имейли амалкунандаро ворид намоед.',/**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */ends_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */return`${sentence(name)} бо ${list(args)} ба охир намерасад.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */is({name}){/* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */return`${sentence(name)} арзиши иҷозатдодашуда нест.`;/* </i18n> */},/**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */length({name,args:[first=0,second=Infinity]}){const min=Number(first)<=Number(second)?first:second;const max=Number(second)>=Number(first)?second:first;if(min==1&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */return`${sentence(name)} бояд ҳадди аққал як аломат бошад.`;/* </i18n> */}if(min==0&&max){/* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */return`${sentence(name)} бояд аз ${max} аломат камтар ё баробар бошад.`;/* </i18n> */}if(min===max){/* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */return`${sentence(name)} бояд ${max} аломат бошад.`;/* </i18n> */}if(min&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */return`${sentence(name)} бояд аз ${min} аломат зиёд ё баробар бошад.`;/* </i18n> */}/* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */return`${sentence(name)} бояд дар байни ${min} ва ${max} аломат бошад.`;/* </i18n> */},/**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */matches({name}){/* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */return`${sentence(name)} арзиши иҷозатдодашуда нест.`;/* </i18n> */},/**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */max({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */return`Зиёда аз ${args[0]} ${name} дошта наметавонад.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */return`${sentence(name)} бояд аз ${args[0]} камтар ё баробар бошад.`;/* </i18n> */},/**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */mime({name,args}){if(!args[0]){/* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */return'Ягон формати файл иҷозат дода намешавад.';/* </i18n> */}/* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */return`${sentence(name)} бояд чунин намуд бошад: ${args[0]}`;/* </i18n> */},/**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */min({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */return`Камтар аз ${args[0]} ${name} дошта наметавонад.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */return`${sentence(name)} бояд ҳадди аққал ${args[0]} бошад.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */not({name,node:{value}}){/* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */return`\"${value}\" ${name} иҷозат дода намешавад.`;/* </i18n> */},/**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */number({name}){/* <i18n case=\"Shown when the user-provided value is not a number.\"> */return`${sentence(name)} бояд рақам бошад.`;/* </i18n> */},/**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */required({name}){/* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */return`${sentence(name)} лозим аст.`;/* </i18n> */},/**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */starts_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */return`${sentence(name)} бо ${list(args)} оғоз намешавад.`;/* </i18n> */},/**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */url(){/* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */return`Лутфан URL-и дурустро дохил кунед.`;/* </i18n> */}};var tg=/*#__PURE__*/Object.freeze({__proto__:null,ui:ui$6,validation:validation$6});/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */ /**\n * Standard language for interface features.\n * @public\n */const ui$5={/**\n     * Shown on buttons for adding new items.\n     */add:'เพิ่ม',/**\n     * Shown when a button to remove items is visible.\n     */remove:'เอาออก',/**\n     * Shown when there are multiple items to remove at the same time.\n     */removeAll:'เอาออกทั้งหมด',/**\n     * Shown when all fields are not filled out correctly.\n     */incomplete:'ขออภัย ข้อมูลบางช่องที่กรอกไม่ถูกต้อง',/**\n     * Shown in a button inside a form to submit the form.\n     */submit:'ส่ง',/**\n     * Shown when no files are selected.\n     */noFiles:'ยังไม่ได้เลือกไฟล์',/**\n     * Shown on buttons that move fields up in a list.\n     */moveUp:'เลื่อนขึ้น',/**\n     * Shown on buttons that move fields down in a list.\n     */moveDown:'เลื่อนลง',/**\n     * Shown when something is actively loading.\n     */isLoading:'กำลังโหลด...',/**\n     * Shown when there is more to load.\n     */loadMore:'โหลดเพิ่มเติม',/**\n     * Shown on buttons that navigate state forward\n     */next:'ถัดไป',/**\n     * Shown on buttons that navigate state backward\n     */prev:'ก่อนหน้า',/**\n     * Shown when adding all values.\n     */addAllValues:'เพิ่มค่าทั้งหมด',/**\n     * Shown when adding selected values.\n     */addSelectedValues:'เพิ่มค่าที่เลือก',/**\n     * Shown when removing all values.\n     */removeAllValues:'ลบค่าทั้งหมด',/**\n     * Shown when removing selected values.\n     */removeSelectedValues:'ลบค่าที่เลือก',/**\n     * Shown when there is a date to choose.\n     */chooseDate:'เลือกวันที่',/**\n     * Shown when there is a date to change.\n     */changeDate:'เปลี่ยนวันที่',/**\n     * Shown when the date is invalid.\n     */invalidDate:'วันที่ที่เลือกไม่ถูกต้อง'};/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */const validation$5={/**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */accepted({name}){/* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */return`กรุณายอมรับ ${name}`;/* </i18n> */},/**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */date_after({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */return`${sentence(name)} จะต้องเป็นวันที่หลังจาก ${date(args[0])}`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} จะต้องเป็นวันที่ที่ยังไม่มาถึง`;/* </i18n> */},/**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */alpha({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */return`${sentence(name)} สามารถเป็นได้แค่ตัวอักษรเท่านั้น`;/* </i18n> */},/**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */alphanumeric({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */return`${sentence(name)} สามารถเป็นได้แค่ตัวอักษรและตัวเลขเท่านั้น`;/* </i18n> */},/**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */alpha_spaces({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */return`${sentence(name)} สามารถเป็นได้แค่ตัวอักษรและเว้นวรรคเท่านั้น`;/* </i18n> */},/**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */date_before({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */return`${sentence(name)} จะต้องเป็นวันที่ที่มาก่อน ${date(args[0])}`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} จะต้องเป็นวันที่ที่ผ่านมาแล้ว`;/* </i18n> */},/**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */between({name,args}){if(isNaN(args[0])||isNaN(args[1])){/* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */return`ช่องนี้ถูกตั้งค่าอย่างไม่ถูกต้อง และจะไม่สามารถส่งข้อมูลได้`;/* </i18n> */}const[a,b]=order(args[0],args[1]);/* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */return`${sentence(name)} จะต้องเป็นค่าระหว่าง ${a} และ ${b}`;/* </i18n> */},/**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */confirm({name}){/* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */return`${sentence(name)} ไม่ตรงกัน`;/* </i18n> */},/**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */date_format({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */return`${sentence(name)} ไม่อยู่ในรูปแบบวันที่ที่ถูกต้อง กรุณากรอกตามรูปแบบ ${args[0]}`;/* </i18n> */}/* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */return'ช่องนี้ถูกตั้งค่าอย่างไม่ถูกต้อง และจะไม่สามารถส่งข้อมูลได้';/* </i18n> */},/**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */date_between({name,args}){/* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */return`${sentence(name)} จะต้องเป็นวันที่ระหว่าง ${date(args[0])} และ ${date(args[1])}`;/* </i18n> */},/**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */email:'กรุณากรอกที่อยู่อีเมลทีถูกต้อง',/**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */ends_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */return`${sentence(name)} จะต้องลงท้ายด้วย ${list(args)}`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */is({name}){/* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */return`${sentence(name)} ไม่ใช่ค่าที่อนุญาตให้กรอก`;/* </i18n> */},/**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */length({name,args:[first=0,second=Infinity]}){const min=Number(first)<=Number(second)?first:second;const max=Number(second)>=Number(first)?second:first;if(min==1&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */return`${sentence(name)} จะต้องมีความยาวอย่างน้อยหนึ่งตัวอักษร`;/* </i18n> */}if(min==0&&max){/* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */return`${sentence(name)} จะต้องมีความยาวไม่เกิน ${max} ตัวอักษร`;/* </i18n> */}if(min===max){/* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */return`${sentence(name)} ควรจะเป็น ${max} ตัวอักษรยาว`;/* </i18n> */}if(min&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */return`${sentence(name)} จะต้องมีความยาว ${min} ตัวอักษรขึ้นไป`;/* </i18n> */}/* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */return`${sentence(name)} จะต้องมีความยาวระหว่าง ${min} และ ${max} ตัวอักษร`;/* </i18n> */},/**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */matches({name}){/* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */return`${sentence(name)} ไม่ใช่ค่าที่อนุญาตให้กรอก`;/* </i18n> */},/**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */max({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */return`ไม่สามารถเลือกมากกว่า ${args[0]} ${name} ได้`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */return`${sentence(name)} จะต้องมีค่าไม่เกิน ${args[0]}`;/* </i18n> */},/**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */mime({name,args}){if(!args[0]){/* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */return'ไม่มีประเภทของไฟล์ที่อนุญาต';/* </i18n> */}/* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */return`${sentence(name)} จะต้องเป็นไฟล์ประเภท ${args[0]} เท่านั้น`;/* </i18n> */},/**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */min({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */return`ไม่สามารถเลือกน้อยกว่า ${args[0]} ${name} ได้`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */return`${sentence(name)} จะต้องมีค่าอย่างน้อย ${args[0]}`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */not({name,node:{value}}){/* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */return`“${value}” ไม่ใช่ค่า ${name} ที่อนุญาตให้กรอก`;/* </i18n> */},/**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */number({name}){/* <i18n case=\"Shown when the user-provided value is not a number.\"> */return`${sentence(name)} จะต้องเป็นตัวเลขเท่านั้น`;/* </i18n> */},/**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */required({name}){/* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */return`กรุณากรอก ${sentence(name)}`;/* </i18n> */},/**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */starts_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */return`${sentence(name)} จะต้องเริ่มต้นด้วย ${list(args)}`;/* </i18n> */},/**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */url(){/* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */return`กรุณาระบุที่อยู่ลิงก์ให้ถูกต้อง`;/* </i18n> */}};var th=/*#__PURE__*/Object.freeze({__proto__:null,ui:ui$5,validation:validation$5});/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */ /**\n * Standard language for interface features.\n * @public\n */const ui$4={/**\n     * Shown on buttons for adding new items.\n     */add:'Ekle',/**\n     * Shown when a button to remove items is visible.\n     */remove:'Kaldır',/**\n     * Shown when there are multiple items to remove at the same time.\n     */removeAll:'Hepsini kaldır',/**\n     * Shown when all fields are not filled out correctly.\n     */incomplete:'Maalesef, tüm alanlar doğru doldurulmadı.',/**\n     * Shown in a button inside a form to submit the form.\n     */submit:'Gönder',/**\n     * Shown when no files are selected.\n     */noFiles:'Dosya yok',/**\n     * Shown on buttons that move fields up in a list.\n     */moveUp:'Yukarı Taşı',/**\n     * Shown on buttons that move fields down in a list.\n     */moveDown:'Aşağı taşı',/**\n     * Shown when something is actively loading.\n     */isLoading:'Yükleniyor...',/**\n     * Shown when there is more to load.\n     */loadMore:'Daha fazla yükle',/**\n     * Shown on buttons that navigate state forward\n     */next:'Sonraki',/**\n     * Shown on buttons that navigate state backward\n     */prev:'Önceki',/**\n     * Shown when adding all values.\n     */addAllValues:'Tüm değerleri ekle',/**\n     * Shown when adding selected values.\n     */addSelectedValues:'Seçili değerleri ekle',/**\n     * Shown when removing all values.\n     */removeAllValues:'Tüm değerleri kaldır',/**\n     * Shown when removing selected values.\n     */removeSelectedValues:'Seçili değerleri kaldır',/**\n     * Shown when there is a date to choose.\n     */chooseDate:'Tarih seçin',/**\n     * Shown when there is a date to change.\n     */changeDate:'Tarihi değiştir',/**\n     * Shown when the date is invalid.\n     */invalidDate:'Seçilen tarih geçersiz.'};/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */const validation$4={/**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */accepted({name}){/* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */return`Lütfen ${name}'yi kabul edin.`;/* </i18n> */},/**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */date_after({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */return`${sentence(name)} ${date(args[0])}'den sonra olmalıdır.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} gelecekte bir zaman olmalıdır.`;/* </i18n> */},/**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */alpha({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */return`${sentence(name)} sadece alfabetik karakterler içerebilir.`;/* </i18n> */},/**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */alphanumeric({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */return`${sentence(name)} sadece alfabetik karakterler ve sayı içerebilir.`;/* </i18n> */},/**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */alpha_spaces({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */return`${sentence(name)} yalnızca harf ve boşluk içerebilir.`;/* </i18n> */},/**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */date_before({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */return`${sentence(name)} ${date(args[0])} tarihinden önce olmalı.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} geçmişte olmalı.`;/* </i18n> */},/**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */between({name,args}){if(isNaN(args[0])||isNaN(args[1])){/* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */return`Alan yanlış yapılandırılmış ve gönderilemez.`;/* </i18n> */}const[a,b]=order(args[0],args[1]);/* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */return`${sentence(name)} ${a} ve ${b} aralığında olmalı.`;/* </i18n> */},/**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */confirm({name}){/* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */return`${sentence(name)} eşleşmiyor.`;/* </i18n> */},/**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */date_format({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */return`${sentence(name)} geçerli bir tarih değil, lütfen ${args[0]} biçimini kullanın.`;/* </i18n> */}/* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */return'Alan yanlış yapılandırılmış ve gönderilemez.';/* </i18n> */},/**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */date_between({name,args}){/* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */return`${sentence(name)}, ${date(args[0])} ve ${date(args[1])} aralığında olmalı.`;/* </i18n> */},/**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */email:'Lütfen geçerli bir e-mail adresi girin.',/**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */ends_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */return`${sentence(name)} ${list(args)} ile bitmiyor.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */is({name}){/* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */return`${sentence(name)} izin verilen bir değer değil.`;/* </i18n> */},/**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */length({name,args:[first=0,second=Infinity]}){const min=Number(first)<=Number(second)?first:second;const max=Number(second)>=Number(first)?second:first;if(min==1&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */return`${sentence(name)} en azından bir karakter uzunluğunda olmalı.`;/* </i18n> */}if(min==0&&max){/* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */return`${sentence(name)} ${max}'e eşit veya daha küçük olmalı.`;/* </i18n> */}if(min===max){/* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */return`${sentence(name)} ${max} karakter uzunluğunda olmalıdır.`;/* </i18n> */}if(min&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */return`${sentence(name)} ${min}'e eşit veya daha büyük olmalı.`;/* </i18n> */}/* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */return`${sentence(name)}, ${min} ve ${max} karakter uzunluğu aralığında olmalı.`;/* </i18n> */},/**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */matches({name}){/* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */return`${sentence(name)} izin verilen bir değer değil.`;/* </i18n> */},/**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */max({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */return`${name}'in uzunluğu ${args[0]}'dan daha uzun olamaz.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */return`${sentence(name)} en azından ${args[0]} uzunluğunda veya ona eşit olmalı.`;/* </i18n> */},/**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */mime({name,args}){if(!args[0]){/* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */return'Hiçbir dosya türüne izin verilmez.';/* </i18n> */}/* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */return`${sentence(name)} şu tiplerden biri olmalı: ${args[0]}`;/* </i18n> */},/**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */min({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */return`${name}'in uzunluğu ${args[0]}'dan daha kısa olamaz.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */return`${sentence(name)} en azından ${args[0]} uzunluğunda olmalı.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */not({name,node:{value}}){/* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */return`“${value}” ${name} olamaz.`;/* </i18n> */},/**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */number({name}){/* <i18n case=\"Shown when the user-provided value is not a number.\"> */return`${sentence(name)} sayı olmalı.`;/* </i18n> */},/**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */required({name}){/* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */return`${sentence(name)} gerekli.`;/* </i18n> */},/**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */starts_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */return`${sentence(name)} ${list(args)} ile başlamıyor.`;/* </i18n> */},/**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */url(){/* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */return`Lütfen geçerli bir URL girin.`;/* </i18n> */}};var tr=/*#__PURE__*/Object.freeze({__proto__:null,ui:ui$4,validation:validation$4});/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */ /**\n * Standard language for interface features.\n * @public\n */const ui$3={/**\n     * Shown on a button for adding additional items.\n     */add:'Додати',/**\n     * Shown when a button to remove items is visible.\n     */remove:'Видалити',/**\n     * Shown when there are multiple items to remove at the same time.\n     */removeAll:'Видалити все',/**\n     * Shown when all fields are not filled out correctly.\n     */incomplete:'Вибачте, не всі поля заповнені правильно.',/**\n     * Shown in a button inside a form to submit the form.\n     */submit:'Відправити',/**\n     * Shown when no files are selected.\n     */noFiles:'Файл не вибрано',/**\n     * Shown on buttons that move fields up in a list.\n     */moveUp:'Рухатися вгору',/**\n     * Shown on buttons that move fields down in a list.\n     */moveDown:'Пересунути вниз',/**\n     * Shown when something is actively loading.\n     */isLoading:'Завантаження...',/**\n     * Shown when there is more to load.\n     */loadMore:'Завантажте більше',/**\n     * Shown on buttons that navigate state forward\n     */next:'Наступний',/**\n     * Shown on buttons that navigate state backward\n     */prev:'Попередній',/**\n     * Shown when adding all values.\n     */addAllValues:'Додати всі значення',/**\n     * Shown when adding selected values.\n     */addSelectedValues:'Додати вибрані значення',/**\n     * Shown when removing all values.\n     */removeAllValues:'Вилучити всі значення',/**\n     * Shown when removing selected values.\n     */removeSelectedValues:'Вилучити вибрані значення',/**\n     * Shown when there is a date to choose.\n     */chooseDate:'Виберіть дату',/**\n     * Shown when there is a date to change.\n     */changeDate:'Змінити дату',/**\n     * Shown when the date is invalid.\n     */invalidDate:'Вибрана дата недійсна.'};/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */const validation$3={/**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */accepted({name}){/* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */return`Будь ласка, прийміть ${name}.`;/* </i18n> */},/**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */date_after({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */return`Дата ${sentence(name)} повинна бути пізніше за ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */return`Дата ${sentence(name)} має бути в майбутньому.`;/* </i18n> */},/**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */alpha({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */return`Поле ${sentence(name)} може містити лише літери.`;/* </i18n> */},/**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */alphanumeric({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */return`Поле ${sentence(name)} може містити лише літери та цифри.`;/* </i18n> */},/**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */alpha_spaces({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */return`Поле ${sentence(name)} може містити лише літери та пробіли.`;/* </i18n> */},/**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */date_before({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */return`Дата ${sentence(name)} повинна бути раніше за ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */return`Дата ${sentence(name)} повинна бути в минулому.`;/* </i18n> */},/**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */between({name,args}){if(isNaN(args[0])||isNaN(args[1])){/* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */return`Це поле заповнено неправильно і не може бути надіслано.`;/* </i18n> */}const[a,b]=order(args[0],args[1]);/* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */return`Поле ${sentence(name)} повинно бути між ${a} та ${b}.`;/* </i18n> */},/**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */confirm({name}){/* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */return`Поле ${sentence(name)} не збігається.`;/* </i18n> */},/**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */date_format({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */return`Поле ${sentence(name)} має неправильну дату. Будь ласка, використовуйте формат ${args[0]}.`;/* </i18n> */}/* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */return'Це поле заповнено неправильно і не може бути надіслано.';/* </i18n> */},/**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */date_between({name,args}){/* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */return`Дата ${sentence(name)} повинна бути між ${date(args[0])} та ${date(args[1])}.`;/* </i18n> */},/**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */email:'Будь ласка, введіть дійсну електронну адресу.',/**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */ends_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */return`Поле ${sentence(name)} не повинно закінчуватися на ${list(args)}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */is({name}){/* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */return`Поле ${sentence(name)} має неприпустиме значення.`;/* </i18n> */},/**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */length({name,args:[first=0,second=Infinity]}){const min=Number(first)<=Number(second)?first:second;const max=Number(second)>=Number(first)?second:first;if(min==1&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */return`Поле ${sentence(name)} має містити щонайменше один символ.`;/* </i18n> */}if(min==0&&max){/* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */return`Довжина поля ${sentence(name)} повинна бути меншою або дорівнювати ${max} символам.`;/* </i18n> */}if(min===max){/* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */return`${sentence(name)} має бути довжиною ${max} символів.`;/* </i18n> */}if(min&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */return`Довжина поля ${sentence(name)} повинна бути більшою або дорівнювати ${min} символам.`;/* </i18n> */}/* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */return`Довжина поля ${sentence(name)} повинна бути між ${min} та ${max} символами.`;/* </i18n> */},/**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */matches({name}){/* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */return`Поле ${sentence(name)} має неприпустиме значення.`;/* </i18n> */},/**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */max({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */return`Не може бути вибрано більше ніж ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */return`Поле ${sentence(name)} має бути менше або дорівнювати ${args[0]}.`;/* </i18n> */},/**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */mime({name,args}){if(!args[0]){/* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */return'Не вказано дозволені типи файлів.';/* </i18n> */}/* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */return`Тип файлу в полі ${sentence(name)} має бути: ${args[0]}.`;/* </i18n> */},/**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */min({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */return`Не може бути вибрано менше ніж ${args[0]} ${name}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */return`Поле ${sentence(name)} має бути не менше ніж ${args[0]}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */not({name,node:{value}}){/* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */return`“${value}” не дозволено в полі ${name}.`;/* </i18n> */},/**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */number({name}){/* <i18n case=\"Shown when the user-provided value is not a number.\"> */return`Поле ${sentence(name)} має бути числом.`;/* </i18n> */},/**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */required({name}){/* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */return`Поле ${sentence(name)} є обов'язковим.`;/* </i18n> */},/**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */starts_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */return`Поле ${sentence(name)} має починатися з ${list(args)}.`;/* </i18n> */},/**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */url(){/* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */return`Будь ласка, введіть коректну URL-адресу.`;/* </i18n> */}};var uk=/*#__PURE__*/Object.freeze({__proto__:null,ui:ui$3,validation:validation$3});/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */ /**\n * Standard language for interface features.\n * @public\n */const ui$2={/**\n     * Shown on a button for adding additional items.\n     */add:\"Qo'shish\",/**\n     * Shown when a button to remove items is visible.\n     */remove:\"O'chirish\",/**\n     * Shown when there are multiple items to remove at the same time.\n     */removeAll:\"Hammasini o'chirish\",/**\n     * Shown when all fields are not filled out correctly.\n     */incomplete:\"Kechirasiz, barcha maydonlar to'g'ri to'ldirilmagan.\",/**\n     * Shown in a button inside a form to submit the form.\n     */submit:'Yuborish',/**\n     * Shown when no files are selected.\n     */noFiles:'Hech qanday fayl tanlanmagan',/**\n     * Shown on buttons that move fields up in a list.\n     */moveUp:'Yuqoriga ko’taring',/**\n     * Shown on buttons that move fields down in a list.\n     */moveDown:'Pastga siljish',/**\n     * Shown when something is actively loading.\n     */isLoading:'Yuklanmoqda...',/**\n     * Shown when there is more to load.\n     */loadMore:'Ko’proq yuklang',/**\n     * Shown on buttons that navigate state forward\n     */next:'Keyingi',/**\n     * Shown on buttons that navigate state backward\n     */prev:'Oldingi',/**\n     * Shown when adding all values.\n     */addAllValues:`Barcha qiymatlarni qo'shish`,/**\n     * Shown when adding selected values.\n     */addSelectedValues:`Tanlangan qiymatlarni qoʻshish`,/**\n     * Shown when removing all values.\n     */removeAllValues:'Barcha qiymatlarni olib tashlang',/**\n     * Shown when removing selected values.\n     */removeSelectedValues:'Tanlangan qiymatlarni olib tashlash',/**\n     * Shown when there is a date to choose.\n     */chooseDate:'Sanani tanlang',/**\n     * Shown when there is a date to change.\n     */changeDate:`O'zgartirish sanasi`,/**\n     * Shown when the date is invalid.\n     */invalidDate:'Tanlangan sana yaroqsiz.'};/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */const validation$2={/**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */accepted({name}){/* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */return`${name} ni qabul qiling.`;/* </i18n> */},/**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */date_after({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */return`${sentence(name)} ${date(args[0])} dan keyin bo'lishi kerak.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} kelajakda bo'lishi kerak.`;/* </i18n> */},/**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */alpha({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */return`${sentence(name)} faqat alifbo tartibidagi belgilardan iborat bo'lishi mumkin.`;/* </i18n> */},/**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */alphanumeric({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */return`${sentence(name)} faqat harflar va raqamlardan iborat bo'lishi mumkin.`;/* </i18n> */},/**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */alpha_spaces({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */return`${sentence(name)} faqat harf va bo'shliqlardan iborat bo'lishi mumkin.`;/* </i18n> */},/**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */date_before({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */return`${sentence(name)} ${date(args[0])} dan oldin bo'lishi kerak`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} o'tmishda bo'lishi kerak.`;/* </i18n> */},/**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */between({name,args}){if(isNaN(args[0])||isNaN(args[1])){/* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */return`Bu maydon noto'g'ri sozlangan va uni yuborib bo'lmaydi.`;/* </i18n> */}const[a,b]=order(args[0],args[1]);/* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */return`${sentence(name)} ${a} va ${b} orasida bo'lishi kerak.`;/* </i18n> */},/**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */confirm({name}){/* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */return`${sentence(name)} mos emas.`;/* </i18n> */},/**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */date_format({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */return`${sentence(name)} haqiqiy sana emas, iltimos ${args[0]} formatidan foydalaning`;/* </i18n> */}/* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */return\"Bu maydon noto'g'ri sozlangan va uni yuborib bo'lmaydi\";/* </i18n> */},/**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */date_between({name,args}){/* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */return`${sentence(name)} ${date(args[0])} va ${date(args[1])} oralig'ida bo'lishi kerak`;/* </i18n> */},/**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */email:'Iltimos amaldagi e-mail manzilingizni kiriting.',/**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */ends_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */return`${sentence(name)} ${list(args)} bilan tugamaydi.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */is({name}){/* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */return`${sentence(name)} ruxsat etilgan qiymat emas.`;/* </i18n> */},/**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */length({name,args:[first=0,second=Infinity]}){const min=Number(first)<=Number(second)?first:second;const max=Number(second)>=Number(first)?second:first;if(min==1&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */return`${sentence(name)} kamida bitta belgidan iborat bo'lishi kerak.`;/* </i18n> */}if(min==0&&max){/* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */return`${sentence(name)} ${max} ta belgidan kam yoki teng bo'lishi kerak.`;/* </i18n> */}if(min===max){/* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */return`${sentence(name)} bo'lishi kerak ${max} belgilar uzun.`;/* </i18n> */}if(min&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */return`${sentence(name)} ${min} ta belgidan ko'p yoki teng bo'lishi kerak.`;/* </i18n> */}/* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */return`${sentence(name)} ${min} va ${max} gacha belgilardan iborat bo'lishi kerak.`;/* </i18n> */},/**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */matches({name}){/* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */return`${sentence(name)} ruxsat etilgan qiymat emas.`;/* </i18n> */},/**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */max({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */return`${args[0]} ${name} dan ortiq bo'lishi mumkin emas.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */return`${sentence(name)} ${args[0]} dan kichik yoki teng bo'lishi kerak.`;/* </i18n> */},/**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */mime({name,args}){if(!args[0]){/* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */return'Fayl formatlariga ruxsat berilmagan.';/* </i18n> */}/* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */return`${sentence(name)} quyidagi turdagi bo'lishi kerak: ${args[0]}`;/* </i18n> */},/**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */min({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */return`${args[0]} ${name} dan kam bo'lmasligi kerak.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */return`${sentence(name)} kamida ${args[0]} bo'lishi kerak.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */not({name,node:{value}}){/* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */return`\"${value}\" ruxsat berilmagan ${name}.`;/* </i18n> */},/**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */number({name}){/* <i18n case=\"Shown when the user-provided value is not a number.\"> */return`${sentence(name)} raqam bo'lishi kerak.`;/* </i18n> */},/**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */required({name}){/* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */return`${sentence(name)} talab qilinadi.`;/* </i18n> */},/**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */starts_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */return`${sentence(name)} ${list(args)} bilan boshlanmaydi.`;/* </i18n> */},/**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */url(){/* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */return`Iltimos, tegishli URL manzilini kiriting.`;/* </i18n> */}};var uz=/*#__PURE__*/Object.freeze({__proto__:null,ui:ui$2,validation:validation$2});/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */ /**\n * Standard language for interface features.\n * @public\n */const ui$1={/**\n     * Shown on buttons for adding new items.\n     */add:'Thêm',/**\n     * Shown when a button to remove items is visible.\n     */remove:'Xoá',/**\n     * Shown when there are multiple items to remove at the same time.\n     */removeAll:'Xoá tất cả',/**\n     * Shown when all fields are not filled out correctly.\n     */incomplete:'Xin lỗi, không phải tất cả các trường đều được nhập đúng.',/**\n     * Shown in a button inside a form to submit the form.\n     */submit:'Gửi',/**\n     * Shown when no files are selected.\n     */noFiles:'Chưa chọn file',/**\n     * Shown on buttons that move fields up in a list.\n     */moveUp:'Di chuyển lên',/**\n     * Shown on buttons that move fields down in a list.\n     */moveDown:'Di chuyển xuống',/**\n     * Shown when something is actively loading.\n     */isLoading:'Đang tải...',/**\n     * Shown when there is more to load.\n     */loadMore:'Tải thêm',/**\n     * Shown on buttons that navigate state forward\n     */next:'Tiếp',/**\n     * Shown on buttons that navigate state backward\n     */prev:'Trước',/**\n     * Shown when adding all values.\n     */addAllValues:'Thêm tất cả các giá trị',/**\n     * Shown when adding selected values.\n     */addSelectedValues:'Thêm các giá trị đã chọn',/**\n     * Shown when removing all values.\n     */removeAllValues:'Loại bỏ tất cả các giá trị',/**\n     * Shown when removing selected values.\n     */removeSelectedValues:'Loại bỏ các giá trị đã chọn',/**\n     * Shown when there is a date to choose.\n     */chooseDate:'Chọn ngày',/**\n     * Shown when there is a date to change.\n     */changeDate:'Thay đổi ngày',/**\n     * Shown when the date is invalid.\n     */invalidDate:'Ngày đã chọn không hợp lệ.'};/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */const validation$1={/**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */accepted({name}){/* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */return`Hãy đồng ý với ${name}.`;/* </i18n> */},/**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */date_after({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */return`${sentence(name)} phải sau ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} phải trong tương lai.`;/* </i18n> */},/**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */alpha({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */return`${sentence(name)} có thể chỉ bao gồm các chữ cái alphabet.`;/* </i18n> */},/**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */alphanumeric({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */return`${sentence(name)} có thể chỉ bao gồm các chữ cái và chữ số.`;/* </i18n> */},/**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */alpha_spaces({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */return`${sentence(name)} chỉ có thể chứa các chữ cái và khoảng trắng.`;/* </i18n> */},/**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */date_before({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */return`${sentence(name)} phải trước ${date(args[0])}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */return`${sentence(name)} phải trong quá khứ.`;/* </i18n> */},/**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */between({name,args}){if(isNaN(args[0])||isNaN(args[1])){/* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */return`Trường này đã được thiết lập sai và không thể gửi.`;/* </i18n> */}const[a,b]=order(args[0],args[1]);/* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */return`${sentence(name)} phải ở giữa ${a} và ${b}.`;/* </i18n> */},/**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */confirm({name}){/* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */return`${sentence(name)} không khớp.`;/* </i18n> */},/**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */date_format({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */return`${sentence(name)} không phải ngày hợp lệ, hãy sử dụng định dạng ${args[0]}`;/* </i18n> */}/* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */return'Trường này đã được thiết lập sai và không thể gửi.';/* </i18n> */},/**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */date_between({name,args}){/* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */return`${sentence(name)} phải ở giữa khoảng từ ${date(args[0])} đến ${date(args[1])}.`;/* </i18n> */},/**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */email:'Hãy nhập một địa chỉ email hợp lệ.',/**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */ends_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */return`${sentence(name)} không kết thúc với ${list(args)}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */is({name}){/* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */return`${sentence(name)} không phải một giá trị được cho phép.`;/* </i18n> */},/**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */length({name,args:[first=0,second=Infinity]}){const min=Number(first)<=Number(second)?first:second;const max=Number(second)>=Number(first)?second:first;if(min==1&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */return`${sentence(name)} phải có độ dài tối thiểu một ký tự.`;/* </i18n> */}if(min==0&&max){/* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */return`${sentence(name)} phải có độ dài tối đa ${max} ký tự.`;/* </i18n> */}if(min===max){/* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */return`${sentence(name)} nên dài ${max} ký tự.`;/* </i18n> */}if(min&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */return`${sentence(name)} phải có độ dài tối thiểu ${min} ký tự.`;/* </i18n> */}/* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */return`${sentence(name)} phải có độ dài tối đa trong khoảng từ ${min} đến ${max} ký tự.`;/* </i18n> */},/**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */matches({name}){/* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */return`${sentence(name)} không phải một giá trị được cho phép.`;/* </i18n> */},/**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */max({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */return`${name} không thể lớn hơn ${args[0]}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */return`${sentence(name)} phải tối đa bằng ${args[0]}.`;/* </i18n> */},/**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */mime({name,args}){if(!args[0]){/* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */return'Định dạng tệp tin này không được phép.';/* </i18n> */}/* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */return`${sentence(name)} phải là một trong các dạng: ${args[0]}`;/* </i18n> */},/**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */min({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */return`${name} không thể nhỏ hơn ${args[0]}.`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */return`${sentence(name)} phải tối thiểu bằng ${args[0]}.`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */not({name,node:{value}}){/* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */return`\"${value}\" không phải giá trị ${name} được phép.`;/* </i18n> */},/**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */number({name}){/* <i18n case=\"Shown when the user-provided value is not a number.\"> */return`${sentence(name)} phải là một số.`;/* </i18n> */},/**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */required({name}){/* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */return`${sentence(name)} là bắt buộc.`;/* </i18n> */},/**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */starts_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */return`${sentence(name)} không bắt đầu với ${list(args)}.`;/* </i18n> */},/**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */url(){/* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */return`Vui lòng nhập một URL hợp lệ.`;/* </i18n> */}};var vi=/*#__PURE__*/Object.freeze({__proto__:null,ui:ui$1,validation:validation$1});/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */ /**\n * Standard language for interface features.\n * @public\n */const ui={/**\n     * Shown on a button for adding additional items.\n     */add:'添加',/**\n     * Shown when a button to remove items is visible.\n     */remove:'移除',/**\n     * Shown when there are multiple items to remove at the same time.\n     */removeAll:'移除全部',/**\n     * Shown when all fields are not filled out correctly.\n     */incomplete:'抱歉，部分字段未被正确填写。',/**\n     * Shown in a button inside a form to submit the form.\n     */submit:'提交',/**\n     * Shown when no files are selected.\n     */noFiles:'未选择文件',/**\n     * Shown on buttons that move fields up in a list.\n     */moveUp:'上移',/**\n     * Shown on buttons that move fields down in a list.\n     */moveDown:'下移',/**\n     * Shown when something is actively loading.\n     */isLoading:'加载中...',/**\n     * Shown when there is more to load.\n     */loadMore:'加载更多',/**\n     * Shown on buttons that navigate state forward\n     */next:'下一步',/**\n     * Shown on buttons that navigate state backward\n     */prev:'以前',/**\n     * Shown when adding all values.\n     */addAllValues:'将所有值相加',/**\n     * Shown when adding selected values.\n     */addSelectedValues:'添加所选值',/**\n     * Shown when removing all values.\n     */removeAllValues:'移除所有值',/**\n     * Shown when removing selected values.\n     */removeSelectedValues:'移除所选值',/**\n     * Shown when there is a date to choose.\n     */chooseDate:'选择日期',/**\n     * Shown when there is a date to change.\n     */changeDate:'更改日期',/**\n     * Shown when the date is invalid.\n     */invalidDate:'所选日期无效。'};/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */const validation={/**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */accepted({name}){/* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */return`请接受${name}。`;/* </i18n> */},/**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */date_after({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */return`${sentence(name)}必须晚于${date(args[0])}。`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */return`${sentence(name)}必须是未来的日期。`;/* </i18n> */},/**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */alpha({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */return`${sentence(name)}只能包含英文字母。`;/* </i18n> */},/**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */alphanumeric({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */return`${sentence(name)}只能包含字母和数字。`;/* </i18n> */},/**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */alpha_spaces({name}){/* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */return`${sentence(name)}只能包含字母和空格。`;/* </i18n> */},/**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */date_before({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */return`${sentence(name)}必须早于${date(args[0])}。`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */return`${sentence(name)}必须是过去的日期。`;/* </i18n> */},/**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */between({name,args}){if(isNaN(args[0])||isNaN(args[1])){/* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */return`该字段未被正确设置而无法提交。`;/* </i18n> */}const[a,b]=order(args[0],args[1]);/* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */return`${sentence(name)}必须在${a}和${b}之间。`;/* </i18n> */},/**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */confirm({name}){/* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */return`${sentence(name)}不匹配。`;/* </i18n> */},/**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */date_format({name,args}){if(Array.isArray(args)&&args.length){/* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */return`${sentence(name)}不是合法日期，请使用 ${args[0]} 格式`;/* </i18n> */}/* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */return'该字段未被正确设置而无法提交';/* </i18n> */},/**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */date_between({name,args}){/* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */return`${sentence(name)}必须在${date(args[0])}和${date(args[1])}之间`;/* </i18n> */},/**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */email:'请输入合法的电子邮件地址。',/**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */ends_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */return`${sentence(name)}必须以${list(args)}结尾。`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */is({name}){/* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */return`${sentence(name)}是不允许的。`;/* </i18n> */},/**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */length({name,args:[first=0,second=Infinity]}){const min=Number(first)<=Number(second)?first:second;const max=Number(second)>=Number(first)?second:first;if(min==1&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */return`${sentence(name)}至少要有一个字符。`;/* </i18n> */}if(min==0&&max){/* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */return`${sentence(name)}必须少于或等于${max}个字符。`;/* </i18n> */}if(min===max){/* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */return`${sentence(name)}必须包含${max}个字符。`;/* </i18n> */}if(min&&max===Infinity){/* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */return`${sentence(name)}必须多于或等于${min}个字符。`;/* </i18n> */}/* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */return`${sentence(name)}必须介于${min}和${max}个字符之间。`;/* </i18n> */},/**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */matches({name}){/* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */return`${sentence(name)}是不允许的。`;/* </i18n> */},/**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */max({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */return`${name}不得多于${args[0]}个值。`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */return`${name}不得大于${args[0]}。`;/* </i18n> */},/**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */mime({name,args}){if(!args[0]){/* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */return'没有允许的文件格式。';/* </i18n> */}/* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */return`${sentence(name)}的类型必须为：${args[0]}`;/* </i18n> */},/**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */min({name,node:{value},args}){if(Array.isArray(value)){/* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */return`${name}不得少于${args[0]}个值。`;/* </i18n> */}/* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */return`${sentence(name)}不得小于${args[0]}。`;/* </i18n> */},/**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */not({name,node:{value}}){/* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */return`\"${value}\"不是一个合法的${name}。`;/* </i18n> */},/**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */number({name}){/* <i18n case=\"Shown when the user-provided value is not a number.\"> */return`${sentence(name)}必须为数字。`;/* </i18n> */},/**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */required({name}){/* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */return`${sentence(name)}不得留空。`;/* </i18n> */},/**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */starts_with({name,args}){/* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */return`${sentence(name)}必须以${list(args)}开头。`;/* </i18n> */},/**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */url(){/* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */return`请输入有效的 URL。`;/* </i18n> */}};var zh=/*#__PURE__*/Object.freeze({__proto__:null,ui:ui,validation:validation});/**\n * Create a new internationalization plugin for FormKit.\n *\n * @param registry - The registry of {@link @formkit/i18n#FormKitLocaleRegistry | FormKitLocales}.\n *\n * @returns {@link @formkit/core#FormKitPlugin | FormKitPlugin}\n *\n * @public\n */function createI18nPlugin(registry){return function i18nPlugin(node){let localeKey=parseLocale(node.config.locale,registry);let locale=localeKey?registry[localeKey]:{};/* If the locale prop changes, update the active locale */node.on('prop:locale',({payload:lang})=>{localeKey=parseLocale(lang,registry);locale=localeKey?registry[localeKey]:{};// Run through all the messages in the store and update with new locale\nnode.store.touch();});node.on('prop:label',()=>node.store.touch());node.on('prop:validationLabel',()=>node.store.touch());/**\n         * Hook into the core text or t() hook to perform localization on the\n         * output of core functionality.\n         */node.hook.text((fragment,next)=>{var _a,_b;const key=((_a=fragment.meta)===null||_a===void 0?void 0:_a.messageKey)||fragment.key;if(has(locale,fragment.type)&&has(locale[fragment.type],key)){const t=locale[fragment.type][key];if(typeof t==='function'){fragment.value=Array.isArray((_b=fragment.meta)===null||_b===void 0?void 0:_b.i18nArgs)?t(...fragment.meta.i18nArgs)// eslint-disable-line @typescript-eslint/no-non-null-assertion\n:t(fragment);}else{fragment.value=t;}}return next(fragment);});};}/**\n * Parse ISO 639-1 and 639-2 to a valid locale key.\n *\n * @param locale - An ISO 639-1 and (optionally) ISO 639-2 language tag. For these are valid locale keys:\n * zh\n * zh-CN\n * zh-HK\n * en\n * en-GB\n *\n * @param availableLocales - An array of locales that may be valid.\n *\n * @public\n */function parseLocale(locale,availableLocales){if(has(availableLocales,locale)){return locale;}const[lang]=locale.split('-');if(has(availableLocales,lang)){return lang;}for(const locale in availableLocales){return locale;}return false;}/**\n * The official FormKit internationalization (i18n) plugin. This package\n * contains the locales and the plugin that integrates FormKit with these\n * locales. Read the {@link https://formkit.com/essentials/internationalization\n * | internationalization documentation} for usage instructions.\n *\n * @packageDocumentation\n */ /**\n * Export all the available locales at once.\n *\n * @public\n */const locales={ar,az,bg,ca,cs,da,de,el,en,es,fa,fi,fr,fy,he,hr,hu,id,it,ja,kk,ko,nb,nl,pl,pt,ro,ru,sk,sl,sr,sv,tg,th,tr,uk,uz,vi,zh};export{ar,az,bg,ca,createI18nPlugin,cs,da,date,de,el,en,es,fa,fi,fr,fy,he,hr,hu,id,it,ja,kk,ko,list,locales,nb,nl,order,pl,pt,ro,ru,sentence,sk,sl,sr,sv,tg,th,tr,uk,uz,vi,zh};","map":{"version":3,"names":["has","sentence","str","toUpperCase","substr","list","items","conjunction","reduce","oxford","item","index","length","date","dateTime","Date","parse","Intl","DateTimeFormat","undefined","dateStyle","timeZone","format","order","first","second","Number","ui$C","add","remove","removeAll","incomplete","submit","noFiles","moveUp","moveDown","isLoading","loadMore","next","prev","addAllValues","addSelectedValues","removeAllValues","removeSelectedValues","chooseDate","changeDate","invalidDate","validation$C","accepted","name","date_after","args","Array","isArray","alpha","alphanumeric","alpha_spaces","date_before","between","isNaN","a","b","confirm","date_format","date_between","email","ends_with","is","Infinity","min","max","matches","node","value","mime","not","number","required","starts_with","url","ar","Object","freeze","__proto__","ui","validation","ui$B","validation$B","az","ui$A","validation$A","bg","ui$z","validation$z","ca","ui$y","validation$y","cs","ui$x","validation$x","da","ui$w","validation$w","de","ui$v","validation$v","el","ui$u","validation$u","en","ui$t","validation$t","es","ui$s","validation$s","fa","ui$r","validation$r","fi","ui$q","validation$q","fr","ui$p","validation$p","fy","ui$o","validation$o","he","ui$n","validation$n","hr","ui$m","validation$m","hu","ui$l","validation$l","id","ui$k","validation$k","it","ui$j","validation$j","ja","ui$i","validation$i","kk","ui$h","validation$h","ko","ui$g","validation$g","nb","ui$f","validation$f","nl","ui$e","validation$e","pl","ui$d","validation$d","pt","ui$c","validation$c","ro","ui$b","validation$b","ru","ui$a","validation$a","sk","ui$9","validation$9","sl","ui$8","validation$8","sr","ui$7","validation$7","sv","ui$6","validation$6","tg","ui$5","validation$5","th","ui$4","validation$4","tr","ui$3","validation$3","uk","ui$2","validation$2","uz","ui$1","validation$1","vi","zh","createI18nPlugin","registry","i18nPlugin","localeKey","parseLocale","config","locale","on","payload","lang","store","touch","hook","text","fragment","_a","_b","key","meta","messageKey","type","t","i18nArgs","availableLocales","split","locales"],"sources":["D:/VueJS/Form Validation with Formkit/node_modules/@formkit/i18n/dist/index.mjs"],"sourcesContent":["import { has } from '@formkit/utils';\n\n/**\n * Given a string, convert it to sentence case.\n *\n * @param str - The string to sentence case.\n *\n * @returns `string`\n *\n * @public\n */\nfunction sentence(str) {\n    return str[0].toUpperCase() + str.substr(1);\n}\n/**\n * Creates an oxford-comma separated list of items.\n *\n * @param items - the items to list out.\n * @param conjunction - in the list \"x, y, and z\", \"and\" is the conjunction.\n * Defaults to \"or\".\n *\n * @returns `string`\n *\n * @public\n */\nfunction list(items, conjunction = 'or') {\n    return items.reduce((oxford, item, index) => {\n        oxford += item;\n        if (index <= items.length - 2 && items.length > 2) {\n            oxford += ', ';\n        }\n        if (index === items.length - 2) {\n            oxford += `${items.length === 2 ? ' ' : ''}${conjunction} `;\n        }\n        return oxford;\n    }, '');\n}\n/**\n * Given a string or a date, return a nice human-readable version.\n *\n * @param date - A string or a date.\n *\n * @returns `string`\n *\n * @public\n */\nfunction date(date) {\n    const dateTime = typeof date === 'string' ? new Date(Date.parse(date)) : date;\n    if (!(dateTime instanceof Date)) {\n        return '(unknown)';\n    }\n    return new Intl.DateTimeFormat(undefined, {\n        dateStyle: 'medium',\n        timeZone: 'UTC'\n    }).format(dateTime);\n}\n/**\n * Orders two variables from smallest to largest.\n *\n * @param first - The first number or string.\n * @param second - The second number or string.\n *\n * @returns `[smaller: number | string, larger: number | string]`\n *\n * @public\n */\nfunction order(first, second) {\n    return Number(first) >= Number(second) ? [second, first] : [first, second];\n}\n\n/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */\n/**\n * Standard language for interface features.\n * @public\n */\nconst ui$C = {\n    /**\n     * Shown on buttons for adding new items.\n     */\n    add: 'إضافة',\n    /**\n     * Shown when a button to remove items is visible.\n     */\n    remove: 'إزالة',\n    /**\n     * Shown when there are multiple items to remove at the same time.\n     */\n    removeAll: 'إزالة الكل',\n    /**\n     * Shown when all fields are not filled out correctly.\n     */\n    incomplete: 'عذرا، لم يتم تعبئة جميع الحقول بشكل صحيح.',\n    /**\n     * Shown in a button inside a form to submit the form.\n     */\n    submit: 'إرسال',\n    /**\n     * Shown when no files are selected.\n     */\n    noFiles: 'لا يوجد ملف مختار',\n    /**\n     * Shown on buttons that move fields up in a list.\n     */\n    moveUp: 'تحرك لأعلى',\n    /**\n     * Shown on buttons that move fields down in a list.\n     */\n    moveDown: 'انتقل لأسفل',\n    /**\n     * Shown when something is actively loading.\n     */\n    isLoading: 'يتم الآن التحميل...',\n    /**\n     * Shown when there is more to load.\n     */\n    loadMore: 'تحميل المزيد',\n    /**\n     * Shown on buttons that navigate state forward\n     */\n    next: 'التالي',\n    /**\n     * Shown on buttons that navigate state backward\n     */\n    prev: 'السابق',\n    /**\n     * Shown when transferring items between lists.\n     */\n    addAllValues: 'أضف جميع القيم',\n    /**\n     * Shown when adding selected values.\n     */\n    addSelectedValues: 'إضافة قيم محددة',\n    /**\n     * Shown when removing all values.\n     */\n    removeAllValues: 'قم بإزالة جميع القيم',\n    /**\n     * Shown when removing selected values.\n     */\n    removeSelectedValues: 'إزالة القيم المحددة',\n    /**\n     * Shown when there is a date to choose.\n     */\n    chooseDate: 'اختر التاريخ',\n    /**\n     * Shown when there is a date to change.\n     */\n    changeDate: 'تاريخ التغيير',\n    /**\n     * Shown when the date is invalid.\n     */\n    invalidDate: 'التاريخ المحدد غير صالح.',\n};\n/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */\nconst validation$C = {\n    /**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */\n    accepted({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */\n        return `الرجاء قبول ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */\n    date_after({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */\n            return `يجب أن يكون ${sentence(name)} بعد ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */\n        return `يجب أن يكون ${sentence(name)} في المستقبل.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */\n    alpha({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */\n        return `يمكن أن يحتوي ${sentence(name)} على أحرف أبجدية فقط.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */\n    alphanumeric({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */\n        return `يمكن أن يحتوي ${sentence(name)} على أحرف وأرقام فقط.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */\n    alpha_spaces({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */\n        return `يمكن أن تحتوي ${sentence(name)} على أحرف ومسافات فقط.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */\n    date_before({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */\n            return `يجب أن يكون ${sentence(name)} قبل ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */\n        return `يجب أن يكون ${sentence(name)} في الماضي.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */\n    between({ name, args }) {\n        if (isNaN(args[0]) || isNaN(args[1])) {\n            /* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */\n            return `تمت تهيئة هذا الحقل بشكل غير صحيح ولا يمكن إرساله.`;\n            /* </i18n> */\n        }\n        const [a, b] = order(args[0], args[1]);\n        /* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */\n        return `يجب أن يكون ${sentence(name)} ما بين ${a} و ${b}.`;\n        /* </i18n> */\n    },\n    /**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */\n    confirm({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */\n        return `${sentence(name)} غير متطابق.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */\n    date_format({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */\n            return `${sentence(name)} ليس تاريخًا صالحًا ، يرجى استخدام التنسيق ${args[0]}`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */\n        return 'تمت تهيئة هذا الحقل بشكل غير صحيح ولا يمكن إرساله';\n        /* </i18n> */\n    },\n    /**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */\n    date_between({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */\n        return `يجب أن يكون ${sentence(name)} بين ${date(args[0])} و ${date(args[1])}`;\n        /* </i18n> */\n    },\n    /**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */\n    email: 'الرجاء أدخال بريد إليكتروني صالح.',\n    /**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */\n    ends_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */\n        return `لا ينتهي ${sentence(name)} بـ ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */\n    is({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */\n        return `${sentence(name)} ليست قيمة مسموح بها.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */\n    length({ name, args: [first = 0, second = Infinity] }) {\n        const min = Number(first) <= Number(second) ? first : second;\n        const max = Number(second) >= Number(first) ? second : first;\n        if (min == 1 && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */\n            return `يجب أن يكون ${sentence(name)} حرفًا واحدًا على الأقل.`;\n            /* </i18n> */\n        }\n        if (min == 0 && max) {\n            /* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */\n            return `يجب أن يكون ${sentence(name)} أقل من أو يساوي ${max} حرفًا.`;\n            /* </i18n> */\n        }\n        if (min === max) {\n            /* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */\n            return `يجب أن يتكون ${sentence(name)} من الأحرف ${max}.`;\n            /* </i18n> */\n        }\n        if (min && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */\n            return `يجب أن يكون ${sentence(name)} أكبر من أو يساوي ${min} حرفًا.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */\n        return `يجب أن يكون ${sentence(name)} بين ${min} و ${max} حرفًا.`;\n        /* </i18n> */\n    },\n    /**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */\n    matches({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */\n        return `${sentence(name)} ليست قيمة مسموح بها.`;\n        /* </i18n> */\n    },\n    /**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */\n    max({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */\n            return `لا يمكن أن يكون أكثر من ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */\n        return `يجب أن يكون ${sentence(name)} أقل من أو يساوي ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */\n    mime({ name, args }) {\n        if (!args[0]) {\n            /* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */\n            return 'لا يسمح بتنسيقات الملفات.';\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */\n        return `يجب أن يكون ${sentence(name)} من النوع: ${args[0]}`;\n        /* </i18n> */\n    },\n    /**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */\n    min({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */\n            return `لا يمكن أن يكون أقل من ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */\n        return `يجب أن يكون ${sentence(name)} على الأقل ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */\n    not({ name, node: { value } }) {\n        /* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */\n        return `“${value}” ليس ${name} مسموحًا به.`;\n        /* </i18n> */\n    },\n    /**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */\n    number({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a number.\"> */\n        return `${sentence(name)} يجب ان يكون رقماً`;\n        /* </i18n> */\n    },\n    /**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */\n    required({ name }) {\n        /* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */\n        return `${sentence(name)} مطلوب.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */\n    starts_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */\n        return `لا يبدأ ${sentence(name)} بـ ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */\n    url() {\n        /* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */\n        return `يرجى إدخال عنوان URL صالح.`;\n        /* </i18n> */\n    },\n};\n\nvar ar = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ui: ui$C,\n    validation: validation$C\n});\n\n/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */\n/**\n * Standard language for interface features.\n * @public\n */\nconst ui$B = {\n    /**\n     * Shown on a button for adding additional items.\n     */\n    add: 'əlavə edin',\n    /**\n     * Shown when a button to remove items is visible.\n     */\n    remove: 'çıxarmaq',\n    /**\n     * Shown when there are multiple items to remove at the same time.\n     */\n    removeAll: 'Hamısını silin',\n    /**\n     * Shown when all fields are not filled out correctly.\n     */\n    incomplete: 'Üzr istəyirik, bütün sahələr düzgün doldurulmayıb.',\n    /**\n     * Shown in a button inside a form to submit the form.\n     */\n    submit: 'Təqdim et',\n    /**\n     * Shown when no files are selected.\n     */\n    noFiles: 'Heç bir fayl seçilməyib',\n    /**\n     * Shown on buttons that move fields up in a list.\n     */\n    moveUp: 'yuxarı hərəkət',\n    /**\n     * Shown on buttons that move fields down in a list.\n     */\n    moveDown: 'Aşağı hərəkət',\n    /**\n     * Shown when something is actively loading.\n     */\n    isLoading: 'Yükləmə...',\n    /**\n     * Shown when there is more to load.\n     */\n    loadMore: 'Daha çox yüklə',\n    /**\n     * Shown on buttons that navigate state forward\n     */\n    next: 'Növbəti',\n    /**\n     * Shown on buttons that navigate state backward\n     */\n    prev: 'Əvvəlki',\n    /**\n     * Shown when adding all values.\n     */\n    addAllValues: 'Bütün dəyərləri əlavə edin',\n    /**\n     * Shown when adding selected values.\n     */\n    addSelectedValues: 'Seçilmiş dəyərləri əlavə edin',\n    /**\n     * Shown when removing all values.\n     */\n    removeAllValues: 'Bütün dəyərləri sil',\n    /**\n     * Shown when removing selected values.\n     */\n    removeSelectedValues: 'Seçilmiş dəyərləri sil',\n    /**\n     * Shown when there is a date to choose.\n     */\n    chooseDate: 'Tarixi seçin',\n    /**\n     * Shown when there is a date to change.\n     */\n    changeDate: 'Tarixi dəyişdirin',\n    /**\n     * Shown when the date is invalid.\n     */\n    invalidDate: 'Seçilmiş tarix etibarsızdır.',\n};\n/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */\nconst validation$B = {\n    /**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */\n    accepted({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */\n        return `${name} qəbul edin.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */\n    date_after({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */\n            return `${sentence(name)} ${date(args[0])} sonra olmalıdır.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} gələcəkdə olmalıdır.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */\n    alpha({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */\n        return `${sentence(name)} yalnız əlifba sırası simvollarından ibarət ola bilər.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */\n    alphanumeric({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */\n        return `${sentence(name)} yalnız hərf və rəqəmlərdən ibarət ola bilər.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */\n    alpha_spaces({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */\n        return `${sentence(name)} yalnız hərflərdən və boşluqlardan ibarət ola bilər.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */\n    date_before({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */\n            return `${sentence(name)} ${date(args[0])} əvvəl olmalıdır.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} keçmişdə olmalıdır.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */\n    between({ name, args }) {\n        if (isNaN(args[0]) || isNaN(args[1])) {\n            /* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */\n            return `Bu sahə səhv konfiqurasiya edilib və onu təqdim etmək mümkün deyil.`;\n            /* </i18n> */\n        }\n        const [a, b] = order(args[0], args[1]);\n        /* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */\n        return `${sentence(name)} ${a} və ${b} arasında olmalıdır.`;\n        /* </i18n> */\n    },\n    /**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */\n    confirm({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */\n        return `${sentence(name)} uyğun gəlmir.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */\n    date_format({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */\n            return `${sentence(name)} etibarlı tarix deyil, ${args[0]} formatından istifadə edin`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */\n        return 'Bu sahə səhv konfiqurasiya edilib və onu təqdim etmək mümkün deyil';\n        /* </i18n> */\n    },\n    /**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */\n    date_between({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */\n        return `${sentence(name)} ${date(args[0])} və ${date(args[1])} arasında olmalıdır`;\n        /* </i18n> */\n    },\n    /**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */\n    email: 'Etibarlı e-poçt ünvanı daxil edin.',\n    /**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */\n    ends_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */\n        return `${sentence(name)} ${list(args)} ilə bitmir.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */\n    is({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */\n        return `${sentence(name)} icazə verilən dəyər deyil.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */\n    length({ name, args: [first = 0, second = Infinity] }) {\n        const min = Number(first) <= Number(second) ? first : second;\n        const max = Number(second) >= Number(first) ? second : first;\n        if (min == 1 && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */\n            return `${sentence(name)} ən azı bir simvol olmalıdır.`;\n            /* </i18n> */\n        }\n        if (min == 0 && max) {\n            /* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */\n            return `${sentence(name)} ${max} simvoldan kiçik və ya ona bərabər olmalıdır.`;\n            /* </i18n> */\n        }\n        if (min === max) {\n            /* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */\n            return `${sentence(name)} ${max} simvol uzunluğunda olmalıdır.`;\n            /* </i18n> */\n        }\n        if (min && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */\n            return `${sentence(name)} ${min} simvoldan böyük və ya ona bərabər olmalıdır.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */\n        return `${sentence(name)} ${min} və ${max} simvol arasında olmalıdır.`;\n        /* </i18n> */\n    },\n    /**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */\n    matches({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */\n        return `${sentence(name)} icazə verilən dəyər deyil.`;\n        /* </i18n> */\n    },\n    /**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */\n    max({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */\n            return `${args[0]} ${name}-dən çox ola bilməz.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */\n        return `${sentence(name)} ${args[0]} dəyərindən kiçik və ya ona bərabər olmalıdır.`;\n        /* </i18n> */\n    },\n    /**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */\n    mime({ name, args }) {\n        if (!args[0]) {\n            /* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */\n            return 'Fayl formatlarına icazə verilmir.';\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */\n        return `${sentence(name)} aşağıdakı tipdə olmalıdır: ${args[0]}`;\n        /* </i18n> */\n    },\n    /**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */\n    min({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */\n            return `${args[0]} ${name}-dən az ola bilməz.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */\n        return `${sentence(name)} ən azı ${args[0]} olmalıdır.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */\n    not({ name, node: { value } }) {\n        /* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */\n        return `“${value}” icazə verilən ${name} deyil.`;\n        /* </i18n> */\n    },\n    /**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */\n    number({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a number.\"> */\n        return `${sentence(name)} rəqəm olmalıdır.`;\n        /* </i18n> */\n    },\n    /**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */\n    required({ name }) {\n        /* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */\n        return `${sentence(name)} tələb olunur.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */\n    starts_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */\n        return `${sentence(name)} ${list(args)} ilə başlamır.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */\n    url() {\n        /* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */\n        return `Xahiş edirik, düzgün URL daxil edin.`;\n        /* </i18n> */\n    },\n};\n\nvar az = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ui: ui$B,\n    validation: validation$B\n});\n\n/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */\n/**\n * Standard language for interface features.\n * @public\n */\nconst ui$A = {\n    /**\n     * Shown on a button for adding additional items.\n     */\n    add: 'Добави',\n    /**\n     * Shown when a button to remove items is visible.\n     */\n    remove: 'Премахни',\n    /**\n     * Shown when there are multiple items to remove at the same time.\n     */\n    removeAll: 'Премахни всички',\n    /**\n     * Shown when all fields are not filled out correctly.\n     */\n    incomplete: 'Извинете, не всички полета са попълнени правилно.',\n    /**\n     * Shown in a button inside a form to submit the form.\n     */\n    submit: 'Изпрати',\n    /**\n     * Shown when no files are selected.\n     */\n    noFiles: 'Няма избран файл',\n    /**\n     * Shown on buttons that move fields up in a list.\n     */\n    moveUp: 'Преместване нагоре',\n    /**\n     * Shown on buttons that move fields down in a list.\n     */\n    moveDown: 'Преместете се надолу',\n    /**\n     * Shown when something is actively loading.\n     */\n    isLoading: 'Зареждане...',\n    /**\n     * Shown when there is more to load.\n     */\n    loadMore: 'Заредете повече',\n    /**\n     * Shown on buttons that navigate state forward\n     */\n    next: 'Следващ',\n    /**\n     * Shown on buttons that navigate state backward\n     */\n    prev: 'Предишен',\n    /**\n     * Shown when adding all values.\n     */\n    addAllValues: 'Добавете всички стойности',\n    /**\n     * Shown when adding selected values.\n     */\n    addSelectedValues: 'Добавяне на избрани стойности',\n    /**\n     * Shown when removing all values.\n     */\n    removeAllValues: 'Премахнете всички стойности',\n    /**\n     * Shown when removing selected values.\n     */\n    removeSelectedValues: 'Премахване на избраните стойности',\n    /**\n     * Shown when there is a date to choose.\n     */\n    chooseDate: 'Избери дата',\n    /**\n     * Shown when there is a date to change.\n     */\n    changeDate: 'Промяна на датата',\n    /**\n     * Shown when the date is invalid.\n     */\n    invalidDate: 'Избраната дата е невалидна.',\n};\n/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */\nconst validation$A = {\n    /**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */\n    accepted({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */\n        return `Моля приемете ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */\n    date_after({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */\n            return `${sentence(name)} трябва да е след ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} трябва да бъде в бъдещето.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */\n    alpha({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */\n        return `${sentence(name)} може да съдържа само букви.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */\n    alphanumeric({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */\n        return `${sentence(name)} може да съдържа само букви и цифри.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */\n    alpha_spaces({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */\n        return `${sentence(name)} може да съдържа само букви и интервали.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */\n    date_before({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */\n            return `${sentence(name)} трябва да е преди ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} трябва да бъде в миналото.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */\n    between({ name, args }) {\n        if (isNaN(args[0]) || isNaN(args[1])) {\n            /* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */\n            return `Това поле е конфигурирано неправилно и не може да бъде изпратено`;\n            /* </i18n> */\n        }\n        const [a, b] = order(args[0], args[1]);\n        /* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */\n        return `${sentence(name)} трябва да бъде между ${a} и ${b}.`;\n        /* </i18n> */\n    },\n    /**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */\n    confirm({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */\n        return `${sentence(name)} не съвпада.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */\n    date_format({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */\n            return `${sentence(name)} е невалидна дата. Моля, използвайте формата ${args[0]}`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */\n        return 'Това поле е конфигурирано неправилно и не може да бъде изпратено';\n        /* </i18n> */\n    },\n    /**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */\n    date_between({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */\n        return `${sentence(name)} трябва да бъде между ${date(args[0])} и ${date(args[1])}.`;\n        /* </i18n> */\n    },\n    /**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */\n    email: 'Моля, въведете валиден имейл адрес.',\n    /**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */\n    ends_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */\n        return `${sentence(name)} не завършва на ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */\n    is({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */\n        return `${sentence(name)} е неразрешена стойност.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */\n    length({ name, args: [first = 0, second = Infinity] }) {\n        const min = Number(first) <= Number(second) ? first : second;\n        const max = Number(second) >= Number(first) ? second : first;\n        if (min == 1 && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */\n            return `${sentence(name)} трябва да има поне един символ.`;\n            /* </i18n> */\n        }\n        if (min == 0 && max) {\n            /* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */\n            return `${sentence(name)} трябва да бъде по-малко или равно на ${max} символа.`;\n            /* </i18n> */\n        }\n        if (min === max) {\n            /* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */\n            return `${sentence(name)} трябва да бъде ${max} символи дълго.`;\n            /* </i18n> */\n        }\n        if (min && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */\n            return `${sentence(name)} трябва да бъде по-голямо или равно на ${min} символа.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */\n        return `${sentence(name)} трябва да бъде между ${min} и ${max} символа.`;\n        /* </i18n> */\n    },\n    /**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */\n    matches({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */\n        return `${sentence(name)} е неразрешена стойност.`;\n        /* </i18n> */\n    },\n    /**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */\n    max({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */\n            return `Не може да има повече от ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */\n        return `${sentence(name)} трябва да бъде по-малко или равно на ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */\n    mime({ name, args }) {\n        if (!args[0]) {\n            /* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */\n            return 'Не са разрешени никакви файлови формати.';\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */\n        return `${sentence(name)} трябва да бъде от тип: ${args[0]}`;\n        /* </i18n> */\n    },\n    /**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */\n    min({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */\n            return `Не може да има по-малко от ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */\n        return `${sentence(name)} трябва да бъде поне ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */\n    not({ name, node: { value } }) {\n        /* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */\n        return `“${value}” е неразрешен ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */\n    number({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a number.\"> */\n        return `${sentence(name)} трябва да бъде число.`;\n        /* </i18n> */\n    },\n    /**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */\n    required({ name }) {\n        /* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */\n        return `${sentence(name)} е задължително.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */\n    starts_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */\n        return `${sentence(name)} не започва с ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */\n    url() {\n        /* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */\n        return `Моля, въведете валиден URL адрес.`;\n        /* </i18n> */\n    },\n};\n\nvar bg = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ui: ui$A,\n    validation: validation$A\n});\n\n/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */\n/**\n * Standard language for interface features.\n * @public\n */\nconst ui$z = {\n    /**\n     * Shown on a button for adding additional items.\n     */\n    add: 'Afegir',\n    /**\n     * Shown when a button to remove items is visible.\n     */\n    remove: 'Eliminar',\n    /**\n     * Shown when there are multiple items to remove at the same time.\n     */\n    removeAll: 'Eliminar tot',\n    /**\n     * Shown when all fields are not filled out correctly.\n     */\n    incomplete: 'Disculpi, no tots els camps estan omplerts correctament.',\n    /**\n     * Shown in a button inside a form to submit the form.\n     */\n    submit: 'Enviar',\n    /**\n     * Shown when no files are selected.\n     */\n    noFiles: 'Cap fitxer triat',\n    /**\n     * Shown on buttons that move fields up in a list.\n     */\n    moveUp: 'Moure amunt',\n    /**\n     * Shown on buttons that move fields down in a list.\n     */\n    moveDown: 'Moure avall',\n    /**\n     * Shown when something is actively loading.\n     */\n    isLoading: 'Carregant...',\n    /**\n     * Shown when there is more to load.\n     */\n    loadMore: 'Carregar més',\n    /**\n     * Shown on buttons that navigate state forward\n     */\n    next: 'Següent',\n    /**\n     * Shown on buttons that navigate state backward\n     */\n    prev: 'Anterior',\n    /**\n     * Shown when adding all values.\n     */\n    addAllValues: 'Afegir tots els valors',\n    /**\n     * Shown when adding selected values.\n     */\n    addSelectedValues: 'Afegeix els valors seleccionats',\n    /**\n     * Shown when removing all values.\n     */\n    removeAllValues: 'Eliminar tots els valors',\n    /**\n     * Shown when removing selected values.\n     */\n    removeSelectedValues: 'Elimina els valors seleccionats',\n    /**\n     * Shown when there is a date to choose.\n     */\n    chooseDate: 'Trieu la data',\n    /**\n     * Shown when there is a date to change.\n     */\n    changeDate: 'Canviar data',\n    /**\n     * Shown when the date is invalid.\n     */\n    invalidDate: 'La data seleccionada no és vàlida.',\n};\n/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */\nconst validation$z = {\n    /**\n     * The value is not an accepted value.\n     * @see {@link https://docs.formkit.com/essentials/validation#accepted}\n     */\n    accepted({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */\n        return `Si us plau accepti ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not after\n     * @see {@link https://docs.formkit.com/essentials/validation#date-after}\n     */\n    date_after({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */\n            return `${sentence(name)} ha de ser posterior a ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} ha de succeïr al futur.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a letter.\n     * @see {@link https://docs.formkit.com/essentials/validation#alpha}\n     */\n    alpha({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */\n        return `${sentence(name)} només pot contenir caràcters alfabètics.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not alphanumeric\n     * @see {@link https://docs.formkit.com/essentials/validation#alphanumeric}\n     */\n    alphanumeric({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */\n        return `${sentence(name)} només pot contenir lletres i números.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not letter and/or spaces\n     * @see {@link https://docs.formkit.com/essentials/validation#alpha-spaces}\n     */\n    alpha_spaces({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */\n        return `${sentence(name)} només pot contenir lletres i espais.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not before\n     * @see {@link https://docs.formkit.com/essentials/validation#date-before}\n     */\n    date_before({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */\n            return `${sentence(name)} ha de ser anterior a ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} ha d'estar al passat.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not between two numbers\n     * @see {@link https://docs.formkit.com/essentials/validation#between}\n     */\n    between({ name, args }) {\n        if (isNaN(args[0]) || isNaN(args[1])) {\n            /* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */\n            return `Aquest camp està configurat incorrectament i no pot ésser enviat.`;\n            /* </i18n> */\n        }\n        const [a, b] = order(args[0], args[1]);\n        /* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */\n        return `${sentence(name)} ha d'estar entre ${a} i ${b}.`;\n        /* </i18n> */\n    },\n    /**\n     * The confirmation field does not match\n     * @see {@link https://docs.formkit.com/essentials/validation#confirm}\n     */\n    confirm({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */\n        return `${sentence(name)} no concorda.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a valid date\n     * @see {@link https://docs.formkit.com/essentials/validation#date-format}\n     */\n    date_format({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */\n            return `${sentence(name)} no és una data vàlida, si us plau empri el format ${args[0]}`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */\n        return 'Aquest camp està configurat incorrectament i no pot ésser enviat';\n        /* </i18n> */\n    },\n    /**\n     * Is not within expected date range\n     * @see {@link https://docs.formkit.com/essentials/validation#date-between}\n     */\n    date_between({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */\n        return `${sentence(name)} ha d'estar entre ${date(args[0])} i ${date(args[1])}`;\n        /* </i18n> */\n    },\n    /**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://docs.formkit.com/essentials/validation#email}\n     */\n    email: `Si us plau, entri una adreça d'e-mail vàlida.`,\n    /**\n     * Does not end with the specified value\n     * @see {@link https://docs.formkit.com/essentials/validation#ends-with}\n     */\n    ends_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */\n        return `${sentence(name)} no acaba amb ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://docs.formkit.com/essentials/validation#is}\n     */\n    is({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */\n        return `${sentence(name)} no és un valor acceptat.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not match specified length\n     * @see {@link https://docs.formkit.com/essentials/validation#length}\n     */\n    length({ name, args: [first = 0, second = Infinity] }) {\n        const min = Number(first) <= Number(second) ? first : second;\n        const max = Number(second) >= Number(first) ? second : first;\n        if (min == 1 && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */\n            return `${sentence(name)} ha de tenir com a mínim un caràcter.`;\n            /* </i18n> */\n        }\n        if (min == 0 && max) {\n            /* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */\n            return `${sentence(name)} ha de ser inferior o igual a ${max} caràcters.`;\n            /* </i18n> */\n        }\n        if (min === max) {\n            /* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */\n            return `${sentence(name)} ha de tenir una longitud de ${max} caràcters.`;\n            /* </i18n> */\n        }\n        if (min && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */\n            return `${sentence(name)} ha de ser major que o igual a ${min} caràcters.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */\n        return `${sentence(name)} ha d'estar entre ${min} i ${max} caràcters.`;\n        /* </i18n> */\n    },\n    /**\n     * Value is not a match\n     * @see {@link https://docs.formkit.com/essentials/validation#matches}\n     */\n    matches({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */\n        return `${sentence(name)} no és un valor permès.`;\n        /* </i18n> */\n    },\n    /**\n     * Exceeds maximum allowed value\n     * @see {@link https://docs.formkit.com/essentials/validation#max}\n     */\n    max({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */\n            return `No pot tenir més de ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */\n        return `${sentence(name)} ha de ser menys que o igual a ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://docs.formkit.com/essentials/validation#mime}\n     */\n    mime({ name, args }) {\n        if (!args[0]) {\n            /* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */\n            return 'No hi ha cap format de fitxer acceptat.';\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */\n        return `${sentence(name)} ha de ser del tipus: ${args[0]}`;\n        /* </i18n> */\n    },\n    /**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://docs.formkit.com/essentials/validation#min}\n     */\n    min({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */\n            return `No pot tenir menys de ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */\n        return `${sentence(name)} ha de ser com a mínim ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://docs.formkit.com/essentials/validation#not}\n     */\n    not({ name, node: { value } }) {\n        /* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */\n        return `“${value}” no s'accepta com a ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     *  Is not a number\n     * @see {@link https://docs.formkit.com/essentials/validation#number}\n     */\n    number({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a number.\"> */\n        return `${sentence(name)} ha de ser un número.`;\n        /* </i18n> */\n    },\n    /**\n     * Required field.\n     * @see {@link https://docs.formkit.com/essentials/validation#required}\n     */\n    required({ name }) {\n        /* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */\n        return `${sentence(name)} és obligatori.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not start with specified value\n     * @see {@link https://docs.formkit.com/essentials/validation#starts-with}\n     */\n    starts_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */\n        return `${sentence(name)} no comença amb ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not a url\n     * @see {@link https://docs.formkit.com/essentials/validation#url}\n     */\n    url() {\n        /* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */\n        return `Si us plau inclogui una url vàlida.`;\n        /* </i18n> */\n    },\n};\n\nvar ca = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ui: ui$z,\n    validation: validation$z\n});\n\n/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */\n/**\n * Standard language for interface features.\n * @public\n */\nconst ui$y = {\n    /**\n     * Shown on buttons for adding new items.\n     */\n    add: 'Přidat',\n    /**\n     * Shown when a button to remove items is visible.\n     */\n    remove: 'Odebrat',\n    /**\n     * Shown when there are multiple items to remove at the same time.\n     */\n    removeAll: 'Odebrat vše',\n    /**\n     * Shown when all fields are not filled out correctly.\n     */\n    incomplete: 'Pardon, ale ne všechna pole jsou vyplněna správně.',\n    /**\n     * Shown in a button inside a form to submit the form.\n     */\n    submit: 'Odeslat',\n    /**\n     * Shown when no files are selected.\n     */\n    noFiles: 'Žádný soubor nebyl vybrán',\n    /**\n     * Shown on buttons that move fields up in a list.\n     */\n    moveUp: 'Pohyb nahoru',\n    /**\n     * Shown on buttons that move fields down in a list.\n     */\n    moveDown: 'Posunout dolů',\n    /**\n     * Shown when something is actively loading.\n     */\n    isLoading: 'Načítání...',\n    /**\n     * Shown when there is more to load.\n     */\n    loadMore: 'Načíst více',\n    /**\n     * Shown on buttons that navigate state forward\n     */\n    next: 'Další',\n    /**\n     * Shown on buttons that navigate state backward\n     */\n    prev: 'Předchozí',\n    /**\n     * Shown when adding all values.\n     */\n    addAllValues: 'Přidat všechny hodnoty',\n    /**\n     * Shown when adding selected values.\n     */\n    addSelectedValues: 'Přidání vybraných hodnot',\n    /**\n     * Shown when removing all values.\n     */\n    removeAllValues: 'Odstraňte všechny hodnoty',\n    /**\n     * Shown when removing selected values.\n     */\n    removeSelectedValues: 'Odstranění vybraných hodnot',\n    /**\n     * Shown when there is a date to choose.\n     */\n    chooseDate: 'Zvolte datum',\n    /**\n     * Shown when there is a date to change.\n     */\n    changeDate: 'Změnit datum',\n    /**\n     * Shown when the date is invalid.\n     */\n    invalidDate: 'Vybrané datum je neplatné.',\n};\n/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */\nconst validation$y = {\n    /**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */\n    accepted({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */\n        return `Prosím, zaškrtněte ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */\n    date_after({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */\n            return `${sentence(name)} musí být po ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} musí být v budoucnosti.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */\n    alpha({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */\n        return `${sentence(name)} může obsahovat pouze písmena.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */\n    alphanumeric({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */\n        return `${sentence(name)} může obsahovat pouze písmena a čísla.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */\n    date_before({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */\n            return `${sentence(name)} musí být před ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} musí být v minulosti.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */\n    between({ name, args }) {\n        if (isNaN(args[0]) || isNaN(args[1])) {\n            /* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */\n            return `Toto pole bylo špatně nakonfigurováno a nemůže být odesláno.`;\n            /* </i18n> */\n        }\n        const [a, b] = order(args[0], args[1]);\n        /* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */\n        return `${sentence(name)} musí být mezi ${a} a ${b}.`;\n        /* </i18n> */\n    },\n    /**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */\n    confirm({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */\n        return `${sentence(name)} nejsou shodná.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */\n    date_format({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */\n            return `${sentence(name)} není platné datum, prosím, použijte formát ${args[0]}`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */\n        return 'Toto pole bylo špatně nakonfigurováno a nemůže být odesláno.';\n        /* </i18n> */\n    },\n    /**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */\n    date_between({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */\n        return `${sentence(name)} musí být mezi ${date(args[0])} a ${date(args[1])}`;\n        /* </i18n> */\n    },\n    /**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */\n    email: 'Prosím, zadejte platnou e-mailovou adresu.',\n    /**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */\n    ends_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */\n        return `${sentence(name)} nekončí na ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */\n    is({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */\n        return `${sentence(name)} není povolená hodnota.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */\n    length({ name, args: [first = 0, second = Infinity] }) {\n        const min = Number(first) <= Number(second) ? first : second;\n        const max = Number(second) >= Number(first) ? second : first;\n        if (min == 1 && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */\n            return `${sentence(name)} musí mít nejméně jeden znak.`;\n            /* </i18n> */\n        }\n        if (min == 0 && max) {\n            /* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */\n            return `${sentence(name)} může mít maximálně ${max} znaků.`;\n            /* </i18n> */\n        }\n        if (min === max) {\n            /* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */\n            return `${sentence(name)} by mělo být ${max} znaků dlouhé.`;\n            /* </i18n> */\n        }\n        if (min && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */\n            return `${sentence(name)} musí obsahovat minimálně ${min} znaků.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */\n        return `${sentence(name)} musí být dlouhé ${min} až ${max} znaků.`;\n        /* </i18n> */\n    },\n    /**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */\n    matches({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */\n        return `${sentence(name)} není povolená hodnota.`;\n        /* </i18n> */\n    },\n    /**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */\n    max({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */\n            return `Nelze použít více než ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */\n        return `${sentence(name)} musí mít menší nebo rovno než ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */\n    mime({ name, args }) {\n        if (!args[0]) {\n            /* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */\n            return 'Nejsou nakonfigurovány povolené typy souborů.';\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */\n        return `${sentence(name)} musí být typu: ${args[0]}`;\n        /* </i18n> */\n    },\n    /**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */\n    min({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */\n            return `Nelze mít méně než ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */\n        return `${sentence(name)} musí být minimálně ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */\n    not({ name, node: { value } }) {\n        /* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */\n        return `“${value}” není dovolená hodnota pro ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */\n    number({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a number.\"> */\n        return `${sentence(name)} musí být číslo.`;\n        /* </i18n> */\n    },\n    /**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */\n    required({ name }) {\n        /* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */\n        return `${sentence(name)} je povinné.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */\n    starts_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */\n        return `${sentence(name)} nezačíná na ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */\n    url() {\n        /* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */\n        return `Zadejte prosím platnou adresu URL.`;\n        /* </i18n> */\n    },\n};\n\nvar cs = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ui: ui$y,\n    validation: validation$y\n});\n\n/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */\n/**\n * Standard language for interface features.\n * @public\n */\nconst ui$x = {\n    /**\n     * Shown on buttons for adding new items.\n     */\n    add: 'Tilføj',\n    /**\n     * Shown when a button to remove items is visible.\n     */\n    remove: 'Fjern',\n    /**\n     * Shown when there are multiple items to remove at the same time.\n     */\n    removeAll: 'Fjern alle',\n    /**\n     * Shown when all fields are not filled out correctly.\n     */\n    incomplete: 'Alle felter er ikke korrekt udfyldt.',\n    /**\n     * Shown in a button inside a form to submit the form.\n     */\n    submit: 'Send',\n    /**\n     * Shown when no files are selected.\n     */\n    noFiles: 'Ingen filer valgt',\n    /**\n     * Shown on buttons that move fields up in a list.\n     */\n    moveUp: 'Flyt op',\n    /**\n     * Shown on buttons that move fields down in a list.\n     */\n    moveDown: 'Flyt ned',\n    /**\n     * Shown when something is actively loading.\n     */\n    isLoading: 'Indlæser...',\n    /**\n     * Shown when there is more to load.\n     */\n    loadMore: 'Indlæs mere',\n    /**\n     * Shown on buttons that navigate state forward\n     */\n    next: 'Næste',\n    /**\n     * Shown on buttons that navigate state backward\n     */\n    prev: 'Forrige',\n    /**\n     * Shown when adding all values.\n     */\n    addAllValues: 'Tilføj alle værdier',\n    /**\n     * Shown when adding selected values.\n     */\n    addSelectedValues: 'Tilføj valgte værdier',\n    /**\n     * Shown when removing all values.\n     */\n    removeAllValues: 'Fjern alle værdier',\n    /**\n     * Shown when removing selected values.\n     */\n    removeSelectedValues: 'Fjern valgte værdier',\n    /**\n     * Shown when there is a date to choose.\n     */\n    chooseDate: 'Vælg dato',\n    /**\n     * Shown when there is a date to change.\n     */\n    changeDate: 'Skift dato',\n    /**\n     * Shown when the date is invalid.\n     */\n    invalidDate: 'Den valgte dato er ugyldig.',\n};\n/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */\nconst validation$x = {\n    /**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */\n    accepted({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */\n        return `Accepter venligst ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */\n    date_after({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */\n            return `${sentence(name)} skal være senere end ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} skal være i fremtiden.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */\n    alpha({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */\n        return `${sentence(name)} kan kun indeholde bogstaver.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */\n    alphanumeric({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */\n        return `${sentence(name)} kan kun indeholde bogstaver og tal.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */\n    alpha_spaces({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */\n        return `${sentence(name)} kan kun indeholde bogstaver og mellemrum.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */\n    date_before({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */\n            return `${sentence(name)} skal være før ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} skal være før i dag.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */\n    between({ name, args }) {\n        if (isNaN(args[0]) || isNaN(args[1])) {\n            /* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */\n            return `Dette felt er ikke konfigureret korrekt og kan derfor ikke blive sendt.`;\n            /* </i18n> */\n        }\n        const [a, b] = order(args[0], args[1]);\n        /* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */\n        return `${sentence(name)} skal være mellem ${a} og ${b}.`;\n        /* </i18n> */\n    },\n    /**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */\n    confirm({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */\n        return `${sentence(name)} matcher ikke.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */\n    date_format({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */\n            return `${sentence(name)} er ikke gyldig, brug venligst formatet ${args[0]}`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */\n        return 'Dette felt er ikke konfigureret korrekt og kan derfor ikke blive sendt.';\n        /* </i18n> */\n    },\n    /**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */\n    date_between({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */\n        return `${sentence(name)} skal være mellem ${date(args[0])} og ${date(args[1])}`;\n        /* </i18n> */\n    },\n    /**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */\n    email: 'Indtast venligst en gyldig email-adresse.',\n    /**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */\n    ends_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */\n        return `${sentence(name)} slutter ikke med ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */\n    is({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */\n        return `${sentence(name)} er ikke en gyldig værdi.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */\n    length({ name, args: [first = 0, second = Infinity] }) {\n        const min = Number(first) <= Number(second) ? first : second;\n        const max = Number(second) >= Number(first) ? second : first;\n        if (min == 1 && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */\n            return `${sentence(name)} skal være på mindst ét tegn.`;\n            /* </i18n> */\n        }\n        if (min == 0 && max) {\n            /* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */\n            return `${sentence(name)} skal være på højst ${max} tegn.`;\n            /* </i18n> */\n        }\n        if (min === max) {\n            /* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */\n            return `${sentence(name)} skal være ${max} tegn lange.`;\n            /* </i18n> */\n        }\n        if (min && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */\n            return `${sentence(name)} skal være på mindst ${min} tegn.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */\n        return `${sentence(name)} skal være på mindst ${min} og højst ${max} tegn.`;\n        /* </i18n> */\n    },\n    /**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */\n    matches({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */\n        return `${sentence(name)} er ikke en gyldig værdi.`;\n        /* </i18n> */\n    },\n    /**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */\n    max({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */\n            return `Kan ikke have flere end ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */\n        return `${sentence(name)} skal være mindre eller lig med ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */\n    mime({ name, args }) {\n        if (!args[0]) {\n            /* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */\n            return 'Ingen filformater tilladt.';\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */\n        return `${sentence(name)} skal være af filtypen: ${args[0]}`;\n        /* </i18n> */\n    },\n    /**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */\n    min({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */\n            return `Kan ikke have mindre end ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */\n        return `${sentence(name)} skal være mindst ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */\n    not({ name, node: { value } }) {\n        /* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */\n        return `“${value}” er ikke en tilladt ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */\n    number({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a number.\"> */\n        return `${sentence(name)} skal være et tal.`;\n        /* </i18n> */\n    },\n    /**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */\n    required({ name }) {\n        /* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */\n        return `${sentence(name)} er påkrævet.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */\n    starts_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */\n        return `${sentence(name)} starter ikke med ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */\n    url() {\n        /* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */\n        return `Indtast en gyldig URL.`;\n        /* </i18n> */\n    },\n};\n\nvar da = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ui: ui$x,\n    validation: validation$x\n});\n\n/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */\n/**\n * Standard language for interface features.\n * @public\n */\nconst ui$w = {\n    /**\n     * Shown on buttons for adding new items.\n     */\n    add: 'Hinzufügen',\n    /**\n     * Shown when a button to remove items is visible.\n     */\n    remove: 'Entfernen',\n    /**\n     * Shown when there are multiple items to remove at the same time.\n     */\n    removeAll: 'Alles entfernen',\n    /**\n     * Shown when all fields are not filled out correctly.\n     */\n    incomplete: 'Entschuldigung, nicht alle Felder wurden korrekt ausgefüllt.',\n    /**\n     * Shown in a button inside a form to submit the form.\n     */\n    submit: 'Senden',\n    /**\n     * Shown when no files are selected.\n     */\n    noFiles: 'Keine Datei ausgewählt',\n    /**\n     * Shown on buttons that move fields up in a list.\n     */\n    moveUp: 'Gehe nach oben',\n    /**\n     * Shown on buttons that move fields down in a list.\n     */\n    moveDown: 'Gehen Sie nach unten',\n    /**\n     * Shown when something is actively loading.\n     */\n    isLoading: 'Wird geladen...',\n    /**\n     * Shown when there is more to load.\n     */\n    loadMore: 'Mehr laden',\n    /**\n     * Shown on buttons that navigate state forward\n     */\n    next: 'Weiter',\n    /**\n     * Shown on buttons that navigate state backward\n     */\n    prev: 'Voriges',\n    /**\n     * Shown when adding all values.\n     */\n    addAllValues: 'Alle Werte hinzufügen',\n    /**\n     * Shown when adding selected values.\n     */\n    addSelectedValues: 'Ausgewählte Werte hinzufügen',\n    /**\n     * Shown when removing all values.\n     */\n    removeAllValues: 'Alle Werte entfernen',\n    /**\n     * Shown when removing selected values.\n     */\n    removeSelectedValues: 'Ausgewählte Werte entfernen',\n    /**\n     * Shown when there is a date to choose.\n     */\n    chooseDate: 'Datum wählen',\n    /**\n     * Shown when there is a date to change.\n     */\n    changeDate: 'Datum ändern',\n    /**\n     * Shown when the date is invalid.\n     */\n    invalidDate: 'Das gewählte Datum ist ungültig.',\n};\n/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */\nconst validation$w = {\n    /**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */\n    accepted({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */\n        return `Bitte ${name} akzeptieren.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */\n    date_after({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */\n            return `${sentence(name)} muss nach dem ${date(args[0])} liegen.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} muss in der Zukunft liegen.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */\n    alpha({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */\n        return `${sentence(name)} darf nur Buchstaben enthalten.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */\n    alphanumeric({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */\n        return `${sentence(name)} darf nur Buchstaben und Zahlen enthalten.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */\n    alpha_spaces({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */\n        return `${sentence(name)} dürfen nur Buchstaben und Leerzeichen enthalten.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */\n    date_before({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */\n            return `${sentence(name)} muss vor dem ${date(args[0])} liegen.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} muss in der Vergangenheit liegen.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */\n    between({ name, args }) {\n        if (isNaN(args[0]) || isNaN(args[1])) {\n            /* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */\n            return `Dieses Feld wurde falsch konfiguriert und kann nicht übermittelt werden.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */\n        return `${sentence(name)} muss zwischen ${args[0]} und ${args[1]} sein.`;\n        /* </i18n> */\n    },\n    /**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */\n    confirm({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */\n        return `${sentence(name)} stimmt nicht überein.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */\n    date_format({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */\n            return `${sentence(name)} ist kein gültiges Datum im Format ${args[0]}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */\n        return 'Dieses Feld wurde falsch konfiguriert und kann nicht übermittelt werden.';\n        /* </i18n> */\n    },\n    /**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */\n    date_between({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */\n        return `${sentence(name)} muss zwischen ${date(args[0])} und ${date(args[1])} liegen.`;\n        /* </i18n> */\n    },\n    /**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */\n    email: 'E-Mail Adresse ist ungültig.',\n    /**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */\n    ends_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */\n        return `${sentence(name)} endet nicht mit ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */\n    is({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */\n        return `${sentence(name)} enthält einen ungültigen Wert.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */\n    length({ name, args: [first = 0, second = Infinity] }) {\n        const min = first <= second ? first : second;\n        const max = second >= first ? second : first;\n        if (min == 1 && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */\n            return `${sentence(name)} muss mindestens ein Zeichen enthalten.`;\n            /* </i18n> */\n        }\n        if (min == 0 && max) {\n            /* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */\n            return `${sentence(name)} darf maximal ${max} Zeichen enthalten.`;\n            /* </i18n> */\n        }\n        if (min === max) {\n            /* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */\n            return `${sentence(name)} sollte ${max} Zeichen lang sein.`;\n            /* </i18n> */\n        }\n        if (min && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */\n            return `${sentence(name)} muss mindestens ${min} Zeichen enthalten.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */\n        return `${sentence(name)} muss zwischen ${min} und ${max} Zeichen enthalten.`;\n        /* </i18n> */\n    },\n    /**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */\n    matches({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */\n        return `${sentence(name)} enthält einen ungültigen Wert.`;\n        /* </i18n> */\n    },\n    /**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */\n    max({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */\n            return `Darf maximal ${args[0]} ${name} haben.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */\n        return `${sentence(name)} darf maximal ${args[0]} sein.`;\n        /* </i18n> */\n    },\n    /**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */\n    mime({ name, args }) {\n        if (!args[0]) {\n            /* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */\n            return 'Keine Dateiformate konfiguriert.';\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */\n        return `${sentence(name)} muss vom Typ ${args[0]} sein.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */\n    min({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */\n            return `Mindestens ${args[0]} ${name} erforderlich.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */\n        return `${sentence(name)} muss mindestens ${args[0]} sein.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */\n    not({ name, node: { value } }) {\n        /* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */\n        return `“${value}” ist kein gültiger Wert für ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */\n    number({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a number.\"> */\n        return `${sentence(name)} muss eine Zahl sein.`;\n        /* </i18n> */\n    },\n    /**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */\n    required({ name }) {\n        /* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */\n        return `${sentence(name)} ist erforderlich.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */\n    starts_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */\n        return `${sentence(name)} beginnt nicht mit ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */\n    url() {\n        /* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */\n        return `Bitte geben Sie eine gültige URL ein.`;\n        /* </i18n> */\n    },\n};\n\nvar de = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ui: ui$w,\n    validation: validation$w\n});\n\n/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */\n/**\n * Standard language for interface features.\n * @public\n */\nconst ui$v = {\n    /**\n     * Shown on a button for adding additional items.\n     */\n    add: 'Προσθήκη',\n    /**\n     * Shown when a button to remove items is visible.\n     */\n    remove: 'Αφαίρεση',\n    /**\n     * Shown when there are multiple items to remove at the same time.\n     */\n    removeAll: 'Αφαίρεση όλων',\n    /**\n     * Shown when all fields are not filled out correctly.\n     */\n    incomplete: 'Λυπούμαστε, υπάρχουν πεδία που δεν έχουν συμπληρωθεί σωστά.',\n    /**\n     * Shown in a button inside a form to submit the form.\n     */\n    submit: 'Υποβολή',\n    /**\n     * Shown when no files are selected.\n     */\n    noFiles: 'Κανένα αρχείο δεν έχει επιλεγεί',\n    /**\n     * Shown on buttons that move fields up in a list.\n     */\n    moveUp: 'Προς τα επάνω',\n    /**\n     * Shown on buttons that move fields down in a list.\n     */\n    moveDown: 'Προς τα κάτω',\n    /**\n     * Shown when something is actively loading.\n     */\n    isLoading: 'Φορτώνει...',\n    /**\n     * Shown when there is more to load.\n     */\n    loadMore: 'Φόρτωση περισσότερων',\n    /**\n     * Shown on buttons that navigate state forward\n     */\n    next: 'Επόμενη',\n    /**\n     * Shown on buttons that navigate state backward\n     */\n    prev: 'Προηγούμενο',\n    /**\n     * Shown when adding all values.\n     */\n    addAllValues: 'Προσθήκη όλων των τιμών',\n    /**\n     * Shown when adding selected values.\n     */\n    addSelectedValues: 'Προσθήκη επιλεγμένων τιμών',\n    /**\n     * Shown when removing all values.\n     */\n    removeAllValues: 'Κατάργηση όλων των τιμών',\n    /**\n     * Shown when removing selected values.\n     */\n    removeSelectedValues: 'Αφαίρεση επιλεγμένων τιμών',\n    /**\n     * Shown when there is a date to choose.\n     */\n    chooseDate: 'Επιλέξτε ημερομηνία',\n    /**\n     * Shown when there is a date to change.\n     */\n    changeDate: 'Αλλαγή ημερομηνίας',\n    /**\n     * Shown when the date is invalid.\n     */\n    invalidDate: 'Η επιλεγμένη ημερομηνία δεν είναι έγκυρη.',\n};\n/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */\nconst validation$v = {\n    /**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */\n    accepted({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */\n        return `Παρακαλώ αποδεχτείτε το ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */\n    date_after({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */\n            return `${sentence(name)} πρέπει να είναι μετά της ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} πρέπει να είναι στο μέλλον.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */\n    alpha({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */\n        return `${sentence(name)} μπορεί να περιέχει μόνο αλφαβητικούς χαρακτήρες.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */\n    alphanumeric({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */\n        return `${sentence(name)} μπορεί να περιέχει μόνο γράμματα και αριθμούς.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */\n    alpha_spaces({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */\n        return `${sentence(name)} μπορεί να περιέχει μόνο γράμματα και κενά.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */\n    date_before({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */\n            return `${sentence(name)} πρέπει να είναι πριν της ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} πρέπει να είναι στο παρελθόν.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */\n    between({ name, args }) {\n        if (isNaN(args[0]) || isNaN(args[1])) {\n            /* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */\n            return `Αυτό το πεδίο έχει ρυθμιστεί λανθασμένα και δεν μπορεί να υποβληθεί.`;\n            /* </i18n> */\n        }\n        const [a, b] = order(args[0], args[1]);\n        /* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */\n        return `${sentence(name)} πρέπει να είναι μεταξύ ${a} και ${b}.`;\n        /* </i18n> */\n    },\n    /**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */\n    confirm({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */\n        return `${sentence(name)} δεν ταιριάζει.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */\n    date_format({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */\n            return `${sentence(name)} δεν είναι έγυρη ημερομηνία, παρακαλώ ακολουθήστε την διαμόρφωση ${args[0]}`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */\n        return 'Αυτό το πεδίο έχει ρυθμιστεί λανθασμένα και δεν μπορεί να υποβληθεί';\n        /* </i18n> */\n    },\n    /**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */\n    date_between({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */\n        return `${sentence(name)} πρέπει να είναι μεταξύ ${date(args[0])} και ${date(args[1])}`;\n        /* </i18n> */\n    },\n    /**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */\n    email: 'Παρακαλώ πληκτρολογήστε μια έγκυρη email διεύθυνση. ',\n    /**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */\n    ends_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */\n        return `${sentence(name)} δεν καταλήγει με ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */\n    is({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */\n        return `${sentence(name)} δεν είναι μια επιτρεπτή τιμή.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */\n    length({ name, args: [first = 0, second = Infinity] }) {\n        const min = Number(first) <= Number(second) ? first : second;\n        const max = Number(second) >= Number(first) ? second : first;\n        if (min == 1 && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */\n            return `${sentence(name)} πρέπει να είναι τουλάχιστον ενός χαρακτήρα.`;\n            /* </i18n> */\n        }\n        if (min == 0 && max) {\n            /* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */\n            return `${sentence(name)} πρέπει να είναι λιγότεροι ή ίσοι με ${max} χαρακτήρες.`;\n            /* </i18n> */\n        }\n        if (min === max) {\n            /* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */\n            return `Το ${sentence(name)} θα πρέπει να έχει μήκος ${max} χαρακτήρες.`;\n            /* </i18n> */\n        }\n        if (min && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */\n            return `${sentence(name)} πρέπει να είναι περισσότεροι ή ίσοι με ${min} χαρακτήρες.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */\n        return `${sentence(name)} πρέπει να είναι μεταξύ ${min} και ${max} χαρακτήρες.`;\n        /* </i18n> */\n    },\n    /**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */\n    matches({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */\n        return `${sentence(name)} δεν είναι μια επιτρεπτή τιμή.`;\n        /* </i18n> */\n    },\n    /**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */\n    max({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */\n            return `Δεν μπορεί να έχει παραπάνω από ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */\n        return `${sentence(name)} πρέπει αν είναι λιγότερο ή ίσο με το ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */\n    mime({ name, args }) {\n        if (!args[0]) {\n            /* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */\n            return 'Δεν επιτρέπονται αρχεία.';\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */\n        return `${sentence(name)} πρέπει να είναι τύπου: ${args[0]}`;\n        /* </i18n> */\n    },\n    /**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */\n    min({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */\n            return `Δεν μπορεί να είναι λιγότερο από ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */\n        return `${sentence(name)} πρέπει να είναι τουλάχιστον ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */\n    not({ name, node: { value } }) {\n        /* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */\n        return `“${value}” δεν είναι μια επιτρεπτή ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */\n    number({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a number.\"> */\n        return `${sentence(name)} πρέπει να είναι αριθμός.`;\n        /* </i18n> */\n    },\n    /**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */\n    required({ name }) {\n        /* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */\n        return `${sentence(name)} είναι υποχρεωτικό.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */\n    starts_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */\n        return `${sentence(name)} δεν αρχίζει με ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */\n    url() {\n        /* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */\n        return `Παρακαλώ εισάγετε ένα έγκυρο URL.`;\n        /* </i18n> */\n    },\n};\n\nvar el = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ui: ui$v,\n    validation: validation$v\n});\n\n/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */\n/**\n * Standard language for interface features.\n * @public\n */\nconst ui$u = {\n    /**\n     * Shown on a button for adding additional items.\n     */\n    add: 'Add',\n    /**\n     * Shown when a button to remove items is visible.\n     */\n    remove: 'Remove',\n    /**\n     * Shown when there are multiple items to remove at the same time.\n     */\n    removeAll: 'Remove all',\n    /**\n     * Shown when all fields are not filled out correctly.\n     */\n    incomplete: 'Sorry, not all fields are filled out correctly.',\n    /**\n     * Shown in a button inside a form to submit the form.\n     */\n    submit: 'Submit',\n    /**\n     * Shown when no files are selected.\n     */\n    noFiles: 'No file chosen',\n    /**\n     * Shown on buttons that move fields up in a list.\n     */\n    moveUp: 'Move up',\n    /**\n     * Shown on buttons that move fields down in a list.\n     */\n    moveDown: 'Move down',\n    /**\n     * Shown when something is actively loading.\n     */\n    isLoading: 'Loading...',\n    /**\n     * Shown when there is more to load.\n     */\n    loadMore: 'Load more',\n    /**\n     * Show on buttons that navigate state forward\n     */\n    next: 'Next',\n    /**\n     * Show on buttons that navigate state backward\n     */\n    prev: 'Previous',\n    /**\n     * Shown when adding all values.\n     */\n    addAllValues: 'Add all values',\n    /**\n     * Shown when adding selected values.\n     */\n    addSelectedValues: 'Add selected values',\n    /**\n     * Shown when removing all values.\n     */\n    removeAllValues: 'Remove all values',\n    /**\n     * Shown when removing selected values.\n     */\n    removeSelectedValues: 'Remove selected values',\n    /**\n     * Shown when there is a date to choose.\n     */\n    chooseDate: 'Choose date',\n    /**\n     * Shown when there is a date to change.\n     */\n    changeDate: 'Change date',\n    /**\n     * Shown when the date is invalid.\n     */\n    invalidDate: 'The selected date is invalid.',\n};\n/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */\nconst validation$u = {\n    /**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */\n    accepted({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */\n        return `Please accept the ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */\n    date_after({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */\n            return `${sentence(name)} must be after ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} must be in the future.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */\n    alpha({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */\n        return `${sentence(name)} can only contain alphabetical characters.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */\n    alphanumeric({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */\n        return `${sentence(name)} can only contain letters and numbers.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */\n    alpha_spaces({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */\n        return `${sentence(name)} can only contain letters and spaces.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */\n    date_before({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */\n            return `${sentence(name)} must be before ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} must be in the past.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */\n    between({ name, args }) {\n        if (isNaN(args[0]) || isNaN(args[1])) {\n            /* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */\n            return `This field was configured incorrectly and can’t be submitted.`;\n            /* </i18n> */\n        }\n        const [a, b] = order(args[0], args[1]);\n        /* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */\n        return `${sentence(name)} must be between ${a} and ${b}.`;\n        /* </i18n> */\n    },\n    /**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */\n    confirm({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */\n        return `${sentence(name)} does not match.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */\n    date_format({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */\n            return `${sentence(name)} is not a valid date, please use the format ${args[0]}`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */\n        return 'This field was configured incorrectly and can’t be submitted';\n        /* </i18n> */\n    },\n    /**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */\n    date_between({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */\n        return `${sentence(name)} must be between ${date(args[0])} and ${date(args[1])}`;\n        /* </i18n> */\n    },\n    /**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */\n    email: 'Please enter a valid email address.',\n    /**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */\n    ends_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */\n        return `${sentence(name)} doesn’t end with ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */\n    is({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */\n        return `${sentence(name)} is not an allowed value.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */\n    length({ name, args: [first = 0, second = Infinity] }) {\n        const min = Number(first) <= Number(second) ? first : second;\n        const max = Number(second) >= Number(first) ? second : first;\n        if (min == 1 && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */\n            return `${sentence(name)} must be at least one character.`;\n            /* </i18n> */\n        }\n        if (min == 0 && max) {\n            /* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */\n            return `${sentence(name)} must be less than or equal to ${max} characters.`;\n            /* </i18n> */\n        }\n        if (min === max) {\n            /* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */\n            return `${sentence(name)} should be ${max} characters long.`;\n            /* </i18n> */\n        }\n        if (min && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */\n            return `${sentence(name)} must be greater than or equal to ${min} characters.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */\n        return `${sentence(name)} must be between ${min} and ${max} characters.`;\n        /* </i18n> */\n    },\n    /**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */\n    matches({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */\n        return `${sentence(name)} is not an allowed value.`;\n        /* </i18n> */\n    },\n    /**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */\n    max({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */\n            return `Cannot have more than ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */\n        return `${sentence(name)} must be less than or equal to ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */\n    mime({ name, args }) {\n        if (!args[0]) {\n            /* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */\n            return 'No file formats allowed.';\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */\n        return `${sentence(name)} must be of the type: ${args[0]}`;\n        /* </i18n> */\n    },\n    /**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */\n    min({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */\n            return `Cannot have fewer than ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */\n        return `Must be at least ${args[0]} ${name} .`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */\n    not({ name, node: { value } }) {\n        /* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */\n        return `“${value}” is not an allowed ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */\n    number({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a number.\"> */\n        return `${sentence(name)} must be a number.`;\n        /* </i18n> */\n    },\n    /**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */\n    required({ name }) {\n        /* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */\n        return `${sentence(name)} is required.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */\n    starts_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */\n        return `${sentence(name)} doesn’t start with ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */\n    url() {\n        /* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */\n        return `Please enter a valid URL.`;\n        /* </i18n> */\n    },\n};\n\nvar en = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ui: ui$u,\n    validation: validation$u\n});\n\n/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */\n/**\n * Standard language for interface features.\n * @public\n */\nconst ui$t = {\n    /**\n     * Shown on buttons for adding new items.\n     */\n    add: 'Añadir',\n    /**\n     * Shown when a button to remove items is visible.\n     */\n    remove: 'Quitar',\n    /**\n     * Shown when there are multiple items to remove at the same time.\n     */\n    removeAll: 'Quitar todos',\n    /**\n     * Shown when all fields are not filled out correctly.\n     */\n    incomplete: 'Discúlpe, los campos no fueron completados correctamente.',\n    /**\n     * Shown in a button inside a form to submit the form.\n     */\n    submit: 'Enviar',\n    /**\n     * Shown when no files are selected.\n     */\n    noFiles: 'Archivo no seleccionado',\n    /**\n     * Shown on buttons that move fields up in a list.\n     */\n    moveUp: 'Moverse hacia arriba',\n    /**\n     * Shown on buttons that move fields down in a list.\n     */\n    moveDown: 'Moverse hacia abajo',\n    /**\n     * Shown when something is actively loading.\n     */\n    isLoading: 'Cargando...',\n    /**\n     * Shown when there is more to load.\n     */\n    loadMore: 'Cargar más',\n    /**\n     * Shown on buttons that navigate state forward\n     */\n    next: 'Próximo',\n    /**\n     * Shown on buttons that navigate state backward\n     */\n    prev: 'Anterior',\n    /**\n     * Shown when adding all values.\n     */\n    addAllValues: 'Añadir todos los valores',\n    /**\n     * Shown when adding selected values.\n     */\n    addSelectedValues: 'Añadir valores seleccionados',\n    /**\n     * Shown when removing all values.\n     */\n    removeAllValues: 'Eliminar todos los valores',\n    /**\n     * Shown when removing selected values.\n     */\n    removeSelectedValues: 'Eliminar los valores seleccionados',\n    /**\n     * Shown when there is a date to choose.\n     */\n    chooseDate: 'Elige fecha',\n    /**\n     * Shown when there is a date to change.\n     */\n    changeDate: 'Cambiar fecha',\n    /**\n     * Shown when the date is invalid.\n     */\n    invalidDate: 'La fecha seleccionada no es válida.',\n};\n/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */\nconst validation$t = {\n    /**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */\n    accepted({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */\n        return `Acepte el ${name} por favor.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */\n    date_after({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */\n            return `${sentence(name)} debe ser posterior a ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} debe ser una fecha futura.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */\n    alpha({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */\n        return `${sentence(name)} debe contener solo caractéres alfabéticos.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */\n    alphanumeric({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */\n        return `${sentence(name)} debe ser alfanumérico.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */\n    alpha_spaces({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */\n        return `${sentence(name)} espacios alfa solo pueden contener letras y espacios.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */\n    date_before({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */\n            return `${sentence(name)} debe ser anterior a ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} debe ser una fecha pasada.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */\n    between({ name, args }) {\n        if (isNaN(args[0]) || isNaN(args[1])) {\n            /* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */\n            return `El campo no fue completado correctamente y no puede ser enviado.`;\n            /* </i18n> */\n        }\n        const [a, b] = order(args[0], args[1]);\n        /* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */\n        return `${sentence(name)} debe estar entre ${a} y ${b}.`;\n        /* </i18n> */\n    },\n    /**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */\n    confirm({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */\n        return `${sentence(name)} no coincide.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */\n    date_format({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */\n            return `${sentence(name)} no es una fecha válida, por favor utilice el formato ${args[0]}`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */\n        return 'El campo no fue completado correctamente y no puede ser enviado.';\n        /* </i18n> */\n    },\n    /**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */\n    date_between({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */\n        return `${sentence(name)} debe estar entre ${date(args[0])} y ${date(args[1])}`;\n        /* </i18n> */\n    },\n    /**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */\n    email: 'Ingrese una dirección de correo electrónico válida por favor.',\n    /**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */\n    ends_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */\n        return `${sentence(name)} no termina con ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */\n    is({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */\n        return `${sentence(name)} no es un valor permitido.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */\n    length({ name, args: [first = 0, second = Infinity] }) {\n        const min = Number(first) <= Number(second) ? first : second;\n        const max = Number(second) >= Number(first) ? second : first;\n        if (min == 1 && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */\n            return `${sentence(name)} debe tener al menos una letra.`;\n            /* </i18n> */\n        }\n        if (min == 0 && max) {\n            /* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */\n            return `${sentence(name)} debe tener como máximo ${max} caractéres.`;\n            /* </i18n> */\n        }\n        if (min === max) {\n            /* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */\n            return `${sentence(name)} debe tener ${max} caracteres.`;\n            /* </i18n> */\n        }\n        if (min && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */\n            return `${sentence(name)} debe tener como mínimo ${min} caractéres.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */\n        return `${sentence(name)} debe tener entre ${min} y ${max} caractéres.`;\n        /* </i18n> */\n    },\n    /**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */\n    matches({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */\n        return `${sentence(name)} no es un valor permitido.`;\n        /* </i18n> */\n    },\n    /**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */\n    max({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */\n            return `No puede tener más de ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */\n        return `${sentence(name)} debe ser menor o igual a ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */\n    mime({ name, args }) {\n        if (!args[0]) {\n            /* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */\n            return 'No existen formatos de archivos permitidos.';\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */\n        return `${sentence(name)} debe ser del tipo: ${args[0]}`;\n        /* </i18n> */\n    },\n    /**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */\n    min({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */\n            return `No puede tener menos de ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */\n        return `${sentence(name)} debe ser de al menos ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */\n    not({ name, node: { value } }) {\n        /* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */\n        return `“${value}” no es un valor permitido de ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */\n    number({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a number.\"> */\n        return `${sentence(name)} debe ser un número.`;\n        /* </i18n> */\n    },\n    /**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */\n    required({ name }) {\n        /* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */\n        return `${sentence(name)} es requerido.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */\n    starts_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */\n        return `${sentence(name)} debe comenzar con ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */\n    url() {\n        /* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */\n        return `Introduce una URL válida.`;\n        /* </i18n> */\n    },\n};\n\nvar es = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ui: ui$t,\n    validation: validation$t\n});\n\n/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */\n/**\n * Standard language for interface features.\n * @public\n */\nconst ui$s = {\n    /**\n     * Shown on buttons for adding new items.\n     */\n    add: 'افزودن',\n    /**\n     * Shown when a button to remove items is visible.\n     */\n    remove: 'حذف',\n    /**\n     * Shown when there are multiple items to remove at the same time.\n     */\n    removeAll: 'همه را حذف کنید',\n    /**\n     * Shown when all fields are not filled out correctly.\n     */\n    incomplete: 'همه فیلدها به‌درستی پر نشده‌اند',\n    /**\n     * Shown in a button inside a form to submit the form.\n     */\n    submit: 'ثبت',\n    /**\n     * Shown when no files are selected.\n     */\n    noFiles: 'هیچ فایلی انتخاب نشده است',\n    /**\n     * Shown on buttons that move fields up in a list.\n     */\n    moveUp: 'حرکت به بالا',\n    /**\n     * Shown on buttons that move fields down in a list.\n     */\n    moveDown: 'حرکت به پایین',\n    /**\n     * Shown when something is actively loading.\n     */\n    isLoading: 'در حال بارگذاری...',\n    /**\n     * Shown when there is more to load.\n     */\n    loadMore: 'بارگذاری بیشتر',\n    /**\n     * Shown on buttons that navigate state forward\n     */\n    next: 'بعدی',\n    /**\n     * Shown on buttons that navigate state backward\n     */\n    prev: 'قبلی',\n    /**\n     * Shown when adding all values.\n     */\n    addAllValues: 'تمام مقادیر را اضافه کنید',\n    /**\n     * Shown when adding selected values.\n     */\n    addSelectedValues: 'مقادیر انتخاب شده را اضافه کنید',\n    /**\n     * Shown when removing all values.\n     */\n    removeAllValues: 'تمام مقادیر را حذف کنید',\n    /**\n     * Shown when removing selected values.\n     */\n    removeSelectedValues: 'حذف مقادیر انتخاب شده',\n    /**\n     * Shown when there is a date to choose.\n     */\n    chooseDate: 'تاریخ را انتخاب کنید',\n    /**\n     * Shown when there is a date to change.\n     */\n    changeDate: 'تغییر تاریخ',\n    /**\n     * Shown when the date is invalid.\n     */\n    invalidDate: 'تاریخ انتخاب شده نامعتبر است',\n};\n/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */\nconst validation$s = {\n    /**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */\n    accepted({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */\n        return `لطفاً ${name} را بپذیرید.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */\n    date_after({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */\n            return `${sentence(name)} باید بعد از تاریخ ${date(args[0])} باشد.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} باید مربوط به آینده باشد.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */\n    alpha({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */\n        return `${sentence(name)} فقط میتواند شامل حروف الفبا باشد.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */\n    alphanumeric({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */\n        return `${sentence(name)} فقط میتواند شامل حروف و اعداد باشد.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */\n    alpha_spaces({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */\n        return `${sentence(name)} فقط می تواند شامل حروف و فاصله باشد.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */\n    date_before({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */\n            return `${sentence(name)} باید قبل از تاریخ ${date(args[0])} باشد.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} باید مربوط به گذشته باشد.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */\n    between({ name, args }) {\n        if (isNaN(args[0]) || isNaN(args[1])) {\n            /* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */\n            return `این فیلد به اشتباه پیکربندی شده است و قابل ارسال نیست`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */\n        return `${sentence(name)} باید بین ${args[0]} و ${args[1]} باشد.`;\n        /* </i18n> */\n    },\n    /**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */\n    confirm({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */\n        return `${sentence(name)} مطابقت ندارد.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */\n    date_format({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */\n            return `${sentence(name)} تاریخ معتبری نیست، لطفاً از قالب ${args[0]} استفاده کنید\n`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */\n        return 'این فیلد به اشتباه پیکربندی شده است و قابل ارسال نیست';\n        /* </i18n> */\n    },\n    /**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */\n    date_between({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */\n        return `${sentence(name)} باید بین ${date(args[0])} و ${date(args[1])} باشد.`;\n        /* </i18n> */\n    },\n    /**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */\n    email: 'لطفا آدرس ایمیل معتبر وارد کنید.',\n    /**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */\n    ends_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */\n        return `${sentence(name)} باید به ${list(args)} ختم شود.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */\n    is({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */\n        return `${sentence(name)} مجاز نیست.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */\n    length({ name, args: [first = 0, second = Infinity] }) {\n        const min = first <= second ? first : second;\n        const max = second >= first ? second : first;\n        if (min == 1 && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */\n            return `${sentence(name)} باید حداقل یک کاراکتر باشد.`;\n            /* </i18n> */\n        }\n        if (min == 0 && max) {\n            /* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */\n            return `${sentence(name)} باید کمتر یا برابر با ${max} کاراکتر باشد.`;\n            /* </i18n> */\n        }\n        if (min === max) {\n            /* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */\n            return `${sentence(name)} باید ${max} کاراکتر طولانی باشد.`;\n            /* </i18n> */\n        }\n        if (min && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */\n            return `${sentence(name)} باید بزرگتر یا برابر با ${min} کاراکتر باشد.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */\n        return `${sentence(name)} باید بین ${min} و ${max} کاراکتر باشد.`;\n        /* </i18n> */\n    },\n    /**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */\n    matches({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */\n        return `${sentence(name)} مجاز نیست.`;\n        /* </i18n> */\n    },\n    /**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */\n    max({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */\n            return `${name} نمی تواند بیش از ${args[0]} باشد.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */\n        return `${sentence(name)} باید کمتر یا برابر با ${args[0]} باشد.`;\n        /* </i18n> */\n    },\n    /**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */\n    mime({ name, args }) {\n        if (!args[0]) {\n            /* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */\n            return 'فرمت فایل مجاز نیست.';\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */\n        return `${sentence(name)} باید از این نوع باشد: ${args[0]}`;\n        /* </i18n> */\n    },\n    /**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */\n    min({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */\n            return `${name} نمی تواند کمتر از ${args[0]} باشد.\n`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */\n        return `${sentence(name)} باید حداقل ${args[0]} باشد.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */\n    not({ name, node: { value } }) {\n        /* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */\n        return `\"${value}\" یک ${name} مجاز نیست.`;\n        /* </i18n> */\n    },\n    /**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */\n    number({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a number.\"> */\n        return `${sentence(name)} باید عدد باشد.`;\n        /* </i18n> */\n    },\n    /**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */\n    required({ name }) {\n        /* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */\n        return `پر کردن ${sentence(name)} اجباری است.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */\n    starts_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */\n        return `${sentence(name)} باید با ${list(args)} شروع شود.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */\n    url() {\n        /* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */\n        return `لطفا یک URL معتبر وارد کنید.`;\n        /* </i18n> */\n    },\n};\n\nvar fa = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ui: ui$s,\n    validation: validation$s\n});\n\n/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */\n/**\n * Standard language for interface features.\n * @public\n */\nconst ui$r = {\n    /**\n     * Shown on buttons for adding new items.\n     */\n    add: 'Lisää',\n    /**\n     * Shown when a button to remove items is visible.\n     */\n    remove: 'Poista',\n    /**\n     * Shown when there are multiple items to remove at the same time.\n     */\n    removeAll: 'Poista kaikki',\n    /**\n     * Shown when all fields are not filled out correctly.\n     */\n    incomplete: 'Kaikkia kenttiä ei ole täytetty oikein.',\n    /**\n     * Shown in a button inside a form to submit the form.\n     */\n    submit: 'Tallenna',\n    /**\n     * Shown when no files are selected.\n     */\n    noFiles: 'Ei valittuja tiedostoja',\n    /**\n     * Shown on buttons that move fields up in a list.\n     */\n    moveUp: 'Siirrä ylös',\n    /**\n     * Shown on buttons that move fields down in a list.\n     */\n    moveDown: 'Siirrä alas',\n    /**\n     * Shown when something is actively loading.\n     */\n    isLoading: 'Ladataan...',\n    /**\n     * Shown when there is more to load.\n     */\n    loadMore: 'Lataa lisää',\n    /**\n     * Shown on buttons that navigate state forward\n     */\n    next: 'Seuraava',\n    /**\n     * Shown on buttons that navigate state backward\n     */\n    prev: 'Edellinen',\n    /**\n     * Shown when adding all values.\n     */\n    addAllValues: 'Lisää kaikki arvot',\n    /**\n     * Shown when adding selected values.\n     */\n    addSelectedValues: 'Lisää valitut arvot',\n    /**\n     * Shown when removing all values.\n     */\n    removeAllValues: 'Poista kaikki arvot',\n    /**\n     * Shown when removing selected values.\n     */\n    removeSelectedValues: 'Poista valitut arvot',\n    /**\n     * Shown when there is a date to choose.\n     */\n    chooseDate: 'Valitse päivämäärä',\n    /**\n     * Shown when there is a date to change.\n     */\n    changeDate: 'Vaihda päivämäärä',\n    /**\n     * Shown when the date is invalid.\n     */\n    invalidDate: 'Valittu päivämäärä on virheellinen.',\n};\n/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */\nconst validation$r = {\n    /**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */\n    accepted({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */\n        return `Ole hyvä ja hyväksy ${name}`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */\n    date_after({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */\n            return `${sentence(name)} tulee olla ${date(args[0])} jälkeen.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} on oltava tulevaisuudessa.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */\n    alpha({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */\n        return `${sentence(name)} saa sisältää vain kirjaimia.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */\n    alphanumeric({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */\n        return `${sentence(name)} saa sisältää vain kirjaimia ja numeroita.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */\n    alpha_spaces({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */\n        return `${sentence(name)} voivat sisältää vain kirjaimia ja välilyöntejä.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */\n    date_before({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */\n            return `${sentence(name)} tulee olla ennen: ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} on oltava menneisyydessä.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */\n    between({ name, args }) {\n        if (isNaN(args[0]) || isNaN(args[1])) {\n            /* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */\n            return `Tämä kenttä on täytetty virheellisesti joten sitä ei voitu lähettää.`;\n            /* </i18n> */\n        }\n        const [a, b] = order(args[0], args[1]);\n        /* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */\n        return `${sentence(name)} on oltava välillä ${a} - ${b} `;\n        /* </i18n> */\n    },\n    /**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */\n    confirm({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */\n        return `${sentence(name)} ei täsmää.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */\n    date_format({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */\n            return `${sentence(name)} ei ole validi päivämäärä, ole hyvä ja syötä muodossa: ${args[0]}`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */\n        return 'Tämä kenttä on täytetty virheellisesti joten sitä ei voitu lähettää.';\n        /* </i18n> */\n    },\n    /**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */\n    date_between({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */\n        return `${sentence(name)} on oltava välillä ${date(args[0])} - ${date(args[1])}`;\n        /* </i18n> */\n    },\n    /**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */\n    email: 'Syötä validi sähköpostiosoite.',\n    /**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */\n    ends_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */\n        return `${sentence(name)} tulee päättyä ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */\n    is({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */\n        return `${sentence(name)} ei ole sallittu vaihtoehto.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */\n    length({ name, args: [first = 0, second = Infinity] }) {\n        const min = Number(first) <= Number(second) ? first : second;\n        const max = Number(second) >= Number(first) ? second : first;\n        if (min == 1 && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */\n            return `${sentence(name)} on oltava vähintään yksi merkki.`;\n            /* </i18n> */\n        }\n        if (min == 0 && max) {\n            /* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */\n            return `${sentence(name)} on oltava ${max} tai alle merkkiä.`;\n            /* </i18n> */\n        }\n        if (min === max) {\n            /* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */\n            return `${sentence(name)} pitäisi olla ${max} merkkiä pitkä.`;\n            /* </i18n> */\n        }\n        if (min && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */\n            return `${sentence(name)} on oltava vähintään ${min} merkkiä.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */\n        return `${sentence(name)} on oltava vähintään ${min}, enintään ${max} merkkiä.`;\n        /* </i18n> */\n    },\n    /**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */\n    matches({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */\n        return `${sentence(name)} ei ole sallittu arvo.`;\n        /* </i18n> */\n    },\n    /**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */\n    max({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */\n            return `Valitse enintään ${args[0]} ${name} vaihtoehtoa.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */\n        return `${sentence(name)} on oltava ${args[0]} tai alle.`;\n        /* </i18n> */\n    },\n    /**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */\n    mime({ name, args }) {\n        if (!args[0]) {\n            /* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */\n            return 'Tiedostoja ei sallita.';\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */\n        return `${sentence(name)} tulee olla ${args[0]}-tiedostotyyppiä.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */\n    min({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */\n            return `Valitse vähintään ${args[0]} ${name} vaihtoehtoa.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */\n        return `${sentence(name)} tulee olla ${args[0]} tai suurempi.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */\n    not({ name, node: { value } }) {\n        /* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */\n        return `“${value}” ei ole sallittu ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */\n    number({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a number.\"> */\n        return `Kentän ${sentence(name)} tulee olla numero.`;\n        /* </i18n> */\n    },\n    /**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */\n    required({ name }) {\n        /* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */\n        return `${sentence(name)} vaaditaan.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */\n    starts_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */\n        return `${sentence(name)} on alettava ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */\n    url() {\n        /* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */\n        return `Anna kelvollinen URL-osoite.`;\n        /* </i18n> */\n    },\n};\n\nvar fi = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ui: ui$r,\n    validation: validation$r\n});\n\n/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */\n/**\n * Standard language for interface features.\n * @public\n */\nconst ui$q = {\n    /**\n     * Shown on buttons for adding new items.\n     */\n    add: 'Ajouter',\n    /**\n     * Shown when a button to remove items is visible.\n     */\n    remove: 'Supprimer',\n    /**\n     * Shown when there are multiple items to remove at the same time.\n     */\n    removeAll: 'Enlever tout',\n    /**\n     * Shown when all fields are not filled out correctly.\n     */\n    incomplete: 'Désolé, tous les champs ne sont pas remplis correctement.',\n    /**\n     * Shown in a button inside a form to submit the form.\n     */\n    submit: 'Valider',\n    /**\n     * Shown when no files are selected.\n     */\n    noFiles: 'Aucun fichier choisi',\n    /**\n     * Shown on buttons that move fields up in a list.\n     */\n    moveUp: 'Déplacez-vous',\n    /**\n     * Shown on buttons that move fields down in a list.\n     */\n    moveDown: 'Déplacez-vous',\n    /**\n     * Shown when something is actively loading.\n     */\n    isLoading: 'Chargement...',\n    /**\n     * Shown when there is more to load.\n     */\n    loadMore: 'Chargez plus',\n    /**\n     * Shown on buttons that navigate state forward\n     */\n    next: 'Suivant',\n    /**\n     * Shown on buttons that navigate state backward\n     */\n    prev: 'Précédent',\n    /**\n     * Shown when adding all values.\n     */\n    addAllValues: 'Ajouter toutes les valeurs',\n    /**\n     * Shown when adding selected values.\n     */\n    addSelectedValues: 'Ajouter les valeurs sélectionnées',\n    /**\n     * Shown when removing all values.\n     */\n    removeAllValues: 'Supprimer toutes les valeurs',\n    /**\n     * Shown when removing selected values.\n     */\n    removeSelectedValues: 'Supprimer les valeurs sélectionnées',\n    /**\n     * Shown when there is a date to choose.\n     */\n    chooseDate: 'Choisissez la date',\n    /**\n     * Shown when there is a date to change.\n     */\n    changeDate: 'Modifier la date',\n    /**\n     * Shown when the date is invalid.\n     */\n    invalidDate: `La date sélectionnée n'est pas valide.`,\n};\n/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */\nconst validation$q = {\n    /**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */\n    accepted({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */\n        return `Veuillez accepter le ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */\n    date_after({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */\n            return `${sentence(name)} doit être postérieure au ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} doit être dans le futur.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */\n    alpha({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */\n        return `${sentence(name)} ne peut contenir que des caractères alphabétiques.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */\n    alphanumeric({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */\n        return `${sentence(name)} ne peut contenir que des lettres et des chiffres.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */\n    alpha_spaces({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */\n        return `${sentence(name)} ne peuvent contenir que des lettres et des espaces.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */\n    date_before({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */\n            return `${sentence(name)} doit être antérieure au ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} doit être dans le passé.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */\n    between({ name, args }) {\n        if (isNaN(args[0]) || isNaN(args[1])) {\n            /* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */\n            return `Ce champ a été configuré de manière incorrecte et ne peut pas être soumis.`;\n            /* </i18n> */\n        }\n        const [a, b] = order(args[0], args[1]);\n        /* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */\n        return `${sentence(name)} doit être comprise entre ${a} et ${b}.`;\n        /* </i18n> */\n    },\n    /**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */\n    confirm({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */\n        return `${sentence(name)} ne correspond pas.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */\n    date_format({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */\n            return `${sentence(name)} n'est pas une date valide, veuillez utiliser le format ${args[0]}`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */\n        return 'Ce champ a été configuré de manière incorrecte et ne peut pas être soumis.';\n        /* </i18n> */\n    },\n    /**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */\n    date_between({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */\n        return `${sentence(name)} doit être comprise entre ${date(args[0])} et ${date(args[1])}`;\n        /* </i18n> */\n    },\n    /**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */\n    email: 'Veuillez saisir une adresse email valide.',\n    /**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */\n    ends_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */\n        return `${sentence(name)} ne se termine pas par ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */\n    is({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */\n        return `${sentence(name)} n'est pas une valeur autorisée.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */\n    length({ name, args: [first = 0, second = Infinity] }) {\n        const min = Number(first) <= Number(second) ? first : second;\n        const max = Number(second) >= Number(first) ? second : first;\n        if (min == 1 && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */\n            return `${sentence(name)} doit comporter au moins un caractère.`;\n            /* </i18n> */\n        }\n        if (min == 0 && max) {\n            /* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */\n            return `${sentence(name)} doit être inférieur ou égal à ${max} caractères.`;\n            /* </i18n> */\n        }\n        if (min === max) {\n            /* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */\n            return `${sentence(name)} doit contenir ${max} caractères.`;\n            /* </i18n> */\n        }\n        if (min && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */\n            return `${sentence(name)} doit être supérieur ou égal à ${min} caractères.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */\n        return `${sentence(name)} doit être comprise entre ${min} et ${max} caractères.`;\n        /* </i18n> */\n    },\n    /**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */\n    matches({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */\n        return `${sentence(name)} n'est pas une valeur autorisée.`;\n        /* </i18n> */\n    },\n    /**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */\n    max({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */\n            return `Ne peut pas avoir plus de ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */\n        return `${sentence(name)} doit être inférieur ou égal à ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */\n    mime({ name, args }) {\n        if (!args[0]) {\n            /* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */\n            return 'Aucun format de fichier n’est autorisé';\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */\n        return `${sentence(name)} doit être du type: ${args[0]}`;\n        /* </i18n> */\n    },\n    /**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */\n    min({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */\n            return `Ne peut pas avoir moins de ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */\n        return `${sentence(name)} doit être au moins de ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */\n    not({ name, node: { value } }) {\n        /* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */\n        return `“${value}” n'est pas un ${name} autorisé.`;\n        /* </i18n> */\n    },\n    /**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */\n    number({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a number.\"> */\n        return `${sentence(name)} doit être un nombre.`;\n        /* </i18n> */\n    },\n    /**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */\n    required({ name }) {\n        /* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */\n        return `${sentence(name)} est requis.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */\n    starts_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */\n        return `${sentence(name)} ne commence pas par ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */\n    url() {\n        /* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */\n        return `Entrez une URL valide.`;\n        /* </i18n> */\n    },\n};\n\nvar fr = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ui: ui$q,\n    validation: validation$q\n});\n\n/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */\n/**\n * Standard language for interface features.\n * @public\n */\nconst ui$p = {\n    /**\n     * Shown on a button for adding additional items.\n     */\n    add: 'Foeg ta',\n    /**\n     * Shown when a button to remove items is visible.\n     */\n    remove: 'Ferwider',\n    /**\n     * Shown when there are multiple items to remove at the same time.\n     */\n    removeAll: 'Ferwider alles',\n    /**\n     * Shown when all fields are not filled out correctly.\n     */\n    incomplete: 'Sorry, net alle fjilden binne korrekt ynfolle.',\n    /**\n     * Shown in a button inside a form to submit the form.\n     */\n    submit: 'Ferstjoere',\n    /**\n     * Shown when no files are selected.\n     */\n    noFiles: 'Gjin bestân keazen',\n    /**\n     * Shown on buttons that move fields up in a list.\n     */\n    moveUp: 'Gean omheech',\n    /**\n     * Shown on buttons that move fields down in a list.\n     */\n    moveDown: 'Nei ûnderen',\n    /**\n     * Shown when something is actively loading.\n     */\n    isLoading: 'Lade…',\n    /**\n     * Shown when there is more to load.\n     */\n    loadMore: 'Mear lade',\n    /**\n     * Show on buttons that navigate state forward\n     */\n    next: 'Folgende',\n    /**\n     * Show on buttons that navigate state backward\n     */\n    prev: 'Foarige',\n    /**\n     * Shown when adding all values.\n     */\n    addAllValues: 'Foegje alle wearden ta',\n    /**\n     * Shown when adding selected values.\n     */\n    addSelectedValues: 'Foegje selektearre wearden ta',\n    /**\n     * Shown when removing all values.\n     */\n    removeAllValues: 'Fuortsmite alle wearden',\n    /**\n     * Shown when removing selected values.\n     */\n    removeSelectedValues: 'Fuortsmite selektearre wearden',\n    /**\n     * Shown when there is a date to choose.\n     */\n    chooseDate: 'Kies datum',\n    /**\n     * Shown when there is a date to change.\n     */\n    changeDate: 'Feroarje datum',\n    /**\n     * Shown when the date is invalid.\n     */\n    invalidDate: 'De selektearre datum is ûnjildich.',\n};\n/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */\nconst validation$p = {\n    /**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */\n    accepted({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */\n        return `Akseptearje de ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */\n    date_after({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */\n            return `${sentence(name)} moat nei ${date(args[0])} wêze.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} moat yn de takomst lizze.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */\n    alpha({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */\n        return `${sentence(name)} mei allinne alfabetyske tekens befetsje.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */\n    alphanumeric({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */\n        return `${sentence(name)} mei allinne letters en sifers befetsje.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */\n    alpha_spaces({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */\n        return `${sentence(name)} mei allinne letters en spaasjes befetsje.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */\n    date_before({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */\n            return `${sentence(name)} moat foar ${date(args[0])} falle.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} moat yn it ferline wêze.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */\n    between({ name, args }) {\n        if (isNaN(args[0]) || isNaN(args[1])) {\n            /* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */\n            return `Dit fjild is ferkeard konfigurearre en kin net ferstjoerd wurde.`;\n            /* </i18n> */\n        }\n        const [a, b] = order(args[0], args[1]);\n        /* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */\n        return `${sentence(name)} moat tusken ${a} en ${b} lizze.`;\n        /* </i18n> */\n    },\n    /**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */\n    confirm({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */\n        return `${sentence(name)} komt net oerien.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */\n    date_format({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */\n            return `${sentence(name)} is gjin jildige datum, brûk de notaasje ${args[0]}`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */\n        return 'Dit fjild is ferkeard konfigurearre en kin net ferstjoerd wurde';\n        /* </i18n> */\n    },\n    /**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */\n    date_between({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */\n        return `${sentence(name)} moat tusken ${date(args[0])} en ${date(args[1])} lizze`;\n        /* </i18n> */\n    },\n    /**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */\n    email: 'Folje in jildich e-mailadres yn.',\n    /**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */\n    ends_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */\n        return `${sentence(name)} einiget net mei ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */\n    is({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */\n        return `${sentence(name)} is gjin tastiene wearde.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */\n    length({ name, args: [first = 0, second = Infinity] }) {\n        const min = Number(first) <= Number(second) ? first : second;\n        const max = Number(second) >= Number(first) ? second : first;\n        if (min == 1 && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */\n            return `${sentence(name)} moat minimaal ien teken wêze.`;\n            /* </i18n> */\n        }\n        if (min == 0 && max) {\n            /* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */\n            return `${sentence(name)} moat lytser wêze as of gelyk wêze oan ${max} tekens.`;\n            /* </i18n> */\n        }\n        if (min === max) {\n            /* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */\n            return `${sentence(name)} moat ${max} tekens lang wêze.`;\n            /* </i18n> */\n        }\n        if (min && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */\n            return `${sentence(name)} moat grutter wêze as of gelyk wêze oan ${min} tekens.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */\n        return `${sentence(name)} moat tusken de ${min} en ${max} tekens befetsje.`;\n        /* </i18n> */\n    },\n    /**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */\n    matches({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */\n        return `${sentence(name)} is gjin tastiene wearde.`;\n        /* </i18n> */\n    },\n    /**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */\n    max({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */\n            return `Mei net mear as ${args[0]} ${name} hawwe.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */\n        return `${sentence(name)} moat lytser wêze as of gelyk wêze oan ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */\n    mime({ name, args }) {\n        if (!args[0]) {\n            /* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */\n            return 'Gjin bestânsnotaasjes tastien.';\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */\n        return `${sentence(name)} moat fan it type: ${args[0]} wêze`;\n        /* </i18n> */\n    },\n    /**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */\n    min({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */\n            return `Mei net minder as ${args[0]} ${name} hawwe.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */\n        return `${sentence(name)} moat minimaal ${args[0]} wêze.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */\n    not({ name, node: { value } }) {\n        /* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */\n        return `\"${value}\" is gjin tastiene ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */\n    number({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a number.\"> */\n        return `${sentence(name)} moat in getal wêze.`;\n        /* </i18n> */\n    },\n    /**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */\n    required({ name }) {\n        /* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */\n        return `${sentence(name)} is ferplicht.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */\n    starts_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */\n        return `${sentence(name)} begjint net mei ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */\n    url() {\n        /* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */\n        return `Doch der in jildige url by.`;\n        /* </i18n> */\n    },\n};\n\nvar fy = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ui: ui$p,\n    validation: validation$p\n});\n\n/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */\n/**\n * Standard language for interface features.\n * @public\n */\nconst ui$o = {\n    /**\n     * Shown on a button for adding additional items.\n     */\n    add: 'הוסף',\n    /**\n     * Shown when a button to remove items is visible.\n     */\n    remove: 'מחק',\n    /**\n     * Shown when there are multiple items to remove at the same time.\n     */\n    removeAll: 'מחק הכל',\n    /**\n     * Shown when all fields are not filled out correctly.\n     */\n    incomplete: 'שים לב, לא כל השדות מלאים כראוי.',\n    /**\n     * Shown in a button inside a form to submit the form.\n     */\n    submit: 'שלח',\n    /**\n     * Shown when no files are selected.\n     */\n    noFiles: 'לא נבחר קובץ..',\n    /**\n     * Shown on buttons that move fields up in a list.\n     */\n    moveUp: 'הזז למעלה',\n    /**\n     * Shown on buttons that move fields down in a list.\n     */\n    moveDown: 'הזז למטה',\n    /**\n     * Shown when something is actively loading.\n     */\n    isLoading: 'טוען...',\n    /**\n     * Shown when there is more to load.\n     */\n    loadMore: 'טען יותר',\n    /**\n     * Shown on buttons that navigate state forward\n     */\n    next: 'הבא',\n    /**\n     * Shown on buttons that navigate state backward\n     */\n    prev: 'הקודם',\n    /**\n     * Shown when adding all values.\n     */\n    addAllValues: 'הוסף את כל הערכים',\n    /**\n     * Shown when adding selected values.\n     */\n    addSelectedValues: 'הוספת ערכים נבחרים',\n    /**\n     * Shown when removing all values.\n     */\n    removeAllValues: 'הסר את כל הערכים',\n    /**\n     * Shown when removing selected values.\n     */\n    removeSelectedValues: 'הסר ערכים נבחרים',\n    /**\n     * Shown when there is a date to choose.\n     */\n    chooseDate: 'בחר תאריך',\n    /**\n     * Shown when there is a date to change.\n     */\n    changeDate: 'שינוי תאריך',\n    /**\n     * Shown when the date is invalid.\n     */\n    invalidDate: 'התאריך שנבחר אינו חוקי.',\n};\n/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */\nconst validation$o = {\n    /**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */\n    accepted({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */\n        return `אנא אשר את ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */\n    date_after({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */\n            return `${sentence(name)} חייב להיות אחרי ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} חייב להיות בעתיד.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */\n    alpha({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */\n        return `${sentence(name)} חייב להכיל אותיות אלפבת.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */\n    alphanumeric({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */\n        return `${sentence(name)} יכול להכיל רק מספרים ואותיות.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */\n    alpha_spaces({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */\n        return `${sentence(name)} יכול להכיל רק אותיות ורווחים.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */\n    date_before({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */\n            return `${sentence(name)} חייב להיות לפני ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} חייב להיות בעבר`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */\n    between({ name, args }) {\n        if (isNaN(args[0]) || isNaN(args[1])) {\n            /* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */\n            return `שדה זה לא הוגדר כראוי ולא יכול להישלח.`;\n            /* </i18n> */\n        }\n        const [a, b] = order(args[0], args[1]);\n        /* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */\n        return `${sentence(name)} חייב להיות בין ${a} ו- ${b}.`;\n        /* </i18n> */\n    },\n    /**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */\n    confirm({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */\n        return `${sentence(name)} לא מתאים.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */\n    date_format({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */\n            return `${sentence(name)} הוא לא תאריך תקין, אנא השתמש בפורמט ${args[0]}`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */\n        return 'שדה זה לא הוגדר כראוי ולא יכול להישלח.';\n        /* </i18n> */\n    },\n    /**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */\n    date_between({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */\n        return `${sentence(name)} חייב להיות בין ${date(args[0])} ו- ${date(args[1])}`;\n        /* </i18n> */\n    },\n    /**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */\n    email: 'אנא הקלד אימייל תקין.',\n    /**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */\n    ends_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */\n        return `${sentence(name)} לא מסתיים ב- ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */\n    is({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */\n        return `${sentence(name)} הוא לא ערך מורשה.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */\n    length({ name, args: [first = 0, second = Infinity] }) {\n        const min = Number(first) <= Number(second) ? first : second;\n        const max = Number(second) >= Number(first) ? second : first;\n        if (min == 1 && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */\n            return `${sentence(name)} חייב להיות לפחות תו אחד.`;\n            /* </i18n> */\n        }\n        if (min == 0 && max) {\n            /* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */\n            return `${sentence(name)} חייב להיות פחות או שווה ל- ${max} תווים.`;\n            /* </i18n> */\n        }\n        if (min === max) {\n            /* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */\n            return `${sentence(name)} צריך להיות ${max} תווים ארוכים.`;\n            /* </i18n> */\n        }\n        if (min && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */\n            return `${sentence(name)} חייב להיות גדול או שווה ל- ${min} תווים.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */\n        return `${sentence(name)} חייב להיות בין ${min} ו- ${max} תווים.`;\n        /* </i18n> */\n    },\n    /**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */\n    matches({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */\n        return `${sentence(name)} הוא לא ערך תקין.`;\n        /* </i18n> */\n    },\n    /**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */\n    max({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */\n            return `${name} לא יכול להיות עם יותר מ- ${args[0]}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */\n        return `${sentence(name)} חייב להיות פחות או שווה ל- ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */\n    mime({ name, args }) {\n        if (!args[0]) {\n            /* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */\n            return 'פורמט הקובץ לא מורשה.';\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */\n        return `${sentence(name)} חייב להיות מסוג: ${args[0]}`;\n        /* </i18n> */\n    },\n    /**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */\n    min({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */\n            return `${name} לא יכול להיות עם פחות מ- ${args[0]}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */\n        return `${sentence(name)} חייב להיות לפחות ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */\n    not({ name, node: { value } }) {\n        /* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */\n        return `“${value}” לא מתאים ל- ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */\n    number({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a number.\"> */\n        return `${sentence(name)} חייב להיות מספר.`;\n        /* </i18n> */\n    },\n    /**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */\n    required({ name }) {\n        /* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */\n        return `${sentence(name)} הינו חובה.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */\n    starts_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */\n        return `${sentence(name)} לא מתחיל ב- ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */\n    url() {\n        /* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */\n        return `הזן כתובת URL חוקית.`;\n        /* </i18n> */\n    },\n};\n\nvar he = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ui: ui$o,\n    validation: validation$o\n});\n\n/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */\n/**\n * Standard language for interface features.\n * @public\n */\nconst ui$n = {\n    /**\n     * Shown on buttons for adding new items.\n     */\n    add: 'Dodaj',\n    /**\n     * Shown when a button to remove items is visible.\n     */\n    remove: 'Ukloni',\n    /**\n     * Shown when all fields are not filled out correctly.\n     */\n    incomplete: 'Pojedina polja nisu ispravno ispunjena.',\n    /**\n     * Shown in a button inside a form to submit the form.\n     */\n    submit: 'Predaj',\n    /**\n     * Shown on buttons that move fields up in a list.\n     */\n    moveUp: 'Pomaknite se gore',\n    /**\n     * Shown on buttons that move fields down in a list.\n     */\n    moveDown: 'Pomakni se dolje',\n    /**\n     * Shown when something is actively loading.\n     */\n    isLoading: 'Učitavanje...',\n    /**\n     * Shown when there is more to load.\n     */\n    loadMore: 'Učitaj više',\n    /**\n     * Shown on buttons that navigate state forward\n     */\n    next: 'Sljedeći',\n    /**\n     * Shown on buttons that navigate state backward\n     */\n    prev: 'prijašnji',\n    /**\n     * Shown when adding all values.\n     */\n    addAllValues: 'Dodajte sve vrijednosti',\n    /**\n     * Shown when adding selected values.\n     */\n    addSelectedValues: 'Dodavanje odabranih vrijednosti',\n    /**\n     * Shown when removing all values.\n     */\n    removeAllValues: 'Ukloni sve vrijednosti',\n    /**\n     * Shown when removing selected values.\n     */\n    removeSelectedValues: 'Ukloni odabrane vrijednosti',\n    /**\n     * Shown when there is a date to choose.\n     */\n    chooseDate: 'Odaberite datum',\n    /**\n     * Shown when there is a date to change.\n     */\n    changeDate: 'Promijeni datum',\n    /**\n     * Shown when the date is invalid.\n     */\n    invalidDate: 'Odabrani datum je nevažeći.',\n};\n/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */\nconst validation$n = {\n    /**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */\n    accepted({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */\n        return `Potrebno je potvrditi ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */\n    date_after({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */\n            return `${sentence(name)} mora biti u periodu poslije ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} mora biti u budućnosti.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */\n    alpha({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */\n        return `${sentence(name)} mora sadržavati samo slova.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */\n    alphanumeric({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */\n        return `${sentence(name)} mora sadržavati slova i brojeve.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */\n    alpha_spaces({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */\n        return `${sentence(name)} mogu sadržavati samo slova i razmake..`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */\n    date_before({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */\n            return `${sentence(name)} mora biti prije ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} mora biti u prošlosti.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */\n    between({ name, args }) {\n        if (isNaN(args[0]) || isNaN(args[1])) {\n            /* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */\n            return `Format sadržaja nije ispravan i ne može biti predan.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */\n        return `${sentence(name)} mora biti između ${args[0]} i ${args[1]}.`;\n        /* </i18n> */\n    },\n    /**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */\n    confirm({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */\n        return `${sentence(name)} ne odgovara zadanoj vrijednosti.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */\n    date_format({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */\n            return `${sentence(name)} nije ispravan format datuma. Molimo koristite sljedeći format: ${args[0]}`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */\n        return 'Ovo polje nije ispravno postavljeno i ne može biti predano.';\n        /* </i18n> */\n    },\n    /**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */\n    date_between({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */\n        return `${sentence(name)} mora biti vrijednost između ${date(args[0])} i ${date(args[1])}`;\n        /* </i18n> */\n    },\n    /**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */\n    email: 'Molimo upišite ispravnu email adresu.',\n    /**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */\n    ends_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */\n        return `${sentence(name)} ne završava s ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */\n    is({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */\n        return `${sentence(name)} nije dopuštena vrijednost.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */\n    length({ name, args: [first = 0, second = Infinity] }) {\n        const min = first <= second ? first : second;\n        const max = second >= first ? second : first;\n        if (min == 1 && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */\n            return `${sentence(name)} mora sadržavati barem jedan znak.`;\n            /* </i18n> */\n        }\n        if (min == 0 && max) {\n            /* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */\n            return `${sentence(name)} mora imati ${max} ili manje znakova.`;\n            /* </i18n> */\n        }\n        if (min === max) {\n            /* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */\n            return `${sentence(name)} trebao bi biti dugačak ${max} znakova.`;\n            /* </i18n> */\n        }\n        if (min && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */\n            return `${sentence(name)} mora imati barem ${min} znakova.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */\n        return `Broj znakova za polje ${sentence(name)} mora biti između ${min} i ${max}.`;\n        /* </i18n> */\n    },\n    /**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */\n    matches({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */\n        return `${sentence(name)} nije dozvoljena vrijednost.`;\n        /* </i18n> */\n    },\n    /**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */\n    max({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */\n            return `Ne smije imati više od ${args[0]} ${name} polja.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */\n        return `${sentence(name)} mora imati vrijednost manju ili jednaku ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */\n    mime({ name, args }) {\n        if (!args[0]) {\n            /* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */\n            return 'Format datoteke nije dozvoljen.';\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */\n        return `Format datoteke na polju ${sentence(name)} mora odgovarati: ${args[0]}`;\n        /* </i18n> */\n    },\n    /**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */\n    min({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */\n            return `Broj upisanih vrijednosti na polju ${name} mora biti barem ${args[0]}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */\n        return `${sentence(name)} mora biti barem ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */\n    not({ name, node: { value } }) {\n        /* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */\n        return `“${value}” nije dozvoljena vrijednost na polju ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */\n    number({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a number.\"> */\n        return `${sentence(name)} mora biti broj.`;\n        /* </i18n> */\n    },\n    /**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */\n    required({ name }) {\n        /* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */\n        return `${sentence(name)} je obavezno.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */\n    starts_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */\n        return `${sentence(name)} ne počinje s ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */\n    url() {\n        /* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */\n        return `Unesite valjanu URL adresu.`;\n        /* </i18n> */\n    },\n};\n\nvar hr = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ui: ui$n,\n    validation: validation$n\n});\n\n/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */\n/**\n * Standard language for interface features.\n * @public\n */\nconst ui$m = {\n    /**\n     * Shown on a button for adding additional items.\n     */\n    add: 'Hozzáadás',\n    /**\n     * Shown when a button to remove items is visible.\n     */\n    remove: 'Eltávolítás',\n    /**\n     * Shown when there are multiple items to remove at the same time.\n     */\n    removeAll: 'Összes eltávolítása',\n    /**\n     * Shown when all fields are not filled out correctly.\n     */\n    incomplete: 'Sajnáljuk, nem minden mező lett helyesen kitöltve.',\n    /**\n     * Shown in a button inside a form to submit the form.\n     */\n    submit: 'Beküldés',\n    /**\n     * Shown when no files are selected.\n     */\n    noFiles: 'Nincs fájl kiválasztva',\n    /**\n     * Shown on buttons that move fields up in a list.\n     */\n    moveUp: 'Mozgás felfelé',\n    /**\n     * Shown on buttons that move fields down in a list.\n     */\n    moveDown: 'Mozgás lefelé',\n    /**\n     * Shown when something is actively loading.\n     */\n    isLoading: 'Betöltés...',\n    /**\n     * Shown when there is more to load.\n     */\n    loadMore: 'Töltsön be többet',\n    /**\n     * Shown on buttons that navigate state forward\n     */\n    next: 'Következő',\n    /**\n     * Shown on buttons that navigate state backward\n     */\n    prev: 'Előző',\n    /**\n     * Shown when adding all values.\n     */\n    addAllValues: 'Adja hozzá az összes értéket',\n    /**\n     * Shown when adding selected values.\n     */\n    addSelectedValues: 'Kiválasztott értékek hozzáadása',\n    /**\n     * Shown when removing all values.\n     */\n    removeAllValues: 'Távolítsa el az összes értéket',\n    /**\n     * Shown when removing selected values.\n     */\n    removeSelectedValues: 'A kiválasztott értékek eltávolítása',\n    /**\n     * Shown when there is a date to choose.\n     */\n    chooseDate: 'Válassza ki a dátumot',\n    /**\n     * Shown when there is a date to change.\n     */\n    changeDate: 'Dátum módosítása',\n    /**\n     * Shown when the date is invalid.\n     */\n    invalidDate: 'A kiválasztott dátum érvénytelen.',\n};\n/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */\nconst validation$m = {\n    /**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */\n    accepted({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */\n        return `Fogadja el a ${name} mezőt.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */\n    date_after({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */\n            return `${sentence(name)} mezőnek ${date(args[0])} után kell lennie.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} mezőnek a jövőben kell lennie.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */\n    alpha({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */\n        return `${sentence(name)} csak alfanumerikus karaktereket tartalmazhat.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */\n    alphanumeric({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */\n        return `${sentence(name)} csak betűket és számokat tartalmazhat.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */\n    alpha_spaces({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */\n        return `${sentence(name)} csak betűket és szóközöket tartalmazhat.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */\n    date_before({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */\n            return `${sentence(name)} mezőnek ${date(args[0])} előtt kell lennie.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} mezőnek a múltban kell lennie.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */\n    between({ name, args }) {\n        if (isNaN(args[0]) || isNaN(args[1])) {\n            /* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */\n            return `Ez a mező hibásan lett konfigurálva, így nem lehet beküldeni.`;\n            /* </i18n> */\n        }\n        const [a, b] = order(args[0], args[1]);\n        /* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */\n        return `A ${sentence(name)} mezőnek ${a} és ${b} között kell lennie.`;\n        /* </i18n> */\n    },\n    /**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */\n    confirm({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */\n        return `${sentence(name)} nem egyezik.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */\n    date_format({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */\n            return `${sentence(name)} nem érvényes dátum, ${args[0]} formátumot használj`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */\n        return 'Ez a mező hibásan lett konfigurálva, így nem lehet beküldeni.';\n        /* </i18n> */\n    },\n    /**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */\n    date_between({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */\n        return `${sentence(name)} mezőnek ${date(args[0])} és ${args[1]} között kell lennie`;\n        /* </i18n> */\n    },\n    /**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */\n    email: 'Kérjük, érvényes email címet adjon meg.',\n    /**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */\n    ends_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */\n        return `${sentence(name)} mező nem a kijelölt (${list(args)}) módon ér véget.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */\n    is({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */\n        return `${sentence(name)} nem engedélyezett érték.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */\n    length({ name, args: [first = 0, second = Infinity] }) {\n        const min = Number(first) <= Number(second) ? first : second;\n        const max = Number(second) >= Number(first) ? second : first;\n        if (min == 1 && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */\n            return `${sentence(name)} mezőnek legalább egy karakteresnek kell lennie.`;\n            /* </i18n> */\n        }\n        if (min == 0 && max) {\n            /* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */\n            return `${sentence(name)} mezőnek maximum ${max} karakteresnek kell lennie.`;\n            /* </i18n> */\n        }\n        if (min === max) {\n            /* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */\n            return `${sentence(name)} ${max} karakter hosszúnak kell lennie.`;\n            /* </i18n> */\n        }\n        if (min && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */\n            return `${sentence(name)} mezőnek minimum ${min} karakteresnek kell lennie.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */\n        return `${sentence(name)} mezőnek ${min} és ${max} karakter között kell lennie.`;\n        /* </i18n> */\n    },\n    /**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */\n    matches({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */\n        return `${sentence(name)} nem engedélyezett érték.`;\n        /* </i18n> */\n    },\n    /**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */\n    max({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */\n            return `Nem lehet több mint ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */\n        return `${sentence(name)} nem lehet nagyobb, mint ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */\n    mime({ name, args }) {\n        if (!args[0]) {\n            /* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */\n            return 'Nincsenek támogatott fájlformátumok.';\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */\n        return `${sentence(name)}-nak/nek a következőnek kell lennie: ${args[0]}`;\n        /* </i18n> */\n    },\n    /**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */\n    min({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */\n            return `Nem lehet kevesebb, mint ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */\n        return `${sentence(name)}-nak/nek minimum ${args[0]}-nak/nek kell lennie.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */\n    not({ name, node: { value } }) {\n        /* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */\n        return `\"${value}\" nem engedélyezett ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */\n    number({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a number.\"> */\n        return `${sentence(name)} mezőnek számnak kell lennie.`;\n        /* </i18n> */\n    },\n    /**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */\n    required({ name }) {\n        /* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */\n        return `${sentence(name)} mező kötelező.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */\n    starts_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */\n        return `${sentence(name)} nem a következővel kezdődik: ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */\n    url() {\n        /* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */\n        return `Kérjük, adjon meg egy érvényes URL-t.`;\n        /* </i18n> */\n    },\n};\n\nvar hu = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ui: ui$m,\n    validation: validation$m\n});\n\n/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */\n/**\n * Standard language for interface features.\n * @public\n */\nconst ui$l = {\n    /**\n     * Shown on buttons for adding new items.\n     */\n    add: 'Tambah',\n    /**\n     * Shown when a button to remove items is visible.\n     */\n    remove: 'Hapus',\n    /**\n     * Shown when there are multiple items to remove at the same time.\n     */\n    removeAll: 'Hapus semua',\n    /**\n     * Shown when all fields are not filled out correctly.\n     */\n    incomplete: 'Maaf, tidak semua bidang formulir terisi dengan benar',\n    /**\n     * Shown in a button inside a form to submit the form.\n     */\n    submit: 'Kirim',\n    /**\n     * Shown when no files are selected.\n     */\n    noFiles: 'Tidak ada file yang dipilih',\n    /**\n     * Shown on buttons that move fields up in a list.\n     */\n    moveUp: 'Pindah ke atas',\n    /**\n     * Shown on buttons that move fields down in a list.\n     */\n    moveDown: 'Pindah ke bawah',\n    /**\n     * Shown when something is actively loading.\n     */\n    isLoading: 'Memuat...',\n    /**\n     * Shown when there is more to load.\n     */\n    loadMore: 'Muat lebih',\n    /**\n     * Shown on buttons that navigate state forward\n     */\n    next: 'Berikutnya',\n    /**\n     * Shown on buttons that navigate state backward\n     */\n    prev: 'Sebelumnya',\n    /**\n     * Shown when adding all values.\n     */\n    addAllValues: 'Tambahkan semua nilai',\n    /**\n     * Shown when adding selected values.\n     */\n    addSelectedValues: 'Tambahkan nilai yang dipilih',\n    /**\n     * Shown when removing all values.\n     */\n    removeAllValues: 'Hapus semua nilai',\n    /**\n     * Shown when removing selected values.\n     */\n    removeSelectedValues: 'Hapus nilai yang dipilih',\n    /**\n     * Shown when there is a date to choose.\n     */\n    chooseDate: 'Pilih tanggal',\n    /**\n     * Shown when there is a date to change.\n     */\n    changeDate: 'Ubah tanggal',\n    /**\n     * Shown when the date is invalid.\n     */\n    invalidDate: 'Tanggal yang dipilih tidak valid.',\n};\n/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */\nconst validation$l = {\n    /**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */\n    accepted({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */\n        return `Tolong terima kolom ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */\n    date_after({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */\n            return `${sentence(name)} nilainya harus lebih dari waktu ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} harus berisi waktu di masa depan.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */\n    alpha({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */\n        return `${sentence(name)} hanya bisa diisi huruf alfabet.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */\n    alphanumeric({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */\n        return `${sentence(name)} hanya bisa diisi huruf dan angka.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */\n    alpha_spaces({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */\n        return `${sentence(name)} hanya boleh berisi huruf dan spasi..`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */\n    date_before({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */\n            return `${sentence(name)} nilainya harus kurang dari waktu ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} harus berisi waktu yang sudah lampau.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */\n    between({ name, args }) {\n        if (isNaN(args[0]) || isNaN(args[1])) {\n            /* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */\n            return `Kolom ini tidak diisi dengan benar sehingga tidak bisa dikirim`;\n            /* </i18n> */\n        }\n        const [a, b] = order(args[0], args[1]);\n        /* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */\n        return `${sentence(name)} harus bernilai diantara ${a} dan ${b}.`;\n        /* </i18n> */\n    },\n    /**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */\n    confirm({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */\n        return `${sentence(name)} nilainya tidak cocok.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */\n    date_format({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */\n            return `${sentence(name)} waktu tidak cocok, mohon gunakan format waktu ${args[0]}`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */\n        return 'Kolom ini tidak diisi dengan benar sehingga tidak bisa dikirim';\n        /* </i18n> */\n    },\n    /**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */\n    date_between({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */\n        return `${sentence(name)} harus diantara waktu ${date(args[0])} dan waktu ${date(args[1])}`;\n        /* </i18n> */\n    },\n    /**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */\n    email: 'Tolong tulis alamat email yang benar.',\n    /**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */\n    ends_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */\n        return `${sentence(name)} nilainya tidak berakhiran dengan ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */\n    is({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */\n        return `${sentence(name)} adalah nilai yang tidak diizinkan.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */\n    length({ name, args: [first = 0, second = Infinity] }) {\n        const min = Number(first) <= Number(second) ? first : second;\n        const max = Number(second) >= Number(first) ? second : first;\n        if (min == 1 && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */\n            return `${sentence(name)} nilainya setidaknya berisi satu karakter.`;\n            /* </i18n> */\n        }\n        if (min == 0 && max) {\n            /* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */\n            return `${sentence(name)} jumlah karakternya harus kurang dari atau sama dengan ${max} karakter.`;\n            /* </i18n> */\n        }\n        if (min === max) {\n            /* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */\n            return `${sentence(name)} harus ${max} karakter panjang.`;\n            /* </i18n> */\n        }\n        if (min && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */\n            return `${sentence(name)} jumlah karakternya harus lebih dari atau sama dengan ${min} karakter.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */\n        return `${sentence(name)} jumlah karakternya hanya bisa antara ${min} dan ${max} karakter.`;\n        /* </i18n> */\n    },\n    /**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */\n    matches({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */\n        return `${sentence(name)} nilainya tidak diizinkan.`;\n        /* </i18n> */\n    },\n    /**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */\n    max({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */\n            return `Tidak bisa memiliki lebih dari ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */\n        return `${sentence(name)} harus lebih kecil atau sama dengan ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */\n    mime({ name, args }) {\n        if (!args[0]) {\n            /* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */\n            return 'Format file tidak diizinkan';\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */\n        return `${sentence(name)} hanya bisa bertipe: ${args[0]}`;\n        /* </i18n> */\n    },\n    /**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */\n    min({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */\n            return `Tidak boleh kurang dari ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */\n        return `${sentence(name)} setidaknya harus berisi ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */\n    not({ name, node: { value } }) {\n        /* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */\n        return `“${value}” adalah nilai yang tidak diperbolehkan untuk ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */\n    number({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a number.\"> */\n        return `${sentence(name)} harus berupa angka.`;\n        /* </i18n> */\n    },\n    /**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */\n    required({ name }) {\n        /* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */\n        return `${sentence(name)} harus diisi.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */\n    starts_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */\n        return `${sentence(name)} tidak dimulai dengan ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */\n    url() {\n        /* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */\n        return `Harap masukkan URL yang valid.`;\n        /* </i18n> */\n    },\n};\n\nvar id = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ui: ui$l,\n    validation: validation$l\n});\n\n/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */\n/**\n * Standard language for interface features.\n * @public\n */\nconst ui$k = {\n    /**\n     * Shown on buttons for adding new items.\n     */\n    add: 'Inserisci',\n    /**\n     * Shown when a button to remove items is visible.\n     */\n    remove: 'Rimuovi',\n    /**\n     * Shown when there are multiple items to remove at the same time.\n     */\n    removeAll: 'Rimuovi tutti',\n    /**\n     * Shown when all fields are not filled out correctly.\n     */\n    incomplete: 'Ci dispiace, non tutti i campi sono compilati correttamente.',\n    /**\n     * Shown in a button inside a form to submit the form.\n     */\n    submit: 'Invia',\n    /**\n     * Shown when no files are selected.\n     */\n    noFiles: 'Nessun file selezionato',\n    /**\n     * Shown on buttons that move fields up in a list.\n     */\n    moveUp: 'Sposta in alto',\n    /**\n     * Shown on buttons that move fields down in a list.\n     */\n    moveDown: 'Sposta giù',\n    /**\n     * Shown when something is actively loading.\n     */\n    isLoading: 'Caricamento...',\n    /**\n     * Shown when there is more to load.\n     */\n    loadMore: 'Carica altro',\n    /**\n     * Shown on buttons that navigate state forward\n     */\n    next: 'Prossimo',\n    /**\n     * Shown on buttons that navigate state backward\n     */\n    prev: 'Precedente',\n    /**\n     * Shown when adding all values.\n     */\n    addAllValues: 'Aggiungi tutti i valori',\n    /**\n     * Shown when adding selected values.\n     */\n    addSelectedValues: 'Aggiungi valori selezionati',\n    /**\n     * Shown when removing all values.\n     */\n    removeAllValues: 'Rimuovi tutti i valori',\n    /**\n     * Shown when removing selected values.\n     */\n    removeSelectedValues: 'Rimuovi i valori selezionati',\n    /**\n     * Shown when there is a date to choose.\n     */\n    chooseDate: 'Scegli la data',\n    /**\n     * Shown when there is a date to change.\n     */\n    changeDate: 'Cambia data',\n    /**\n     * Shown when the date is invalid.\n     */\n    invalidDate: 'La data selezionata non è valida.',\n};\n/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */\nconst validation$k = {\n    /**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */\n    accepted({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */\n        return `Si prega di accettare ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */\n    date_after({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */\n            return `la data ${sentence(name)} deve essere successiva ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */\n        return `la data ${sentence(name)} deve essere nel futuro.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */\n    alpha({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */\n        return `${sentence(name)} può contenere solo caratteri alfanumerici.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */\n    alphanumeric({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */\n        return `${sentence(name)} può contenere solo lettere e numeri.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */\n    alpha_spaces({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */\n        return `${sentence(name)} può contenere solo lettere e spazi.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */\n    date_before({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */\n            return `la data ${sentence(name)} deve essere antecedente ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} deve essere nel passato.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */\n    between({ name, args }) {\n        if (isNaN(args[0]) || isNaN(args[1])) {\n            /* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */\n            return `Questo campo è stato configurato male e non può essere inviato.`;\n            /* </i18n> */\n        }\n        const [a, b] = order(args[0], args[1]);\n        /* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */\n        return `${sentence(name)} deve essere tra ${a} e ${b}.`;\n        /* </i18n> */\n    },\n    /**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */\n    confirm({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */\n        return `${sentence(name)} non corrisponde.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */\n    date_format({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */\n            return `${sentence(name)} non è una data valida, per favore usa il formato ${args[0]}`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */\n        return 'Questo campo è stato configurato in modo errato e non può essere inviato.';\n        /* </i18n> */\n    },\n    /**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */\n    date_between({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */\n        return `${sentence(name)} deve essere tra ${date(args[0])} e ${date(args[1])}`;\n        /* </i18n> */\n    },\n    /**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */\n    email: 'Per favore inserire un indirizzo email valido.',\n    /**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */\n    ends_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */\n        return `${sentence(name)} non termina con ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */\n    is({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */\n        return `${sentence(name)} non è un valore consentito.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */\n    length({ name, args: [first = 0, second = Infinity] }) {\n        const min = Number(first) <= Number(second) ? first : second;\n        const max = Number(second) >= Number(first) ? second : first;\n        if (min == 1 && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */\n            return `${sentence(name)} deve contenere almeno un carattere.`;\n            /* </i18n> */\n        }\n        if (min == 0 && max) {\n            /* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */\n            return `${sentence(name)} deve essere minore o uguale a ${max} caratteri.`;\n            /* </i18n> */\n        }\n        if (min === max) {\n            /* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */\n            return `${sentence(name)} deve contenere ${max} caratteri.`;\n            /* </i18n> */\n        }\n        if (min && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */\n            return `${sentence(name)} deve essere maggiore o uguale a ${min} caratteri.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */\n        return `${sentence(name)} deve essere tra ${min} e ${max} caratteri.`;\n        /* </i18n> */\n    },\n    /**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */\n    matches({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */\n        return `${sentence(name)} non è un valore consentito.`;\n        /* </i18n> */\n    },\n    /**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */\n    max({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */\n            return `Non può avere più di ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */\n        return `${sentence(name)} deve essere minore o uguale a ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */\n    mime({ name, args }) {\n        if (!args[0]) {\n            /* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */\n            return 'Formato file non consentito.';\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */\n        return `${sentence(name)} deve essere di tipo: ${args[0]}`;\n        /* </i18n> */\n    },\n    /**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */\n    min({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */\n            return `Non può avere meno di ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */\n        return `${sentence(name)} deve essere almeno ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */\n    not({ name, node: { value } }) {\n        /* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */\n        return `\"${value}\" non è un ${name} consentito.`;\n        /* </i18n> */\n    },\n    /**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */\n    number({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a number.\"> */\n        return `${sentence(name)} deve essere un numero.`;\n        /* </i18n> */\n    },\n    /**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */\n    required({ name }) {\n        /* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */\n        return `${sentence(name)} è richiesto.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */\n    starts_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */\n        return `${sentence(name)} non inizia con ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */\n    url() {\n        /* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */\n        return `Inserisci un URL valido.`;\n        /* </i18n> */\n    },\n};\n\nvar it = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ui: ui$k,\n    validation: validation$k\n});\n\n/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */\n/**\n * Standard language for interface features.\n * @public\n */\nconst ui$j = {\n    /**\n     * Shown on buttons for adding new items.\n     */\n    add: '追加',\n    /**\n     * Shown when a button to remove items is visible.\n     */\n    remove: '削除',\n    /**\n     * Shown when there are multiple items to remove at the same time.\n     */\n    removeAll: '全て削除',\n    /**\n     * Shown when all fields are not filled out correctly.\n     */\n    incomplete: '項目が正しく入力されていません。',\n    /**\n     * Shown in a button inside a form to submit the form.\n     */\n    submit: '送信',\n    /**\n     * Shown when no files are selected.\n     */\n    noFiles: 'ファイルが選択されていません',\n    /**\n     * Shown on buttons that move fields up in a list.\n     */\n    moveUp: '上に移動',\n    /**\n     * Shown on buttons that move fields down in a list.\n     */\n    moveDown: '下へ移動',\n    /**\n     * Shown when something is actively loading.\n     */\n    isLoading: '読み込み中...',\n    /**\n     * Shown when there is more to load.\n     */\n    loadMore: 'さらに読み込む',\n    /**\n     * Shown on buttons that navigate state forward\n     */\n    next: '[次へ]',\n    /**\n     * Shown on buttons that navigate state backward\n     */\n    prev: '前へ',\n    /**\n     * Shown when adding all values.\n     */\n    addAllValues: 'すべての値を追加',\n    /**\n     * Shown when adding selected values.\n     */\n    addSelectedValues: '選択した値を追加',\n    /**\n     * Shown when removing all values.\n     */\n    removeAllValues: 'すべての値を削除',\n    /**\n     * Shown when removing selected values.\n     */\n    removeSelectedValues: '選択した値を削除',\n    /**\n     * Shown when there is a date to choose.\n     */\n    chooseDate: '日付を選択',\n    /**\n     * Shown when there is a date to change.\n     */\n    changeDate: '日付を変更',\n    /**\n     * Shown when the date is invalid.\n     */\n    invalidDate: '選択した日付は無効です。',\n};\n/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */\nconst validation$j = {\n    /**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */\n    accepted({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */\n        return `${name}の同意が必要です。`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */\n    date_after({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */\n            return `${sentence(name)}は${date(args[0])}より後の日付である必要があります。`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)}は将来の日付でなければなりません。`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */\n    alpha({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */\n        return `${sentence(name)}には英字のみを含めることができます。`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */\n    alphanumeric({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */\n        return `${sentence(name)}には、文字と数字のみを含めることができます。`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */\n    alpha_spaces({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */\n        return `${sentence(name)}には、文字とスペースのみを含めることができます。`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */\n    date_before({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */\n            return `${sentence(name)}は${date(args[0])}より前の日付である必要があります。`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)}は過去の日付である必要があります。`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */\n    between({ name, args }) {\n        if (isNaN(args[0]) || isNaN(args[1])) {\n            /* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */\n            return `このフィールドは正しく構成されていないため、送信できません。`;\n            /* </i18n> */\n        }\n        const [a, b] = order(args[0], args[1]);\n        /* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */\n        return `${sentence(name)}は${a}と${b}の間にある必要があります。`;\n        /* </i18n> */\n    },\n    /**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */\n    confirm({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */\n        return `${sentence(name)}が一致しません。`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */\n    date_format({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */\n            return `${sentence(name)}は有効な日付ではありません。${args[0]}の形式を使用してください。`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */\n        return 'このフィールドは正しく構成されておらず、送信できません。';\n        /* </i18n> */\n    },\n    /**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */\n    date_between({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */\n        return `${sentence(name)}は${date(args[0])}と${date(args[1])}の間にある必要があります。`;\n        /* </i18n> */\n    },\n    /**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */\n    email: '有効なメールアドレスを入力してください。',\n    /**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */\n    ends_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */\n        return `${sentence(name)}は${list(args)}で終わっていません。`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */\n    is({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */\n        return `${sentence(name)}は許可された値ではありません。`;\n        /* </i18n> */\n    },\n    /**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */\n    length({ name, args: [first = 0, second = Infinity] }) {\n        const min = Number(first) <= Number(second) ? first : second;\n        const max = Number(second) >= Number(first) ? second : first;\n        if (min == 1 && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */\n            return `${sentence(name)}は少なくとも1文字である必要があります。`;\n            /* </i18n> */\n        }\n        if (min == 0 && max) {\n            /* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */\n            return `${sentence(name)}は${max}文字以下である必要があります。`;\n            /* </i18n> */\n        }\n        if (min === max) {\n            /* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */\n            return `${sentence(name)} の長さは ${max} 文字でなければなりません。`;\n            /* </i18n> */\n        }\n        if (min && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */\n            return `${sentence(name)}は${min}文字以上である必要があります。`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */\n        return `${sentence(name)}は${min}から${max}文字の間でなければなりません。`;\n        /* </i18n> */\n    },\n    /**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */\n    matches({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */\n        return `${sentence(name)}は許可された値ではありません。`;\n        /* </i18n> */\n    },\n    /**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */\n    max({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */\n            return `${name}は${args[0]}を超えることはできません。`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */\n        return `${sentence(name)}は${args[0]}以下である必要があります。`;\n        /* </i18n> */\n    },\n    /**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */\n    mime({ name, args }) {\n        if (!args[0]) {\n            /* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */\n            return 'ファイル形式は許可されていません。';\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */\n        return `${sentence(name)}は${args[0]}である必要があります。`;\n        /* </i18n> */\n    },\n    /**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */\n    min({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */\n            return `${name}は${args[0]}未満にすることはできません。`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */\n        return `${sentence(name)}は少なくとも${args[0]}である必要があります。`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */\n    not({ name, node: { value } }) {\n        /* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */\n        return `“${value}”は許可された${name}ではありません。`;\n        /* </i18n> */\n    },\n    /**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */\n    number({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a number.\"> */\n        return `${sentence(name)}は数値でなければなりません。`;\n        /* </i18n> */\n    },\n    /**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */\n    required({ name }) {\n        /* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */\n        return `${sentence(name)}は必須です。`;\n        /* </i18n> */\n    },\n    /**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */\n    starts_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */\n        return `${sentence(name)}は${list(args)}で始まっていません。`;\n        /* </i18n> */\n    },\n    /**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */\n    url() {\n        /* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */\n        return `有効な URL を入力してください。`;\n        /* </i18n> */\n    },\n};\n\nvar ja = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ui: ui$j,\n    validation: validation$j\n});\n\n/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */\n/**\n * Standard language for interface features.\n * @public\n */\nconst ui$i = {\n    /**\n     * Shown on a button for adding additional items.\n     */\n    add: 'қосу',\n    /**\n     * Shown when a button to remove items is visible.\n     */\n    remove: 'Жою',\n    /**\n     * Shown when there are multiple items to remove at the same time.\n     */\n    removeAll: 'Барлығын жою',\n    /**\n     * Shown when all fields are not filled out correctly.\n     */\n    incomplete: 'Кешіріңіз, барлық өрістер дұрыс толтырылмаған.',\n    /**\n     * Shown in a button inside a form to submit the form.\n     */\n    submit: 'Жіберу',\n    /**\n     * Shown when no files are selected.\n     */\n    noFiles: 'Ешбір файл таңдалмады',\n    /**\n     * Shown on buttons that move fields up in a list.\n     */\n    moveUp: 'Жоғары жылжу',\n    /**\n     * Shown on buttons that move fields down in a list.\n     */\n    moveDown: 'Төмен жылжытыңыз',\n    /**\n     * Shown when something is actively loading.\n     */\n    isLoading: 'Жүктеу...',\n    /**\n     * Shown when there is more to load.\n     */\n    loadMore: 'Көбірек жүктеңіз',\n    /**\n     * Shown on buttons that navigate state forward\n     */\n    next: 'Келесі',\n    /**\n     * Shown on buttons that navigate state backward\n     */\n    prev: 'Алдыңғы',\n    /**\n     * Shown when adding all values.\n     */\n    addAllValues: 'Барлық мәндерді қосыңыз',\n    /**\n     * Shown when adding selected values.\n     */\n    addSelectedValues: 'Таңдалған мәндерді қосыңыз',\n    /**\n     * Shown when removing all values.\n     */\n    removeAllValues: 'Барлық мәндерді алып тастаңыз',\n    /**\n     * Shown when removing selected values.\n     */\n    removeSelectedValues: 'Таңдалған мәндерді алып тастаңыз',\n    /**\n     * Shown when there is a date to choose.\n     */\n    chooseDate: 'Күнді таңдаңыз',\n    /**\n     * Shown when there is a date to change.\n     */\n    changeDate: 'Өзгерту күні',\n    /**\n     * Shown when the date is invalid.\n     */\n    invalidDate: 'Таңдалған күн жарамсыз.',\n};\n/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */\nconst validation$i = {\n    /**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */\n    accepted({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */\n        return `қабылдаңыз ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */\n    date_after({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */\n            return `${sentence(name)} кейін болуы керек ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} болашақта болуы керек.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */\n    alpha({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */\n        return `${sentence(name)} тек алфавиттік таңбаларды қамтуы мүмкін.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */\n    alphanumeric({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */\n        return `${sentence(name)} тек әріптер мен сандардан тұруы мүмкін.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */\n    alpha_spaces({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */\n        return `${sentence(name)} тек әріптер мен бос орындар болуы мүмкін.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */\n    date_before({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */\n            return `${sentence(name)} бұрын болуы керек ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} өткенде болуы керек.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */\n    between({ name, args }) {\n        if (isNaN(args[0]) || isNaN(args[1])) {\n            /* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */\n            return `Бұл өріс қате конфигурацияланған және оны жіберу мүмкін емес.`;\n            /* </i18n> */\n        }\n        const [a, b] = order(args[0], args[1]);\n        /* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */\n        return `${sentence(name)} арасында болуы керек ${a} және ${b}.`;\n        /* </i18n> */\n    },\n    /**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */\n    confirm({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */\n        return `${sentence(name)} сәйкес келмейді.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */\n    date_format({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */\n            return `${sentence(name)} жарамды күн емес, пішімді пайдаланыңыз ${args[0]}`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */\n        return 'Бұл өріс қате конфигурацияланған және оны жіберу мүмкін емес';\n        /* </i18n> */\n    },\n    /**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */\n    date_between({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */\n        return `${sentence(name)} арасында болуы керек ${date(args[0])} және ${date(args[1])}`;\n        /* </i18n> */\n    },\n    /**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */\n    email: 'Өтінеміз қолданыстағы электронды пошта адресін енгізіңіз.',\n    /**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */\n    ends_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */\n        return `${sentence(name)} -мен бітпейді ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */\n    is({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */\n        return `${sentence(name)} рұқсат етілген мән емес.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */\n    length({ name, args: [first = 0, second = Infinity] }) {\n        const min = Number(first) <= Number(second) ? first : second;\n        const max = Number(second) >= Number(first) ? second : first;\n        if (min == 1 && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */\n            return `${sentence(name)} кем дегенде бір таңба болуы керек.`;\n            /* </i18n> */\n        }\n        if (min == 0 && max) {\n            /* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */\n            return `${sentence(name)} кем немесе тең болуы керек ${max} кейіпкерлер.`;\n            /* </i18n> */\n        }\n        if (min === max) {\n            /* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */\n            return `${sentence(name)} ${max} таңбалары болуы керек.`;\n            /* </i18n> */\n        }\n        if (min && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */\n            return `${sentence(name)} артық немесе тең болуы керек ${min} кейіпкерлер.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */\n        return `${sentence(name)} арасында болуы керек ${min} және ${max} кейіпкерлер.`;\n        /* </i18n> */\n    },\n    /**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */\n    matches({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */\n        return `${sentence(name)} рұқсат етілген мән емес.`;\n        /* </i18n> */\n    },\n    /**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */\n    max({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */\n            return `артық болуы мүмкін емес ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */\n        return `${sentence(name)} кем немесе тең болуы керек ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */\n    mime({ name, args }) {\n        if (!args[0]) {\n            /* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */\n            return 'Файл пішімдері рұқсат етілмейді.';\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */\n        return `${sentence(name)} типте болуы керек: ${args[0]}`;\n        /* </i18n> */\n    },\n    /**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */\n    min({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */\n            return `кем болуы мүмкін емес ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */\n        return `${sentence(name)} кем дегенде болуы керек ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */\n    not({ name, node: { value } }) {\n        /* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */\n        return `“${value}” рұқсат етілмейді ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */\n    number({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a number.\"> */\n        return `${sentence(name)} сан болуы керек.`;\n        /* </i18n> */\n    },\n    /**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */\n    required({ name }) {\n        /* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */\n        return `${sentence(name)} талап етіледі.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */\n    starts_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */\n        return `${sentence(name)} -ден басталмайды ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */\n    url() {\n        /* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */\n        return `Жарамды URL мекенжайын енгізіңіз.`;\n        /* </i18n> */\n    },\n};\n\nvar kk = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ui: ui$i,\n    validation: validation$i\n});\n\n/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */\n/**\n * Standard language for interface features.\n * @public\n */\nconst ui$h = {\n    /**\n     * Shown on buttons for adding new items.\n     */\n    add: '추가',\n    /**\n     * Shown when a button to remove items is visible.\n     */\n    remove: '제거',\n    /**\n     * Shown when there are multiple items to remove at the same time.\n     */\n    removeAll: '모두 제거',\n    /**\n     * Shown when all fields are not filled out correctly.\n     */\n    incomplete: '모든 값을 채워주세요',\n    /**\n     * Shown in a button inside a form to submit the form.\n     */\n    submit: '제출하기',\n    /**\n     * Shown when no files are selected.\n     */\n    noFiles: '선택된 파일이 없습니다',\n    /**\n     * Shown on buttons that move fields up in a list.\n     */\n    moveUp: '위로 이동',\n    /**\n     * Shown on buttons that move fields down in a list.\n     */\n    moveDown: '아래로 이동',\n    /**\n     * Shown when something is actively loading.\n     */\n    isLoading: '로드 중...',\n    /**\n     * Shown when there is more to load.\n     */\n    loadMore: '더 불러오기',\n    /**\n     * Shown on buttons that navigate state forward\n     */\n    next: '다음',\n    /**\n     * Shown on buttons that navigate state backward\n     */\n    prev: '이전',\n    /**\n     * Shown when adding all values.\n     */\n    addAllValues: '모든 값 추가',\n    /**\n     * Shown when adding selected values.\n     */\n    addSelectedValues: '선택한 값 추가',\n    /**\n     * Shown when removing all values.\n     */\n    removeAllValues: '모든 값 제거',\n    /**\n     * Shown when removing selected values.\n     */\n    removeSelectedValues: '선택한 값 제거',\n    /**\n     * Shown when there is a date to choose.\n     */\n    chooseDate: '날짜 선택',\n    /**\n     * Shown when there is a date to change.\n     */\n    changeDate: '날짜 변경',\n    /**\n     * Shown when the date is invalid.\n     */\n    invalidDate: '선택한 날짜가 잘못되었습니다.',\n};\n/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */\nconst validation$h = {\n    /**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */\n    accepted({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */\n        return `${name} 올바른 값을 선택 해주세요`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */\n    date_after({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */\n            return `${sentence(name)} ${date(args[0])} 이후여야 합니다`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} 미래의 날짜여야합니다`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */\n    alpha({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */\n        return `${sentence(name)} 알파벳 문자만 포함할 수 있습니다`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */\n    alphanumeric({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */\n        return `${sentence(name)} 문자와 숫자만 포함될 수 있습니다`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */\n    alpha_spaces({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */\n        return `${sentence(name)} 문자와 공백만 포함할 수 있습니다.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */\n    date_before({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */\n            return `${sentence(name)} ${date(args[0])} 이전여야 합니다`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} 과거의 날짜여야합니다`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */\n    between({ name, args }) {\n        if (isNaN(args[0]) || isNaN(args[1])) {\n            /* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */\n            return `잘못된 구성으로 제출할 수 없습니다`;\n            /* </i18n> */\n        }\n        const [a, b] = order(args[0], args[1]);\n        /* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */\n        return `${sentence(name)} ${a}와 ${b} 사이여야 합니다`;\n        /* </i18n> */\n    },\n    /**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */\n    confirm({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */\n        return `${sentence(name)} 일치하지 않습니다`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */\n    date_format({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */\n            return `${sentence(name)} 유효한 날짜가 아닙니다. ${args[0]}과 같은 형식을 사용해주세요`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */\n        return '잘못된 구성으로 제출할 수 없습니다';\n        /* </i18n> */\n    },\n    /**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */\n    date_between({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */\n        return `${sentence(name)} ${date(args[0])}에서 ${date(args[1])} 사이여야 합니다`;\n        /* </i18n> */\n    },\n    /**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */\n    email: '올바른 이메일 주소를 입력해주세요',\n    /**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */\n    ends_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */\n        return `${sentence(name)} ${list(args)}로 끝나지 않습니다`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */\n    is({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */\n        return `${sentence(name)} 허용되는 값이 아닙니다`;\n        /* </i18n> */\n    },\n    /**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */\n    length({ name, args: [first = 0, second = Infinity] }) {\n        const min = Number(first) <= Number(second) ? first : second;\n        const max = Number(second) >= Number(first) ? second : first;\n        if (min == 1 && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */\n            return `${sentence(name)} 하나 이상의 문자여야 합니다`;\n            /* </i18n> */\n        }\n        if (min == 0 && max) {\n            /* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */\n            return `${sentence(name)} ${max}자 이하여야 합니다`;\n            /* </i18n> */\n        }\n        if (min === max) {\n            /* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */\n            return `${sentence(name)} 는 ${max} 자 길이여야 합니다.`;\n            /* </i18n> */\n        }\n        if (min && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */\n            return `${sentence(name)} ${min} 문자보다 크거나 같아야 합니다`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */\n        return `${sentence(name)} ${min}에서 ${max}자 사이여야 합니다`;\n        /* </i18n> */\n    },\n    /**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */\n    matches({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */\n        return `${sentence(name)} 허용되는 값이 아닙니다`;\n        /* </i18n> */\n    },\n    /**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */\n    max({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */\n            return `${args[0]} ${name} 초과할 수 없습니다`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */\n        return `${sentence(name)} ${args[0]}보다 작거나 같아야 합니다`;\n        /* </i18n> */\n    },\n    /**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */\n    mime({ name, args }) {\n        if (!args[0]) {\n            /* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */\n            return '파일 형식이 허용되지 않습니다';\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */\n        return `${sentence(name)} ${args[0]} 유형이어야 합니다`;\n        /* </i18n> */\n    },\n    /**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */\n    min({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */\n            return `${args[0]} ${name}보다 작을 수 없습니다`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */\n        return `${sentence(name)} ${args[0]} 이상이어야 합니다`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */\n    not({ name, node: { value } }) {\n        /* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */\n        return `${value}\" 허용되지 않는 ${name}입니다`;\n        /* </i18n> */\n    },\n    /**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */\n    number({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a number.\"> */\n        return `${sentence(name)} 숫자여야 합니다`;\n        /* </i18n> */\n    },\n    /**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */\n    required({ name }) {\n        /* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */\n        return `${sentence(name)} 필수 값입니다`;\n        /* </i18n> */\n    },\n    /**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */\n    starts_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */\n        return `${sentence(name)} ${list(args)}로 시작하지 않습니다`;\n        /* </i18n> */\n    },\n    /**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */\n    url() {\n        /* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */\n        return `유효한 URL을 입력하십시오.`;\n        /* </i18n> */\n    },\n};\n\nvar ko = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ui: ui$h,\n    validation: validation$h\n});\n\n/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */\n/**\n * Standard language for interface features.\n * @public\n */\nconst ui$g = {\n    /**\n     * Shown on a button for adding additional items.\n     */\n    add: 'Legg til',\n    /**\n     * Shown when a button to remove items is visible.\n     */\n    remove: 'Fjern',\n    /**\n     * Shown when there are multiple items to remove at the same time.\n     */\n    removeAll: 'Fjern alle',\n    /**\n     * Shown when all fields are not filled out correctly.\n     */\n    incomplete: 'Beklager, noen felter er ikke fylt ut korrekt.',\n    /**\n     * Shown in a button inside a form to submit the form.\n     */\n    submit: 'Send inn',\n    /**\n     * Shown when no files are selected.\n     */\n    noFiles: 'Ingen fil valgt',\n    /**\n     * Shown on buttons that move fields up in a list.\n     */\n    moveUp: 'Flytt opp',\n    /**\n     * Shown on buttons that move fields down in a list.\n     */\n    moveDown: 'Flytt ned',\n    /**\n     * Shown when something is actively loading.\n     */\n    isLoading: 'Laster...',\n    /**\n     * Shown when there is more to load.\n     */\n    loadMore: 'Last mer',\n    /**\n     * Show on buttons that navigate state forward\n     */\n    next: 'Neste',\n    /**\n     * Show on buttons that navigate state backward\n     */\n    prev: 'Forrige',\n    /**\n     * Shown when adding all values.\n     */\n    addAllValues: 'Legg til alle verdier',\n    /**\n     * Shown when adding selected values.\n     */\n    addSelectedValues: 'Legg til valgte verdier',\n    /**\n     * Shown when removing all values.\n     */\n    removeAllValues: 'Fjern alle verdier',\n    /**\n     * Shown when removing selected values.\n     */\n    removeSelectedValues: 'Fjern valgte verdier',\n    /**\n     * Shown when there is a date to choose.\n     */\n    chooseDate: 'Velg dato',\n    /**\n     * Shown when there is a date to change.\n     */\n    changeDate: 'Endre dato',\n    /**\n     * Shown when the date is invalid.\n     */\n    invalidDate: 'Den valgte datoen er ugyldig.',\n};\n/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */\nconst validation$g = {\n    /**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */\n    accepted({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */\n        return `Vennligst aksepter ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */\n    date_after({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */\n            return `${sentence(name)} må være senere enn ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} må være i fremtiden.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */\n    alpha({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */\n        return `${sentence(name)} kan bare inneholde alfabetiske tegn.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */\n    alphanumeric({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */\n        return `${sentence(name)} kan bare inneholde bokstaver og tall.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */\n    alpha_spaces({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */\n        return `${sentence(name)} kan bare inneholde bokstaver og mellomrom.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */\n    date_before({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */\n            return `${sentence(name)} må være tidligere enn ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} må være i fortiden.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */\n    between({ name, args }) {\n        if (isNaN(args[0]) || isNaN(args[1])) {\n            /* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */\n            return `Dette feltet er feilkonfigurert og kan ikke innsendes.`;\n            /* </i18n> */\n        }\n        const [a, b] = order(args[0], args[1]);\n        /* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */\n        return `${sentence(name)} må være mellom ${a} og ${b}.`;\n        /* </i18n> */\n    },\n    /**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */\n    confirm({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */\n        return `${sentence(name)} stemmer ikke overens.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */\n    date_format({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */\n            return `${sentence(name)} er ikke en gyldig dato, vennligst bruk formatet ${args[0]}`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */\n        return 'Dette feltet er feilkonfigurert og kan ikke innsendes.';\n        /* </i18n> */\n    },\n    /**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */\n    date_between({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */\n        return `${sentence(name)} må være mellom ${date(args[0])} og ${date(args[1])}`;\n        /* </i18n> */\n    },\n    /**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */\n    email: 'Vennligst oppgi en gyldig epostadresse.',\n    /**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */\n    ends_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */\n        return `${sentence(name)} slutter ikke med ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */\n    is({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */\n        return `${sentence(name)} er ikke en tillatt verdi.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */\n    length({ name, args: [first = 0, second = Infinity] }) {\n        const min = Number(first) <= Number(second) ? first : second;\n        const max = Number(second) >= Number(first) ? second : first;\n        if (min == 1 && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */\n            return `${sentence(name)} må ha minst ett tegn.`;\n            /* </i18n> */\n        }\n        if (min == 0 && max) {\n            /* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */\n            return `${sentence(name)} må ha mindre enn eller nøyaktig ${max} tegn.`;\n            /* </i18n> */\n        }\n        if (min === max) {\n            /* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */\n            return `${sentence(name)} skal være ${max} tegn langt.`;\n            /* </i18n> */\n        }\n        if (min && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */\n            return `${sentence(name)} må ha mer enn eller nøyaktig ${min} tegn.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */\n        return `${sentence(name)} må ha mellom ${min} og ${max} tegn.`;\n        /* </i18n> */\n    },\n    /**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */\n    matches({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */\n        return `${sentence(name)} er ikke en tillatt verdi.`;\n        /* </i18n> */\n    },\n    /**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */\n    max({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */\n            return `Kan ikke ha mer enn ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */\n        return `${sentence(name)} må være mindre enn eller nøyaktig ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */\n    mime({ name, args }) {\n        if (!args[0]) {\n            /* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */\n            return 'Ingen tillatte filformater.';\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */\n        return `${sentence(name)} må være av typen: ${args[0]}`;\n        /* </i18n> */\n    },\n    /**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */\n    min({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */\n            return `Kan ikke ha mindre enn ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */\n        return `${sentence(name)} må være minst ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */\n    not({ name, node: { value } }) {\n        /* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */\n        return `“${value}” er ikke en tillatt ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */\n    number({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a number.\"> */\n        return `${sentence(name)} må være et tall.`;\n        /* </i18n> */\n    },\n    /**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */\n    required({ name }) {\n        /* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */\n        return `${sentence(name)} er påkrevd.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */\n    starts_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */\n        return `${sentence(name)} starter ikke med ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */\n    url() {\n        /* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */\n        return `Vennligst inkluder en gyldig url.`;\n        /* </i18n> */\n    },\n};\n\nvar nb = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ui: ui$g,\n    validation: validation$g\n});\n\n/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */\n/**\n * Standard language for interface features.\n * @public\n */\nconst ui$f = {\n    /**\n     * Shown on buttons for adding new items.\n     */\n    add: 'Toevoegen',\n    /**\n     * Shown when a button to remove items is visible.\n     */\n    remove: 'Verwijderen',\n    /**\n     * Shown when there are multiple items to remove at the same time.\n     */\n    removeAll: 'Alles verwijderen',\n    /**\n     * Shown when all fields are not filled out correctly.\n     */\n    incomplete: 'Sorry, niet alle velden zijn correct ingevuld.',\n    /**\n     * Shown in a button inside a form to submit the form.\n     */\n    submit: 'Versturen',\n    /**\n     * Shown when no files are selected.\n     */\n    noFiles: 'Geen bestand gekozen',\n    /**\n     * Shown on buttons that move fields up in a list.\n     */\n    moveUp: 'Naar boven gaan',\n    /**\n     * Shown on buttons that move fields down in a list.\n     */\n    moveDown: 'Naar beneden verplaatsen',\n    /**\n     * Shown when something is actively loading.\n     */\n    isLoading: 'Aan het laden...',\n    /**\n     * Shown when there is more to load.\n     */\n    loadMore: 'Meer laden',\n    /**\n     * Shown on buttons that navigate state forward\n     */\n    next: 'Vervolgens',\n    /**\n     * Shown on buttons that navigate state backward\n     */\n    prev: 'Voorgaand',\n    /**\n     * Shown when adding all values.\n     */\n    addAllValues: 'Alle waarden toevoegen',\n    /**\n     * Shown when adding selected values.\n     */\n    addSelectedValues: 'Geselecteerde waarden toevoegen',\n    /**\n     * Shown when removing all values.\n     */\n    removeAllValues: 'Alle waarden verwijderen',\n    /**\n     * Shown when removing selected values.\n     */\n    removeSelectedValues: 'Geselecteerde waarden verwijderen',\n    /**\n     * Shown when there is a date to choose.\n     */\n    chooseDate: 'Kies een datum',\n    /**\n     * Shown when there is a date to change.\n     */\n    changeDate: 'Datum wijzigen',\n    /**\n     * Shown when the date is invalid.\n     */\n    invalidDate: 'De geselecteerde datum is ongeldig.',\n};\n/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */\nconst validation$f = {\n    /**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */\n    accepted({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */\n        return `Accepteer de ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */\n    date_after({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */\n            return `${sentence(name)} moet na ${date(args[0])} zijn.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} moet in de toekomst liggen.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */\n    alpha({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */\n        return `${sentence(name)} mag alleen alfabetische tekens bevatten.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */\n    alphanumeric({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */\n        return `${sentence(name)} mag alleen letters en cijfers bevatten.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */\n    alpha_spaces({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */\n        return `${sentence(name)} mag alleen letters en spaties bevatten.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */\n    date_before({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */\n            return `${sentence(name)} moet vóór ${date(args[0])} vallen.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} moet in het verleden liggen.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */\n    between({ name, args }) {\n        if (isNaN(args[0]) || isNaN(args[1])) {\n            /* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */\n            return `Dit veld is onjuist geconfigureerd en kan niet worden verzonden.`;\n            /* </i18n> */\n        }\n        const [a, b] = order(args[0], args[1]);\n        /* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */\n        return `${sentence(name)} moet tussen ${a} en ${b} liggen.`;\n        /* </i18n> */\n    },\n    /**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */\n    confirm({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */\n        return `${sentence(name)} komt niet overeen.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */\n    date_format({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */\n            return `${sentence(name)} is geen geldige datum, gebruik de notatie ${args[0]}`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */\n        return 'Dit veld is onjuist geconfigureerd en kan niet worden verzonden';\n        /* </i18n> */\n    },\n    /**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */\n    date_between({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */\n        return `${sentence(name)} moet tussen ${date(args[0])} en ${date(args[1])} liggen`;\n        /* </i18n> */\n    },\n    /**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */\n    email: 'Vul een geldig e-mailadres in.',\n    /**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */\n    ends_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */\n        return `${sentence(name)} eindigt niet met ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */\n    is({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */\n        return `${sentence(name)} is geen toegestane waarde.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */\n    length({ name, args: [first = 0, second = Infinity] }) {\n        const min = Number(first) <= Number(second) ? first : second;\n        const max = Number(second) >= Number(first) ? second : first;\n        if (min == 1 && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */\n            return `${sentence(name)} moet minimaal één teken zijn.`;\n            /* </i18n> */\n        }\n        if (min == 0 && max) {\n            /* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */\n            return `${sentence(name)} moet kleiner zijn dan of gelijk zijn aan ${max} tekens.`;\n            /* </i18n> */\n        }\n        if (min === max) {\n            /* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */\n            return `${sentence(name)} moet ${max} tekens lang zijn.`;\n            /* </i18n> */\n        }\n        if (min && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */\n            return `${sentence(name)} moet groter zijn dan of gelijk zijn aan ${min} tekens.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */\n        return `${sentence(name)} moet tussen de ${min} en ${max} tekens bevatten.`;\n        /* </i18n> */\n    },\n    /**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */\n    matches({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */\n        return `${sentence(name)} is geen toegestane waarde.`;\n        /* </i18n> */\n    },\n    /**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */\n    max({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */\n            return `Mag niet meer dan ${args[0]} ${name} hebben.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */\n        return `${sentence(name)} moet kleiner zijn dan of gelijk zijn aan ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */\n    mime({ name, args }) {\n        if (!args[0]) {\n            /* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */\n            return 'Geen bestandsformaten toegestaan.';\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */\n        return `${sentence(name)} moet van het type: ${args[0]} zijn`;\n        /* </i18n> */\n    },\n    /**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */\n    min({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */\n            return `Mag niet minder dan ${args[0]} ${name} hebben.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */\n        return `${sentence(name)} moet minimaal ${args[0]} zijn.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */\n    not({ name, node: { value } }) {\n        /* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */\n        return `\"${value}\" is geen toegestane ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */\n    number({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a number.\"> */\n        return `${sentence(name)} moet een getal zijn.`;\n        /* </i18n> */\n    },\n    /**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */\n    required({ name }) {\n        /* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */\n        return `${sentence(name)} is verplicht.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */\n    starts_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */\n        return `${sentence(name)} begint niet met ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */\n    url() {\n        /* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */\n        return `Voer een geldige URL in.`;\n        /* </i18n> */\n    },\n};\n\nvar nl = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ui: ui$f,\n    validation: validation$f\n});\n\n/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */\n/**\n * Standard language for interface features.\n * @public\n */\nconst ui$e = {\n    /**\n     * Shown on buttons for adding new items.\n     */\n    add: 'Dodaj',\n    /**\n     * Shown when a button to remove items is visible.\n     */\n    remove: 'Usuń',\n    /**\n     * Shown when there are multiple items to remove at the same time.\n     */\n    removeAll: 'Usuń wszystko',\n    /**\n     * Shown when all fields are not filled out correctly.\n     */\n    incomplete: 'Nie wszystkie pola zostały wypełnione poprawnie.',\n    /**\n     * Shown in a button inside a form to submit the form.\n     */\n    submit: 'Wyślij',\n    /**\n     * Shown when no files are selected.\n     */\n    noFiles: 'Nie wybrano pliku',\n    /**\n     * Shown on buttons that move fields up in a list.\n     */\n    moveUp: 'Przesuń w górę',\n    /**\n     * Shown on buttons that move fields down in a list.\n     */\n    moveDown: 'Przesuń w dół',\n    /**\n     * Shown when something is actively loading.\n     */\n    isLoading: 'Ładowanie...',\n    /**\n     * Shown when there is more to load.\n     */\n    loadMore: 'Załaduj więcej',\n    /**\n     * Shown on buttons that navigate state forward\n     */\n    next: 'Kolejny',\n    /**\n     * Shown on buttons that navigate state backward\n     */\n    prev: 'Poprzednia',\n    /**\n     * Shown when adding all values.\n     */\n    addAllValues: 'Dodaj wszystkie wartości',\n    /**\n     * Shown when adding selected values.\n     */\n    addSelectedValues: 'Dodaj wybrane wartości',\n    /**\n     * Shown when removing all values.\n     */\n    removeAllValues: 'Usuń wszystkie wartości',\n    /**\n     * Shown when removing selected values.\n     */\n    removeSelectedValues: 'Usuń wybrane wartości',\n    /**\n     * Shown when there is a date to choose.\n     */\n    chooseDate: 'Wybierz datę',\n    /**\n     * Shown when there is a date to change.\n     */\n    changeDate: 'Zmień datę',\n    /**\n     * Shown when the date is invalid.\n     */\n    invalidDate: 'Wybrana data jest nieprawidłowa.',\n};\n/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */\nconst validation$e = {\n    /**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */\n    accepted({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */\n        return `Proszę zaakceptować ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */\n    date_after({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */\n            return `${sentence(name)} musi być po ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} musi być w przyszłości.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */\n    alpha({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */\n        return `Pole ${sentence(name)} może zawierać tylko znaki alfabetyczne.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */\n    alphanumeric({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */\n        return `Pole ${sentence(name)} może zawierać tylko znaki alfanumeryczne.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */\n    alpha_spaces({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */\n        return `Pole ${sentence(name)} mogą zawierać tylko litery i spacje.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */\n    date_before({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */\n            return `${sentence(name)} musi być przed ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} musi być w przeszłości.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */\n    between({ name, args }) {\n        if (isNaN(args[0]) || isNaN(args[1])) {\n            /* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */\n            return `Pole zostało wypełnione niepoprawnie i nie może zostać wysłane.`;\n            /* </i18n> */\n        }\n        const [a, b] = order(args[0], args[1]);\n        /* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */\n        return `Wartość pola ${sentence(name)} musi być pomiędzy ${a} i ${b}.`;\n        /* </i18n> */\n    },\n    /**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */\n    confirm({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */\n        return `${sentence(name)} nie pokrywa się.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */\n    date_format({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */\n            return `Wartość pola ${sentence(name)} nie jest poprawną datą, proszę użyć formatu ${args[0]}`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */\n        return 'To pole zostało wypełnione niepoprawnie i nie może zostać wysłane';\n        /* </i18n> */\n    },\n    /**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */\n    date_between({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */\n        return `Data w polu ${sentence(name)} musi być pomiędzy ${date(args[0])} i ${date(args[1])}`;\n        /* </i18n> */\n    },\n    /**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */\n    email: 'Proszę wpisać poprawny adres email.',\n    /**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */\n    ends_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */\n        return `Pole ${sentence(name)} nie kończy się na ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */\n    is({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */\n        return `Pole ${sentence(name)} nie jest dozwoloną wartością.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */\n    length({ name, args: [first = 0, second = Infinity] }) {\n        const min = Number(first) <= Number(second) ? first : second;\n        const max = Number(second) >= Number(first) ? second : first;\n        if (min == 1 && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */\n            return `Pole ${sentence(name)} musi posiadać minimum jeden znak.`;\n            /* </i18n> */\n        }\n        if (min == 0 && max) {\n            /* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */\n            return `Pole ${sentence(name)} musi zawierać ${max} lub mniej znaków.`;\n            /* </i18n> */\n        }\n        if (min && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */\n            return `Pole ${sentence(name)} musi zawierać ${min} lub więcej znaków.`;\n            /* </i18n> */\n        }\n        if (min === max) {\n            /* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */\n            return `Pole ${sentence(name)} musi mieć ${min} znaków.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */\n        return `Pole ${sentence(name)} musi mieć ${min}-${max} znaków.`;\n        /* </i18n> */\n    },\n    /**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */\n    matches({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */\n        return `Pole ${sentence(name)} zawiera niedozwolone znaki.`;\n        /* </i18n> */\n    },\n    /**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */\n    max({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */\n            return `Nie można mieć więcej niż ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */\n        return `Wartość pola ${sentence(name)} musi być mniejsza lub równa ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */\n    mime({ name, args }) {\n        if (!args[0]) {\n            /* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */\n            return 'Nie podano dozwolonych typów plików.';\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */\n        return `${sentence(name)} musi być typem: ${args[0]}`;\n        /* </i18n> */\n    },\n    /**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */\n    min({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */\n            return `Musisz podać więcej niż ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */\n        return ` Musisz podać conajmniej ${args[0]} ${sentence(name)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */\n    not({ name }) {\n        /* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */\n        return `Wartość pola ${name} jest niedozwolona.`;\n        /* </i18n> */\n    },\n    /**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */\n    number({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a number.\"> */\n        return `${sentence(name)} musi być numerem.`;\n        /* </i18n> */\n    },\n    /**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */\n    required({ name }) {\n        /* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */\n        return `Pole ${sentence(name)} jest wymagane.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */\n    starts_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */\n        return `Wartośc pola ${sentence(name)} nie zaczyna się od ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */\n    url() {\n        /* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */\n        return `Wprowadź prawidłowy adres URL.`;\n        /* </i18n> */\n    },\n};\n\nvar pl = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ui: ui$e,\n    validation: validation$e\n});\n\n/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */\n/**\n * Standard language for interface features.\n * @public\n */\nconst ui$d = {\n    /**\n     * Shown on buttons for adding new items.\n     */\n    add: 'Incluir',\n    /**\n     * Shown when a button to remove items is visible.\n     */\n    remove: 'Remover',\n    /**\n     * Shown when there are multiple items to remove at the same time.\n     */\n    removeAll: 'Remover todos',\n    /**\n     * Shown when all fields are not filled out correctly.\n     */\n    incomplete: 'Desculpe, alguns campos não foram preenchidos corretamente.',\n    /**\n     * Shown in a button inside a form to submit the form.\n     */\n    submit: 'Enviar',\n    /**\n     * Shown when no files are selected.\n     */\n    noFiles: 'Nenhum arquivo selecionado.',\n    /**\n     * Shown on buttons that move fields up in a list.\n     */\n    moveUp: 'Mover para cima',\n    /**\n     * Shown on buttons that move fields down in a list.\n     */\n    moveDown: 'Mover para baixo',\n    /**\n     * Shown when something is actively loading.\n     */\n    isLoading: 'Carregando...',\n    /**\n     * Shown when there is more to load.\n     */\n    loadMore: 'Carregar mais',\n    /**\n     * Shown on buttons that navigate state forward\n     */\n    next: 'Próximo',\n    /**\n     * Shown on buttons that navigate state backward\n     */\n    prev: 'Anterior',\n    /**\n     * Shown when adding all values.\n     */\n    addAllValues: 'Adicione todos os valores',\n    /**\n     * Shown when adding selected values.\n     */\n    addSelectedValues: 'Adicionar valores selecionados',\n    /**\n     * Shown when removing all values.\n     */\n    removeAllValues: 'Remover todos os valores',\n    /**\n     * Shown when removing selected values.\n     */\n    removeSelectedValues: 'Remover valores selecionados',\n    /**\n     * Shown when there is a date to choose.\n     */\n    chooseDate: 'Escolha a data',\n    /**\n     * Shown when there is a date to change.\n     */\n    changeDate: 'Data da alteração',\n    /**\n     * Shown when the date is invalid.\n     */\n    invalidDate: 'A data selecionada é inválida.',\n};\n/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */\nconst validation$d = {\n    /**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */\n    accepted({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */\n        return `Por favor aceite o ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */\n    date_after({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */\n            return `${sentence(name)} precisa ser depois de ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} precisa ser no futuro.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */\n    alpha({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */\n        return `${sentence(name)} precisa conter apenas letras.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */\n    alphanumeric({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */\n        return `${sentence(name)} pode conter apenas letras e números.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */\n    alpha_spaces({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */\n        return `${sentence(name)} pode conter apenas números e espaços.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */\n    date_before({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */\n            return `${sentence(name)} precisa ser antes de ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} precisa ser no passado.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */\n    between({ name, args }) {\n        if (isNaN(args[0]) || isNaN(args[1])) {\n            /* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */\n            return `Este campo não foi configurado corretamente e não pode ser submetido.`;\n            /* </i18n> */\n        }\n        const [a, b] = order(args[0], args[1]);\n        /* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */\n        return `${sentence(name)} precisa ser entre ${a} e ${b}.`;\n        /* </i18n> */\n    },\n    /**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */\n    confirm({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */\n        return `${sentence(name)} não é igual.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */\n    date_format({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */\n            return `${sentence(name)} não é uma data válida, por favor use este formato ${args[0]}`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */\n        return 'Este campo não foi configurado corretamente e não pode ser submetido.';\n        /* </i18n> */\n    },\n    /**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */\n    date_between({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */\n        return `${sentence(name)} precisa ser entre ${date(args[0])} e ${date(args[1])}`;\n        /* </i18n> */\n    },\n    /**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */\n    email: 'Por favor, insira um endereço de email válido.',\n    /**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */\n    ends_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */\n        return `${sentence(name)} não termina com ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */\n    is({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */\n        return `${sentence(name)} não é um valor permitido.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */\n    length({ name, args: [first = 0, second = Infinity] }) {\n        const min = first <= second ? first : second;\n        const max = second >= first ? second : first;\n        if (min == 1 && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */\n            return `${sentence(name)} precisa conter ao menos um caractere.`;\n            /* </i18n> */\n        }\n        if (min == 0 && max) {\n            /* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */\n            return `${sentence(name)} precisa ser menor ou igual a ${max} caracteres.`;\n            /* </i18n> */\n        }\n        if (min === max) {\n            /* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */\n            return `${sentence(name)} precisa conter ${max} caracteres.`;\n            /* </i18n> */\n        }\n        if (min && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */\n            return `${sentence(name)} precisa ser maior ou igual a ${min} caracteres.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */\n        return `${sentence(name)} precisa ter entre ${min} e ${max} caracteres.`;\n        /* </i18n> */\n    },\n    /**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */\n    matches({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */\n        return `${sentence(name)} não é um valor permitido.`;\n        /* </i18n> */\n    },\n    /**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */\n    max({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */\n            return `Não pode ter mais de ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */\n        return `${sentence(name)} precisa ser menor ou igual a ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */\n    mime({ name, args }) {\n        if (!args[0]) {\n            /* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */\n            return 'Não há formatos de arquivos permitidos.';\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */\n        return `${sentence(name)} precisa ser do tipo: ${args[0]}`;\n        /* </i18n> */\n    },\n    /**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */\n    min({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */\n            return `Não pode ter menos de ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */\n        return `${sentence(name)} precisa ser pelo menos ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */\n    not({ name, node: { value } }) {\n        /* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */\n        return `“${value}” não é um(a) ${name} permitido(a).`;\n        /* </i18n> */\n    },\n    /**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */\n    number({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a number.\"> */\n        return `${sentence(name)} precisa ser um número.`;\n        /* </i18n> */\n    },\n    /**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */\n    required({ name }) {\n        /* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */\n        return `${sentence(name)} é obrigatório.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */\n    starts_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */\n        return `${sentence(name)} não começa com ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */\n    url() {\n        /* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */\n        return `Por favor, insira uma url válida.`;\n        /* </i18n> */\n    },\n};\n\nvar pt = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ui: ui$d,\n    validation: validation$d\n});\n\n/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */\n/**\n * Standard language for interface features.\n * @public\n */\nconst ui$c = {\n    /**\n     * Shown on buttons for adding new items.\n     */\n    add: 'Adăugare',\n    /**\n     * Shown when a button to remove items is visible.\n     */\n    remove: 'Elimină',\n    /**\n     * Shown when there are multiple items to remove at the same time.\n     */\n    removeAll: 'Elimină tot',\n    /**\n     * Shown when all fields are not filled out correctly.\n     */\n    incomplete: 'Pare rău, unele câmpuri nu sunt corect completate.',\n    /**\n     * Shown in a button inside a form to submit the form.\n     */\n    submit: 'Trimite',\n    /**\n     * Shown when no files are selected.\n     */\n    noFiles: 'Nu este selectat nici un fișier',\n    /**\n     * Shown on buttons that move fields up in a list.\n     */\n    moveUp: 'Mutare în sus',\n    /**\n     * Shown on buttons that move fields down in a list.\n     */\n    moveDown: 'Mutare în jos',\n    /**\n     * Shown when something is actively loading.\n     */\n    isLoading: 'Se încarcă...',\n    /**\n     * Shown when there is more to load.\n     */\n    loadMore: 'Încărcați mai mult',\n    /**\n     * Shown on buttons that navigate state forward\n     */\n    next: 'Urmatorul',\n    /**\n     * Shown on buttons that navigate state backward\n     */\n    prev: 'Precedent',\n    /**\n     * Shown when adding all values.\n     */\n    addAllValues: 'Adăugați toate valorile',\n    /**\n     * Shown when adding selected values.\n     */\n    addSelectedValues: 'Adăugarea valorilor selectate',\n    /**\n     * Shown when removing all values.\n     */\n    removeAllValues: 'Eliminați toate valorile',\n    /**\n     * Shown when removing selected values.\n     */\n    removeSelectedValues: 'Eliminați valorile selectate',\n    /**\n     * Shown when there is a date to choose.\n     */\n    chooseDate: 'Alege data',\n    /**\n     * Shown when there is a date to change.\n     */\n    changeDate: 'Modificați data',\n    /**\n     * Shown when the date is invalid.\n     */\n    invalidDate: 'Data selectată este nevalidă.',\n};\n/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */\nconst validation$c = {\n    /**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */\n    accepted({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */\n        return `Te rog acceptă ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */\n    date_after({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */\n            return `${sentence(name)} trebuie să fie după ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} trebuie sa fie în viitor.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */\n    alpha({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */\n        return `${sentence(name)} poate conține doar caractere alafetice.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */\n    alphanumeric({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */\n        return `${sentence(name)} poate conține doar litere și numere.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */\n    alpha_spaces({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */\n        return `${sentence(name)} poate conține doar litere și spații.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */\n    date_before({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */\n            return `${sentence(name)} trebuie să preceadă ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} trebuie să fie în trecut.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */\n    between({ name, args }) {\n        if (isNaN(args[0]) || isNaN(args[1])) {\n            /* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */\n            return `Câmpul a fost configurat incorect și nu poate fi trimis.`;\n            /* </i18n> */\n        }\n        const [a, b] = order(args[0], args[1]);\n        /* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */\n        return `${sentence(name)} trebuie să fie între ${a} și ${b}.`;\n        /* </i18n> */\n    },\n    /**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */\n    confirm({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */\n        return `${sentence(name)} nu se potrivește.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */\n    date_format({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */\n            return `${sentence(name)} nu este validă, te rog foloște formatul ${args[0]}`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */\n        return 'Câmpul a fost incorect configurat și nu poate fi trimis.';\n        /* </i18n> */\n    },\n    /**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */\n    date_between({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */\n        return `${sentence(name)} trebuie să fie între ${date(args[0])} și ${date(args[1])}`;\n        /* </i18n> */\n    },\n    /**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */\n    email: 'Te rog folosește o adresă de email validă.',\n    /**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */\n    ends_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */\n        return `${sentence(name)} nu se termină cu ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */\n    is({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */\n        return `${sentence(name)} nu este o valoare acceptată.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */\n    length({ name, args: [first = 0, second = Infinity] }) {\n        const min = Number(first) <= Number(second) ? first : second;\n        const max = Number(second) >= Number(first) ? second : first;\n        if (min == 1 && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */\n            return `${sentence(name)} trebuie sa conțină cel puțin un caracter.`;\n            /* </i18n> */\n        }\n        if (min == 0 && max) {\n            /* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */\n            return `${sentence(name)} trebuie sa aibă cel mult ${max} caractere.`;\n            /* </i18n> */\n        }\n        if (min === max) {\n            /* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */\n            return `${sentence(name)} ar trebui să aibă ${max} caractere lungi.`;\n            /* </i18n> */\n        }\n        if (min && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */\n            return `${sentence(name)} trebuie să aibă cel puțin ${min} caractere.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */\n        return `${sentence(name)} trebuie să aibă între ${min} și ${max} caractere.`;\n        /* </i18n> */\n    },\n    /**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */\n    matches({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */\n        return `${sentence(name)} nu este o valoare acceptată.`;\n        /* </i18n> */\n    },\n    /**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */\n    max({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */\n            return `Nu poate avea mai mult decat ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */\n        return `${sentence(name)} trebuie să fie cel mult egal cu ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */\n    mime({ name, args }) {\n        if (!args[0]) {\n            /* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */\n            return 'Tipul de fișier neacceptat.';\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */\n        return `${sentence(name)} trebuie să fie de tipul: ${args[0]}`;\n        /* </i18n> */\n    },\n    /**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */\n    min({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */\n            return `Nu poate avea mai puțin decât ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */\n        return `${sentence(name)} trebuie să fie cel puțin ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */\n    not({ name, node: { value } }) {\n        /* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */\n        return `“${value}” nu este o valoare acceptă pentru ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */\n    number({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a number.\"> */\n        return `${sentence(name)} trebuie să fie un număr.`;\n        /* </i18n> */\n    },\n    /**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */\n    required({ name }) {\n        /* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */\n        return `${sentence(name)} este necesar.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */\n    starts_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */\n        return `${sentence(name)} nu începe cu ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */\n    url() {\n        /* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */\n        return `Introduceți o adresă URL validă.`;\n        /* </i18n> */\n    },\n};\n\nvar ro = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ui: ui$c,\n    validation: validation$c\n});\n\n/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */\n/**\n * Standard language for interface features.\n * @public\n */\nconst ui$b = {\n    /**\n     * Shown on buttons for adding new items.\n     */\n    add: 'Добавить',\n    /**\n     * Shown when a button to remove items is visible.\n     */\n    remove: 'Удалить',\n    /**\n     * Shown when there are multiple items to remove at the same time.\n     */\n    removeAll: 'Убрать все',\n    /**\n     * Shown when all fields are not filled out correctly.\n     */\n    incomplete: 'Извините, не все поля заполнены верно.',\n    /**\n     * Shown in a button inside a form to submit the form.\n     */\n    submit: 'Отправить',\n    /**\n     * Shown when no files are selected.\n     */\n    noFiles: 'Файл не выбран',\n    /**\n     * Shown on buttons that move fields up in a list.\n     */\n    moveUp: 'Переместить вверх',\n    /**\n     * Shown on buttons that move fields down in a list.\n     */\n    moveDown: 'Переместить вниз',\n    /**\n     * Shown when something is actively loading.\n     */\n    isLoading: 'Загрузка...',\n    /**\n     * Shown when there is more to load.\n     */\n    loadMore: 'Загрузить больше',\n    /**\n     * Shown on buttons that navigate state forward\n     */\n    next: 'Следующий',\n    /**\n     * Shown on buttons that navigate state backward\n     */\n    prev: 'Предыдущий',\n    /**\n     * Shown when adding all values.\n     */\n    addAllValues: 'Добавить все значения',\n    /**\n     * Shown when adding selected values.\n     */\n    addSelectedValues: 'Добавить выбранные значения',\n    /**\n     * Shown when removing all values.\n     */\n    removeAllValues: 'Удалить все значения',\n    /**\n     * Shown when removing selected values.\n     */\n    removeSelectedValues: 'Удалить выбранные значения',\n    /**\n     * Shown when there is a date to choose.\n     */\n    chooseDate: 'Выберите дату',\n    /**\n     * Shown when there is a date to change.\n     */\n    changeDate: 'Изменить дату',\n    /**\n     * Shown when the date is invalid.\n     */\n    invalidDate: 'Выбранная дата недействительна.',\n};\n/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */\nconst validation$b = {\n    /**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */\n    accepted({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */\n        return `Пожалуйста, примите ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */\n    date_after({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */\n            return `Дата ${sentence(name)} должна быть позже ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */\n        return `Дата ${sentence(name)} должна быть в будущем.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */\n    alpha({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */\n        return `Поле ${sentence(name)} может содержать только буквы.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */\n    alphanumeric({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */\n        return `Поле ${sentence(name)} может содержать только буквы и цифры.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */\n    alpha_spaces({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */\n        return `${sentence(name)} могут содержать только буквы и пробелы.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */\n    date_before({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */\n            return `Дата ${sentence(name)} должна быть раньше ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */\n        return `Дата ${sentence(name)} должна быть в прошлом.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */\n    between({ name, args }) {\n        if (isNaN(args[0]) || isNaN(args[1])) {\n            /* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */\n            return `Это поле заполнено неверно и не может быть отправлено.`;\n            /* </i18n> */\n        }\n        const [a, b] = order(args[0], args[1]);\n        /* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */\n        return `Поле ${sentence(name)} должно быть между ${a} и ${b}.`;\n        /* </i18n> */\n    },\n    /**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */\n    confirm({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */\n        return `Поле ${sentence(name)} не совпадает.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */\n    date_format({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */\n            return `Поле ${sentence(name)} имеет неверную дату. Пожалуйста, используйте формат ${args[0]}`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */\n        return 'Это поле заполнено неверно и не может быть отправлено.';\n        /* </i18n> */\n    },\n    /**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */\n    date_between({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */\n        return `Дата ${sentence(name)} должна быть между ${date(args[0])} и ${date(args[1])}`;\n        /* </i18n> */\n    },\n    /**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */\n    email: 'Пожалуйста, введите действительный электронный адрес.',\n    /**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */\n    ends_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */\n        return `Поле ${sentence(name)} не должно заканчиваться на ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */\n    is({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */\n        return `Поле ${sentence(name)} имеет неподустимое значение.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */\n    length({ name, args: [first = 0, second = Infinity] }) {\n        const min = Number(first) <= Number(second) ? first : second;\n        const max = Number(second) >= Number(first) ? second : first;\n        if (min == 1 && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */\n            return `Поле ${sentence(name)} должно содержать минимум один символ.`;\n            /* </i18n> */\n        }\n        if (min == 0 && max) {\n            /* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */\n            return `Длина поля ${sentence(name)} должна быть меньше или равна ${max} символам.`;\n            /* </i18n> */\n        }\n        if (min === max) {\n            /* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */\n            return `Длина ${sentence(name)} должна составлять ${max} символов.`;\n            /* </i18n> */\n        }\n        if (min && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */\n            return `Длина поля ${sentence(name)} должна быть больше или равна ${min} символам.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */\n        return `Длина поля ${sentence(name)} должна быть между ${min} и ${max} символами.`;\n        /* </i18n> */\n    },\n    /**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */\n    matches({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */\n        return `Поле ${sentence(name)} имеет недопустимое значение.`;\n        /* </i18n> */\n    },\n    /**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */\n    max({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */\n            return `Не может быть выбрано больше, чем ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */\n        return `Поле ${sentence(name)} должно быть меньше или равно ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */\n    mime({ name, args }) {\n        if (!args[0]) {\n            /* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */\n            return 'Не указаны поддержиавемые форматы файла.';\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */\n        return `Формат файла в поле ${sentence(name)} должен быть: ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */\n    min({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */\n            return `Не может быть выбрано меньше, чем ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */\n        return `Поле ${sentence(name)} должно быть не менее, чем ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */\n    not({ name, node: { value } }) {\n        /* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */\n        return `“${value}” не поддерживается в поле ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */\n    number({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a number.\"> */\n        return `Поле ${sentence(name)} должно быть числом.`;\n        /* </i18n> */\n    },\n    /**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */\n    required({ name }) {\n        /* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */\n        return `Поле ${sentence(name)} обязательно для заполнения.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */\n    starts_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */\n        return `Поле ${sentence(name)} должно начинаться с ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */\n    url() {\n        /* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */\n        return `Пожалуйста, введите действительный URL-адрес.`;\n        /* </i18n> */\n    },\n};\n\nvar ru = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ui: ui$b,\n    validation: validation$b\n});\n\n/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */\n/**\n * Standard language for interface features.\n * @public\n */\nconst ui$a = {\n    /**\n     * Shown on a button for adding additional items.\n     */\n    add: 'Pridať',\n    /**\n     * Shown when a button to remove items is visible.\n     */\n    remove: 'Odstrániť',\n    /**\n     * Shown when there are multiple items to remove at the same time.\n     */\n    removeAll: 'Odstrániť všetko',\n    /**\n     * Shown when all fields are not filled out correctly.\n     */\n    incomplete: 'Prepáčte, ale nie všetky polia sú vyplnené správne.',\n    /**\n     * Shown in a button inside a form to submit the form.\n     */\n    submit: 'Odoslať',\n    /**\n     * Shown when no files are selected.\n     */\n    noFiles: 'Nebol vybraný žiadny súbor',\n    /**\n     * Shown on buttons that move fields up in a list.\n     */\n    moveUp: 'Posunúť hore',\n    /**\n     * Shown on buttons that move fields down in a list.\n     */\n    moveDown: 'Posunúť dole',\n    /**\n     * Shown when something is actively loading.\n     */\n    isLoading: 'Načítavanie...',\n    /**\n     * Shown when there is more to load.\n     */\n    loadMore: 'Načítať viac',\n    /**\n     * Shown on buttons that navigate state forward\n     */\n    next: 'Ďalšie',\n    /**\n     * Shown on buttons that navigate state backward\n     */\n    prev: 'Predošlý',\n    /**\n     * Shown when adding all values.\n     */\n    addAllValues: 'Pridajte všetky hodnoty',\n    /**\n     * Shown when adding selected values.\n     */\n    addSelectedValues: 'Pridajte vybrané hodnoty',\n    /**\n     * Shown when removing all values.\n     */\n    removeAllValues: 'Odstrániť všetky hodnoty',\n    /**\n     * Shown when removing selected values.\n     */\n    removeSelectedValues: 'Odstrániť vybrané hodnoty',\n    /**\n     * Shown when there is a date to choose.\n     */\n    chooseDate: 'Vyberte dátum',\n    /**\n     * Shown when there is a date to change.\n     */\n    changeDate: 'Zmena dátumu',\n    /**\n     * Shown when the date is invalid.\n     */\n    invalidDate: 'Vybraný dátum je neplatný.',\n};\n/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */\nconst validation$a = {\n    /**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */\n    accepted({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */\n        return `Prosím zaškrtnite ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */\n    date_after({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */\n            return `${sentence(name)} musí byť za ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} musí byť v budúcnosti.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */\n    alpha({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */\n        return `${sentence(name)} môže obsahovať iba písmená.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */\n    alphanumeric({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */\n        return `${sentence(name)} môže obsahovať iba písmená a čísla.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */\n    alpha_spaces({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */\n        return `${sentence(name)} môže obsahovať iba písmená a medzery.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */\n    date_before({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */\n            return `${sentence(name)} musí byť pred ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} musí byť v minulosti.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */\n    between({ name, args }) {\n        if (isNaN(args[0]) || isNaN(args[1])) {\n            /* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */\n            return `Toto pole bolo nesprávne nakonfigurované a nemôže byť odoslané.`;\n            /* </i18n> */\n        }\n        const [a, b] = order(args[0], args[1]);\n        /* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */\n        return `${sentence(name)} musí byť medzi ${a} and ${b}.`;\n        /* </i18n> */\n    },\n    /**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */\n    confirm({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */\n        return `${sentence(name)} does not match.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */\n    date_format({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */\n            return `${sentence(name)} nie je platným dátumom, prosím, použite formát ${args[0]}`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */\n        return 'Toto pole bolo nesprávne nakonfigurované a nemôže byť odoslané.';\n        /* </i18n> */\n    },\n    /**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */\n    date_between({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */\n        return `${sentence(name)} musí byť medzi ${date(args[0])} a ${date(args[1])}`;\n        /* </i18n> */\n    },\n    /**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */\n    email: 'Prosím, zadajte platnú emailovú adresu.',\n    /**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */\n    ends_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */\n        return `${sentence(name)} nekončí na ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */\n    is({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */\n        return `${sentence(name)} nie je povolená hodnota.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */\n    length({ name, args: [first = 0, second = Infinity] }) {\n        const min = Number(first) <= Number(second) ? first : second;\n        const max = Number(second) >= Number(first) ? second : first;\n        if (min == 1 && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */\n            return `${sentence(name)} musí mať najmenej jeden znak.`;\n            /* </i18n> */\n        }\n        if (min == 0 && max) {\n            /* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */\n            return `${sentence(name)} musí byť menšie alebo rovné ako ${max} znakov.`;\n            /* </i18n> */\n        }\n        if (min === max) {\n            /* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */\n            return `${sentence(name)} by mala mať dĺžku ${max} znakov.`;\n            /* </i18n> */\n        }\n        if (min && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */\n            return `${sentence(name)} musí byť väčšie alebo rovné ako ${min} znakov.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */\n        return `${sentence(name)} musí byť medzi ${min} až ${max} znakov.`;\n        /* </i18n> */\n    },\n    /**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */\n    matches({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */\n        return `${sentence(name)} nie je povolená hodnota.`;\n        /* </i18n> */\n    },\n    /**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */\n    max({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */\n            return `Nie je možné použiť viac než ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */\n        return `${sentence(name)} musí byť menšie alebo rovné ako ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */\n    mime({ name, args }) {\n        if (!args[0]) {\n            /* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */\n            return 'Nie sú povolené formáty súborov.';\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */\n        return `${sentence(name)} musí byť typu: ${args[0]}`;\n        /* </i18n> */\n    },\n    /**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */\n    min({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */\n            return `Nemôže byť menej než ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */\n        return `${sentence(name)} musí byť minimálne ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */\n    not({ name, node: { value } }) {\n        /* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */\n        return `“${value}” nie je povolené hodnota pre ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */\n    number({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a number.\"> */\n        return `${sentence(name)} musí byť číslo.`;\n        /* </i18n> */\n    },\n    /**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */\n    required({ name }) {\n        /* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */\n        return `${sentence(name)} je povinné.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */\n    starts_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */\n        return `${sentence(name)} nezačíná s ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */\n    url() {\n        /* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */\n        return `Zadajte platnú adresu URL.`;\n        /* </i18n> */\n    },\n};\n\nvar sk = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ui: ui$a,\n    validation: validation$a\n});\n\n/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */\n/**\n * Standard language for interface features.\n * @public\n */\nconst ui$9 = {\n    /**\n     * Shown on buttons for adding new items.\n     */\n    add: 'Dodaj',\n    /**\n     * Shown when a button to remove items is visible.\n     */\n    remove: 'Odstrani',\n    /**\n     * Shown when there are multiple items to remove at the same time.\n     */\n    removeAll: 'Odstrani vse',\n    /**\n     * Shown when all fields are not filled out correctly.\n     */\n    incomplete: 'Nekatera polja niso pravilno izpolnjena.',\n    /**\n     * Shown in a button inside a form to submit the form.\n     */\n    submit: 'Pošlji',\n    /**\n     * Shown when no files are selected.\n     */\n    noFiles: 'Nobena datoteka ni izbrana',\n    /**\n     * Shown on buttons that move fields up in a list.\n     */\n    moveUp: 'Premakni se navzgor',\n    /**\n     * Shown on buttons that move fields down in a list.\n     */\n    moveDown: 'Premakni se navzdol',\n    /**\n     * Shown when something is actively loading.\n     */\n    isLoading: 'Nalaganje...',\n    /**\n     * Shown when there is more to load.\n     */\n    loadMore: 'Naloži več',\n    /**\n     * Shown on buttons that navigate state forward\n     */\n    next: 'Naslednji',\n    /**\n     * Shown on buttons that navigate state backward\n     */\n    prev: 'Prejšnji',\n    /**\n     * Shown when adding all values.\n     */\n    addAllValues: 'Dodajte vse vrednosti',\n    /**\n     * Shown when adding selected values.\n     */\n    addSelectedValues: 'Dodajanje izbranih vrednosti',\n    /**\n     * Shown when removing all values.\n     */\n    removeAllValues: 'Odstranite vse vrednosti',\n    /**\n     * Shown when removing selected values.\n     */\n    removeSelectedValues: 'Odstrani izbrane vrednosti',\n    /**\n     * Shown when there is a date to choose.\n     */\n    chooseDate: 'Izberite datum',\n    /**\n     * Shown when there is a date to change.\n     */\n    changeDate: 'Spremeni datum',\n    /**\n     * Shown when the date is invalid.\n     */\n    invalidDate: 'Izbrani datum je neveljaven.',\n};\n/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */\nconst validation$9 = {\n    /**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */\n    accepted({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */\n        return `Prosimo popravite ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */\n    date_after({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */\n            return `${sentence(name)} mora biti po ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} mora biti v prihodnosti.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */\n    alpha({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */\n        return `${sentence(name)} lahko vsebuje samo znake abecede.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */\n    alphanumeric({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */\n        return `${sentence(name)} lahko vsebuje samo črke in številke.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */\n    alpha_spaces({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */\n        return `${sentence(name)} lahko vsebuje samo črke in presledke.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */\n    date_before({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */\n            return `${sentence(name)} mora biti pred ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} mora biti v preteklosti.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */\n    between({ name, args }) {\n        if (isNaN(args[0]) || isNaN(args[1])) {\n            /* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */\n            return `To polje je narobe nastavljeno in ne mora biti izpolnjeno.`;\n            /* </i18n> */\n        }\n        const [a, b] = order(args[0], args[1]);\n        /* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */\n        return `${sentence(name)} mora biti med ${a} in ${b}.`;\n        /* </i18n> */\n    },\n    /**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */\n    confirm({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */\n        return `${sentence(name)} se ne ujema.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */\n    date_format({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */\n            return `${sentence(name)} ni pravilen datum, prosimo uporabite format ${args[0]}`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */\n        return 'To polje je narobe nastavljeno in ne mora biti izpolnjeno.';\n        /* </i18n> */\n    },\n    /**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */\n    date_between({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */\n        return `${sentence(name)} mora biti med ${date(args[0])} in ${date(args[1])}`;\n        /* </i18n> */\n    },\n    /**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */\n    email: 'Vnesite veljaven e-poštni naslov.',\n    /**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */\n    ends_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */\n        return `${sentence(name)} se mora kočati z ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */\n    is({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */\n        return `${sentence(name)} ni dovoljena vrednost.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */\n    length({ name, args: [first = 0, second = Infinity] }) {\n        const min = Number(first) <= Number(second) ? first : second;\n        const max = Number(second) >= Number(first) ? second : first;\n        if (min == 1 && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */\n            return `${sentence(name)} mora vsebovati vsaj en znak.`;\n            /* </i18n> */\n        }\n        if (min == 0 && max) {\n            /* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */\n            return `${sentence(name)} mora vsebovati največ ${max} znakov.`;\n            /* </i18n> */\n        }\n        if (min === max) {\n            /* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */\n            return `${sentence(name)} mora biti dolg ${max} znakov.`;\n            /* </i18n> */\n        }\n        if (min && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */\n            return `${sentence(name)} mora vsebovati vsaj ${min} znakov.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */\n        return `${sentence(name)} mora vsebovati med ${min} in ${max} znakov.`;\n        /* </i18n> */\n    },\n    /**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */\n    matches({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */\n        return `${sentence(name)} ni dovoljena vrednost.`;\n        /* </i18n> */\n    },\n    /**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */\n    max({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */\n            return `Največ je ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */\n        return `${sentence(name)} je lahko največ ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */\n    mime({ name, args }) {\n        if (!args[0]) {\n            /* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */\n            return 'Nobena vrsta datoteke ni dovoljena.';\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */\n        return `${sentence(name)} mora biti tipa: ${args[0]}`;\n        /* </i18n> */\n    },\n    /**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */\n    min({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */\n            return `Najmanj ${args[0]} ${name} je dovoljenih.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */\n        return `${sentence(name)} mora biti vsaj ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */\n    not({ name, node: { value } }) {\n        /* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */\n        return `“${value}” ni dovoljen(a/o) ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */\n    number({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a number.\"> */\n        return `${sentence(name)} mora biti številka.`;\n        /* </i18n> */\n    },\n    /**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */\n    required({ name }) {\n        /* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */\n        return `${sentence(name)} je zahtevan(o/a).`;\n        /* </i18n> */\n    },\n    /**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */\n    starts_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */\n        return `${sentence(name)} se mora začeti z ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */\n    url() {\n        /* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */\n        return `Vnesite veljaven URL.`;\n        /* </i18n> */\n    },\n};\n\nvar sl = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ui: ui$9,\n    validation: validation$9\n});\n\n/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */\n/**\n * Standard language for interface features.\n * @public\n */\nconst ui$8 = {\n    /**\n     * Shown on a button for adding additional items.\n     */\n    add: 'Dodaj',\n    /**\n     * Shown when a button to remove items is visible.\n     */\n    remove: 'Ukloni',\n    /**\n     * Shown when there are multiple items to remove at the same time.\n     */\n    removeAll: 'Ukloni sve',\n    /**\n     * Shown when all fields are not filled out correctly.\n     */\n    incomplete: 'Pojedina polja nisu ispravno ispunjena.',\n    /**\n     * Shown in a button inside a form to submit the form.\n     */\n    submit: 'Pošalji',\n    /**\n     * Shown when no files are selected.\n     */\n    noFiles: 'Fajl nije odabran',\n    /**\n     * Shown on buttons that move fields up in a list.\n     */\n    moveUp: 'Pomerite se gore',\n    /**\n     * Shown on buttons that move fields down in a list.\n     */\n    moveDown: 'Pomeri se dole',\n    /**\n     * Shown when something is actively loading.\n     */\n    isLoading: 'Učitavanje...',\n    /**\n     * Shown when there is more to load.\n     */\n    loadMore: 'Učitaj više',\n    /**\n     * Shown on buttons that navigate state forward\n     */\n    next: 'Sledeća',\n    /**\n     * Shown on buttons that navigate state backward\n     */\n    prev: 'Prethodna',\n    /**\n     * Shown when adding all values.\n     */\n    addAllValues: 'Dodajte sve vrednosti',\n    /**\n     * Shown when adding selected values.\n     */\n    addSelectedValues: 'Dodajte izabrane vrednosti',\n    /**\n     * Shown when removing all values.\n     */\n    removeAllValues: 'Uklonite sve vrednosti',\n    /**\n     * Shown when removing selected values.\n     */\n    removeSelectedValues: 'Uklonite izabrane vrednosti',\n    /**\n     * Shown when there is a date to choose.\n     */\n    chooseDate: 'Izaberite datum',\n    /**\n     * Shown when there is a date to change.\n     */\n    changeDate: 'Promenite datum',\n    /**\n     * Shown when the date is invalid.\n     */\n    invalidDate: 'Izabrani datum je nevažeći.',\n};\n/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */\nconst validation$8 = {\n    /**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */\n    accepted({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */\n        return `Molimo prihvatite ${name}`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */\n    date_after({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */\n            return `${sentence(name)} mora biti posle ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} mora biti u budućnosti.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */\n    alpha({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */\n        return `${sentence(name)} može da sadrži samo abecedne znakove.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */\n    alphanumeric({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */\n        return `${sentence(name)} može da sadrži samo slova i brojeve.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */\n    alpha_spaces({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */\n        return `${sentence(name)} može da sadrži samo slova i razmake.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */\n    date_before({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */\n            return `${sentence(name)} mora biti pre ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} mora biti u prošlosti.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */\n    between({ name, args }) {\n        if (isNaN(args[0]) || isNaN(args[1])) {\n            /* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */\n            return `Ovo polje je pogrešno konfigurisano i ne može se poslati.`;\n            /* </i18n> */\n        }\n        const [a, b] = order(args[0], args[1]);\n        /* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */\n        return `${sentence(name)} mora biti između ${a} i ${b}.`;\n        /* </i18n> */\n    },\n    /**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */\n    confirm({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */\n        return `${sentence(name)} se ne podudara.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */\n    date_format({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */\n            return `${sentence(name)} nije važeći datum, molimo Vas koristite format ${args[0]}`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */\n        return 'Ovo polje je pogrešno konfigurisano i ne može se poslati';\n        /* </i18n> */\n    },\n    /**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */\n    date_between({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */\n        return `${sentence(name)} mora biti između ${date(args[0])} i ${date(args[1])}`;\n        /* </i18n> */\n    },\n    /**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */\n    email: 'Unesite ispravnu e-mail adresu.',\n    /**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */\n    ends_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */\n        return `${sentence(name)} se ne završava sa ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */\n    is({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */\n        return `${sentence(name)} nije dozvoljena vrednost`;\n        /* </i18n> */\n    },\n    /**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */\n    length({ name, args: [first = 0, second = Infinity] }) {\n        const min = Number(first) <= Number(second) ? first : second;\n        const max = Number(second) >= Number(first) ? second : first;\n        if (min == 1 && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */\n            return `${sentence(name)} mora biti najmanje jedan karakter.`;\n            /* </i18n> */\n        }\n        if (min == 0 && max) {\n            /* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */\n            return `${sentence(name)} mora biti manji ili jednaki od ${max} karaktera.`;\n            /* </i18n> */\n        }\n        if (min === max) {\n            /* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */\n            return `${sentence(name)} treba da bude ${max} znakova dugačak.`;\n            /* </i18n> */\n        }\n        if (min && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */\n            return `${sentence(name)} mora biti veći ili jednaki od ${min} karaktera.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */\n        return `${sentence(name)} mora biti između ${min} i ${max} karaktera.`;\n        /* </i18n> */\n    },\n    /**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */\n    matches({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */\n        return `${sentence(name)} nije dozvoljena vrednost.`;\n        /* </i18n> */\n    },\n    /**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */\n    max({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */\n            return `Ne može imati više od ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */\n        return `${sentence(name)} mora biti manji ili jednaki od ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */\n    mime({ name, args }) {\n        if (!args[0]) {\n            /* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */\n            return 'Nisu dozvoljeni formati datoteka.';\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */\n        return `${sentence(name)} mora biti tipa: ${args[0]}`;\n        /* </i18n> */\n    },\n    /**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */\n    min({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */\n            return `Ne može imati manje od ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */\n        return `${sentence(name)} mora da ima najmanje ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */\n    not({ name, node: { value } }) {\n        /* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */\n        return `“${value}” nije dozvoljeno ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */\n    number({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a number.\"> */\n        return `${sentence(name)} mora biti broj.`;\n        /* </i18n> */\n    },\n    /**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */\n    required({ name }) {\n        /* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */\n        return `${sentence(name)} je obavezno polje.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */\n    starts_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */\n        return `${sentence(name)} ne počinje sa ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */\n    url() {\n        /* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */\n        return `Unesite važeću URL adresu.`;\n        /* </i18n> */\n    },\n};\n\nvar sr = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ui: ui$8,\n    validation: validation$8\n});\n\n/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */\n/**\n * Standard language for interface features.\n * @public\n */\nconst ui$7 = {\n    /**\n     * Shown when a button to remove items is visible.\n     */\n    remove: 'Ta bort',\n    /**\n     * Shown when there are multiple items to remove at the same time.\n     */\n    removeAll: 'Ta bort alla',\n    /**\n     * Shown when all fields are not filled out correctly.\n     */\n    incomplete: 'Tyvärr är inte alla fält korrekt ifyllda',\n    /**\n     * Shown in a button inside a form to submit the form.\n     */\n    submit: 'Skicka',\n    /**\n     * Shown when no files are selected.\n     */\n    noFiles: 'Ingen fil vald',\n    /**\n     * Shown on buttons that move fields up in a list.\n     */\n    moveUp: 'Flytta upp',\n    /**\n     * Shown on buttons that move fields down in a list.\n     */\n    moveDown: 'Flytta ner',\n    /**\n     * Shown when something is actively loading.\n     */\n    isLoading: 'Laddar...',\n    /**\n     * Shown when there is more to load.\n     */\n    loadMore: 'Ladda mer',\n    /**\n     * Shown on buttons that navigate state forward\n     */\n    next: 'Nästa',\n    /**\n     * Shown on buttons that navigate state backward\n     */\n    prev: 'Föregående',\n    /**\n     * Shown when adding all values.\n     */\n    addAllValues: 'Lägg till alla värden',\n    /**\n     * Shown when adding selected values.\n     */\n    addSelectedValues: 'Lägg till valda värden',\n    /**\n     * Shown when removing all values.\n     */\n    removeAllValues: 'Ta bort alla värden',\n    /**\n     * Shown when removing selected values.\n     */\n    removeSelectedValues: 'Ta bort valda värden',\n    /**\n     * Shown when there is a date to choose.\n     */\n    chooseDate: 'Välj datum',\n    /**\n     * Shown when there is a date to change.\n     */\n    changeDate: 'Ändra datum',\n    /**\n     * Shown when the date is invalid.\n     */\n    invalidDate: 'Det valda datumet är ogiltigt.',\n};\n/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */\nconst validation$7 = {\n    /**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */\n    accepted({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */\n        return `Var god acceptera ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */\n    date_after({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */\n            return `${sentence(name)} måste vara efter ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} måste vara framåt i tiden.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */\n    alpha({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */\n        return `${sentence(name)} kan enbart innehålla bokstäver i alfabetet.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */\n    alphanumeric({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */\n        return `${sentence(name)} kan bara innehålla bokstäver och siffror.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */\n    alpha_spaces({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */\n        return `${sentence(name)} kan bara innehålla bokstäver och blanksteg.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */\n    date_before({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */\n            return `${sentence(name)} måste vara före ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} måste vara bakåt i tiden.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */\n    between({ name, args }) {\n        if (isNaN(args[0]) || isNaN(args[1])) {\n            /* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */\n            return `Det här fältet ställdes inte in korrekt och kan inte användas.`;\n            /* </i18n> */\n        }\n        const [a, b] = order(args[0], args[1]);\n        /* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */\n        return `${sentence(name)} måste vara mellan ${a} och ${b}.`;\n        /* </i18n> */\n    },\n    /**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */\n    confirm({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */\n        return `${sentence(name)} matchar inte.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */\n    date_format({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */\n            return `${sentence(name)} är inte ett giltigt datum, var god använd formatet ${args[0]}`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */\n        return 'Det här fältet ställdes inte in korrekt och kan inte användas';\n        /* </i18n> */\n    },\n    /**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */\n    date_between({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */\n        return `${sentence(name)} måste vara mellan ${date(args[0])} och ${date(args[1])}`;\n        /* </i18n> */\n    },\n    /**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */\n    email: 'Var god fyll i en giltig e-postadress.',\n    /**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */\n    ends_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */\n        return `${sentence(name)} slutar inte med ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */\n    is({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */\n        return `${sentence(name)} är inte ett godkänt värde.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */\n    length({ name, args: [first = 0, second = Infinity] }) {\n        const min = Number(first) <= Number(second) ? first : second;\n        const max = Number(second) >= Number(first) ? second : first;\n        if (min == 1 && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */\n            return `${sentence(name)} måste ha minst ett tecken.`;\n            /* </i18n> */\n        }\n        if (min == 0 && max) {\n            /* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */\n            return `${sentence(name)} måste vara ${max} tecken eller färre.`;\n            /* </i18n> */\n        }\n        if (min === max) {\n            /* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */\n            return `${sentence(name)} bör vara ${max} tecken långa.`;\n            /* </i18n> */\n        }\n        if (min && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */\n            return `${sentence(name)} måste vara ${min} tecken eller fler.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */\n        return `${sentence(name)} måste vara mellan ${min} och ${max} tecken.`;\n        /* </i18n> */\n    },\n    /**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */\n    matches({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */\n        return `${sentence(name)} är inte ett godkänt värde.`;\n        /* </i18n> */\n    },\n    /**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */\n    max({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */\n            return `Kan inte ha mer än ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */\n        return `${sentence(name)} måste vara ${args[0]} eller mindre.`;\n        /* </i18n> */\n    },\n    /**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */\n    mime({ name, args }) {\n        if (!args[0]) {\n            /* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */\n            return 'Inga filtyper tillåtna.';\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */\n        return `${sentence(name)} måste vara av filtypen: ${args[0]}`;\n        /* </i18n> */\n    },\n    /**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */\n    min({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */\n            return `Kan inte ha mindre än ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */\n        return `${sentence(name)} måste vara minst ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */\n    not({ name, node: { value } }) {\n        /* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */\n        return `“${value}” är inte ett godkänt ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */\n    number({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a number.\"> */\n        return `${sentence(name)} måste vara en siffra.`;\n        /* </i18n> */\n    },\n    /**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */\n    required({ name }) {\n        /* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */\n        return `${sentence(name)} är obligatoriskt.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */\n    starts_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */\n        return `${sentence(name)} börjar inte med ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */\n    url() {\n        /* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */\n        return `Ange en giltig URL.`;\n        /* </i18n> */\n    },\n};\n\nvar sv = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ui: ui$7,\n    validation: validation$7\n});\n\n/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */\n/**\n * Standard language for interface features.\n * @public\n */\nconst ui$6 = {\n    /**\n     * Shown on a button for adding additional items.\n     */\n    add: 'Илова кардан',\n    /**\n     * Shown when a button to remove items is visible.\n     */\n    remove: 'Хориҷ кардан',\n    /**\n     * Shown when there are multiple items to remove at the same time.\n     */\n    removeAll: 'Ҳамаро хориҷ кунед',\n    /**\n     * Shown when all fields are not filled out correctly.\n     */\n    incomplete: 'Бубахшед, на ҳама майдонҳо дуруст пур карда шудаанд.',\n    /**\n     * Shown in a button inside a form to submit the form.\n     */\n    submit: 'Пешниҳод кунед',\n    /**\n     * Shown when no files are selected.\n     */\n    noFiles: 'Ягон файл интихоб нашудааст',\n    /**\n     * Shown on buttons that move fields up in a list.\n     */\n    moveUp: 'Ба боло ҳаракат кунед',\n    /**\n     * Shown on buttons that move fields down in a list.\n     */\n    moveDown: 'Ба поён ҳаракат кунед',\n    /**\n     * Shown when something is actively loading.\n     */\n    isLoading: 'Дар ҳоли боргузорӣ',\n    /**\n     * Shown when there is more to load.\n     */\n    loadMore: 'Бештар бор кунед',\n    /**\n     * Show on buttons that navigate state forward\n     */\n    next: 'Баъдӣ',\n    /**\n     * Show on buttons that navigate state backward\n     */\n    prev: 'Гузашта',\n    /**\n     * Shown when adding all values.\n     */\n    addAllValues: 'Ҳама арзишҳоро илова кунед',\n    /**\n     * Shown when adding selected values.\n     */\n    addSelectedValues: 'Илова кардани арзишҳои интихобшуда',\n    /**\n     * Shown when removing all values.\n     */\n    removeAllValues: 'Ҳама арзишҳоро хориҷ кунед',\n    /**\n     * Shown when removing selected values.\n     */\n    removeSelectedValues: 'Арзишҳои интихобшударо хориҷ кунед',\n    /**\n     * Shown when there is a date to choose.\n     */\n    chooseDate: 'Сана интихоб кунед',\n    /**\n     * Shown when there is a date to change.\n     */\n    changeDate: 'Тағйир додани сана',\n    /**\n     * Shown when the date is invalid.\n     */\n    invalidDate: 'Санаи интихобшуда нодуруст аст.',\n};\n/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */\nconst validation$6 = {\n    /**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */\n    accepted({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */\n        return `Лутфан ${name}-ро қабул кунед`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */\n    date_after({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */\n            return `${sentence(name)} бояд пас аз ${date(args[0])} бошад.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} бояд дар оянда бошад.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */\n    alpha({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */\n        return `${sentence(name)} метавонад танҳо аломатҳои алифборо дар бар гирад.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */\n    alphanumeric({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */\n        return `${sentence(name)} метавонад танҳо ҳарфҳо ва рақамҳоро дар бар гирад.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */\n    alpha_spaces({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */\n        return `${sentence(name)} метавонад танҳо ҳарфҳо ва фосилаҳоро дар бар гирад.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */\n    date_before({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */\n            return `${sentence(name)} бояд пеш аз ${date(args[0])} бошад.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} бояд дар гузашта бошад.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */\n    between({ name, args }) {\n        if (isNaN(args[0]) || isNaN(args[1])) {\n            /* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */\n            return `Ин майдон нодуруст танзим шудааст ва онро пешниҳод кардан ғайриимкон аст.`;\n            /* </i18n> */\n        }\n        const [a, b] = order(args[0], args[1]);\n        /* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */\n        return `${sentence(name)} бояд дар байни ${a} ва ${b} бошад.`;\n        /* </i18n> */\n    },\n    /**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */\n    confirm({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */\n        return `${sentence(name)} мувофиқат намекунад.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */\n    date_format({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */\n            return `${sentence(name)} санаи дуруст нест, лутфан формати ${args[0]}-ро истифода баред`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */\n        return 'Ин майдон нодуруст танзим шудааст ва онро пешниҳод кардан ғайриимкон аст';\n        /* </i18n> */\n    },\n    /**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */\n    date_between({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */\n        return `${sentence(name)} бояд дар байни ${date(args[0])} ва ${date(args[1])} бошад`;\n        /* </i18n> */\n    },\n    /**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */\n    email: 'Лутфан нишонаи имейли амалкунандаро ворид намоед.',\n    /**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */\n    ends_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */\n        return `${sentence(name)} бо ${list(args)} ба охир намерасад.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */\n    is({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */\n        return `${sentence(name)} арзиши иҷозатдодашуда нест.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */\n    length({ name, args: [first = 0, second = Infinity] }) {\n        const min = Number(first) <= Number(second) ? first : second;\n        const max = Number(second) >= Number(first) ? second : first;\n        if (min == 1 && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */\n            return `${sentence(name)} бояд ҳадди аққал як аломат бошад.`;\n            /* </i18n> */\n        }\n        if (min == 0 && max) {\n            /* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */\n            return `${sentence(name)} бояд аз ${max} аломат камтар ё баробар бошад.`;\n            /* </i18n> */\n        }\n        if (min === max) {\n            /* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */\n            return `${sentence(name)} бояд ${max} аломат бошад.`;\n            /* </i18n> */\n        }\n        if (min && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */\n            return `${sentence(name)} бояд аз ${min} аломат зиёд ё баробар бошад.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */\n        return `${sentence(name)} бояд дар байни ${min} ва ${max} аломат бошад.`;\n        /* </i18n> */\n    },\n    /**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */\n    matches({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */\n        return `${sentence(name)} арзиши иҷозатдодашуда нест.`;\n        /* </i18n> */\n    },\n    /**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */\n    max({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */\n            return `Зиёда аз ${args[0]} ${name} дошта наметавонад.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */\n        return `${sentence(name)} бояд аз ${args[0]} камтар ё баробар бошад.`;\n        /* </i18n> */\n    },\n    /**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */\n    mime({ name, args }) {\n        if (!args[0]) {\n            /* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */\n            return 'Ягон формати файл иҷозат дода намешавад.';\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */\n        return `${sentence(name)} бояд чунин намуд бошад: ${args[0]}`;\n        /* </i18n> */\n    },\n    /**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */\n    min({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */\n            return `Камтар аз ${args[0]} ${name} дошта наметавонад.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */\n        return `${sentence(name)} бояд ҳадди аққал ${args[0]} бошад.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */\n    not({ name, node: { value } }) {\n        /* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */\n        return `\"${value}\" ${name} иҷозат дода намешавад.`;\n        /* </i18n> */\n    },\n    /**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */\n    number({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a number.\"> */\n        return `${sentence(name)} бояд рақам бошад.`;\n        /* </i18n> */\n    },\n    /**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */\n    required({ name }) {\n        /* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */\n        return `${sentence(name)} лозим аст.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */\n    starts_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */\n        return `${sentence(name)} бо ${list(args)} оғоз намешавад.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */\n    url() {\n        /* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */\n        return `Лутфан URL-и дурустро дохил кунед.`;\n        /* </i18n> */\n    },\n};\n\nvar tg = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ui: ui$6,\n    validation: validation$6\n});\n\n/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */\n/**\n * Standard language for interface features.\n * @public\n */\nconst ui$5 = {\n    /**\n     * Shown on buttons for adding new items.\n     */\n    add: 'เพิ่ม',\n    /**\n     * Shown when a button to remove items is visible.\n     */\n    remove: 'เอาออก',\n    /**\n     * Shown when there are multiple items to remove at the same time.\n     */\n    removeAll: 'เอาออกทั้งหมด',\n    /**\n     * Shown when all fields are not filled out correctly.\n     */\n    incomplete: 'ขออภัย ข้อมูลบางช่องที่กรอกไม่ถูกต้อง',\n    /**\n     * Shown in a button inside a form to submit the form.\n     */\n    submit: 'ส่ง',\n    /**\n     * Shown when no files are selected.\n     */\n    noFiles: 'ยังไม่ได้เลือกไฟล์',\n    /**\n     * Shown on buttons that move fields up in a list.\n     */\n    moveUp: 'เลื่อนขึ้น',\n    /**\n     * Shown on buttons that move fields down in a list.\n     */\n    moveDown: 'เลื่อนลง',\n    /**\n     * Shown when something is actively loading.\n     */\n    isLoading: 'กำลังโหลด...',\n    /**\n     * Shown when there is more to load.\n     */\n    loadMore: 'โหลดเพิ่มเติม',\n    /**\n     * Shown on buttons that navigate state forward\n     */\n    next: 'ถัดไป',\n    /**\n     * Shown on buttons that navigate state backward\n     */\n    prev: 'ก่อนหน้า',\n    /**\n     * Shown when adding all values.\n     */\n    addAllValues: 'เพิ่มค่าทั้งหมด',\n    /**\n     * Shown when adding selected values.\n     */\n    addSelectedValues: 'เพิ่มค่าที่เลือก',\n    /**\n     * Shown when removing all values.\n     */\n    removeAllValues: 'ลบค่าทั้งหมด',\n    /**\n     * Shown when removing selected values.\n     */\n    removeSelectedValues: 'ลบค่าที่เลือก',\n    /**\n     * Shown when there is a date to choose.\n     */\n    chooseDate: 'เลือกวันที่',\n    /**\n     * Shown when there is a date to change.\n     */\n    changeDate: 'เปลี่ยนวันที่',\n    /**\n     * Shown when the date is invalid.\n     */\n    invalidDate: 'วันที่ที่เลือกไม่ถูกต้อง',\n};\n/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */\nconst validation$5 = {\n    /**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */\n    accepted({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */\n        return `กรุณายอมรับ ${name}`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */\n    date_after({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */\n            return `${sentence(name)} จะต้องเป็นวันที่หลังจาก ${date(args[0])}`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} จะต้องเป็นวันที่ที่ยังไม่มาถึง`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */\n    alpha({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */\n        return `${sentence(name)} สามารถเป็นได้แค่ตัวอักษรเท่านั้น`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */\n    alphanumeric({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */\n        return `${sentence(name)} สามารถเป็นได้แค่ตัวอักษรและตัวเลขเท่านั้น`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */\n    alpha_spaces({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */\n        return `${sentence(name)} สามารถเป็นได้แค่ตัวอักษรและเว้นวรรคเท่านั้น`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */\n    date_before({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */\n            return `${sentence(name)} จะต้องเป็นวันที่ที่มาก่อน ${date(args[0])}`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} จะต้องเป็นวันที่ที่ผ่านมาแล้ว`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */\n    between({ name, args }) {\n        if (isNaN(args[0]) || isNaN(args[1])) {\n            /* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */\n            return `ช่องนี้ถูกตั้งค่าอย่างไม่ถูกต้อง และจะไม่สามารถส่งข้อมูลได้`;\n            /* </i18n> */\n        }\n        const [a, b] = order(args[0], args[1]);\n        /* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */\n        return `${sentence(name)} จะต้องเป็นค่าระหว่าง ${a} และ ${b}`;\n        /* </i18n> */\n    },\n    /**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */\n    confirm({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */\n        return `${sentence(name)} ไม่ตรงกัน`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */\n    date_format({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */\n            return `${sentence(name)} ไม่อยู่ในรูปแบบวันที่ที่ถูกต้อง กรุณากรอกตามรูปแบบ ${args[0]}`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */\n        return 'ช่องนี้ถูกตั้งค่าอย่างไม่ถูกต้อง และจะไม่สามารถส่งข้อมูลได้';\n        /* </i18n> */\n    },\n    /**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */\n    date_between({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */\n        return `${sentence(name)} จะต้องเป็นวันที่ระหว่าง ${date(args[0])} และ ${date(args[1])}`;\n        /* </i18n> */\n    },\n    /**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */\n    email: 'กรุณากรอกที่อยู่อีเมลทีถูกต้อง',\n    /**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */\n    ends_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */\n        return `${sentence(name)} จะต้องลงท้ายด้วย ${list(args)}`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */\n    is({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */\n        return `${sentence(name)} ไม่ใช่ค่าที่อนุญาตให้กรอก`;\n        /* </i18n> */\n    },\n    /**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */\n    length({ name, args: [first = 0, second = Infinity] }) {\n        const min = Number(first) <= Number(second) ? first : second;\n        const max = Number(second) >= Number(first) ? second : first;\n        if (min == 1 && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */\n            return `${sentence(name)} จะต้องมีความยาวอย่างน้อยหนึ่งตัวอักษร`;\n            /* </i18n> */\n        }\n        if (min == 0 && max) {\n            /* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */\n            return `${sentence(name)} จะต้องมีความยาวไม่เกิน ${max} ตัวอักษร`;\n            /* </i18n> */\n        }\n        if (min === max) {\n            /* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */\n            return `${sentence(name)} ควรจะเป็น ${max} ตัวอักษรยาว`;\n            /* </i18n> */\n        }\n        if (min && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */\n            return `${sentence(name)} จะต้องมีความยาว ${min} ตัวอักษรขึ้นไป`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */\n        return `${sentence(name)} จะต้องมีความยาวระหว่าง ${min} และ ${max} ตัวอักษร`;\n        /* </i18n> */\n    },\n    /**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */\n    matches({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */\n        return `${sentence(name)} ไม่ใช่ค่าที่อนุญาตให้กรอก`;\n        /* </i18n> */\n    },\n    /**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */\n    max({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */\n            return `ไม่สามารถเลือกมากกว่า ${args[0]} ${name} ได้`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */\n        return `${sentence(name)} จะต้องมีค่าไม่เกิน ${args[0]}`;\n        /* </i18n> */\n    },\n    /**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */\n    mime({ name, args }) {\n        if (!args[0]) {\n            /* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */\n            return 'ไม่มีประเภทของไฟล์ที่อนุญาต';\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */\n        return `${sentence(name)} จะต้องเป็นไฟล์ประเภท ${args[0]} เท่านั้น`;\n        /* </i18n> */\n    },\n    /**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */\n    min({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */\n            return `ไม่สามารถเลือกน้อยกว่า ${args[0]} ${name} ได้`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */\n        return `${sentence(name)} จะต้องมีค่าอย่างน้อย ${args[0]}`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */\n    not({ name, node: { value } }) {\n        /* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */\n        return `“${value}” ไม่ใช่ค่า ${name} ที่อนุญาตให้กรอก`;\n        /* </i18n> */\n    },\n    /**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */\n    number({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a number.\"> */\n        return `${sentence(name)} จะต้องเป็นตัวเลขเท่านั้น`;\n        /* </i18n> */\n    },\n    /**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */\n    required({ name }) {\n        /* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */\n        return `กรุณากรอก ${sentence(name)}`;\n        /* </i18n> */\n    },\n    /**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */\n    starts_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */\n        return `${sentence(name)} จะต้องเริ่มต้นด้วย ${list(args)}`;\n        /* </i18n> */\n    },\n    /**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */\n    url() {\n        /* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */\n        return `กรุณาระบุที่อยู่ลิงก์ให้ถูกต้อง`;\n        /* </i18n> */\n    },\n};\n\nvar th = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ui: ui$5,\n    validation: validation$5\n});\n\n/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */\n/**\n * Standard language for interface features.\n * @public\n */\nconst ui$4 = {\n    /**\n     * Shown on buttons for adding new items.\n     */\n    add: 'Ekle',\n    /**\n     * Shown when a button to remove items is visible.\n     */\n    remove: 'Kaldır',\n    /**\n     * Shown when there are multiple items to remove at the same time.\n     */\n    removeAll: 'Hepsini kaldır',\n    /**\n     * Shown when all fields are not filled out correctly.\n     */\n    incomplete: 'Maalesef, tüm alanlar doğru doldurulmadı.',\n    /**\n     * Shown in a button inside a form to submit the form.\n     */\n    submit: 'Gönder',\n    /**\n     * Shown when no files are selected.\n     */\n    noFiles: 'Dosya yok',\n    /**\n     * Shown on buttons that move fields up in a list.\n     */\n    moveUp: 'Yukarı Taşı',\n    /**\n     * Shown on buttons that move fields down in a list.\n     */\n    moveDown: 'Aşağı taşı',\n    /**\n     * Shown when something is actively loading.\n     */\n    isLoading: 'Yükleniyor...',\n    /**\n     * Shown when there is more to load.\n     */\n    loadMore: 'Daha fazla yükle',\n    /**\n     * Shown on buttons that navigate state forward\n     */\n    next: 'Sonraki',\n    /**\n     * Shown on buttons that navigate state backward\n     */\n    prev: 'Önceki',\n    /**\n     * Shown when adding all values.\n     */\n    addAllValues: 'Tüm değerleri ekle',\n    /**\n     * Shown when adding selected values.\n     */\n    addSelectedValues: 'Seçili değerleri ekle',\n    /**\n     * Shown when removing all values.\n     */\n    removeAllValues: 'Tüm değerleri kaldır',\n    /**\n     * Shown when removing selected values.\n     */\n    removeSelectedValues: 'Seçili değerleri kaldır',\n    /**\n     * Shown when there is a date to choose.\n     */\n    chooseDate: 'Tarih seçin',\n    /**\n     * Shown when there is a date to change.\n     */\n    changeDate: 'Tarihi değiştir',\n    /**\n     * Shown when the date is invalid.\n     */\n    invalidDate: 'Seçilen tarih geçersiz.',\n};\n/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */\nconst validation$4 = {\n    /**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */\n    accepted({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */\n        return `Lütfen ${name}'yi kabul edin.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */\n    date_after({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */\n            return `${sentence(name)} ${date(args[0])}'den sonra olmalıdır.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} gelecekte bir zaman olmalıdır.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */\n    alpha({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */\n        return `${sentence(name)} sadece alfabetik karakterler içerebilir.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */\n    alphanumeric({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */\n        return `${sentence(name)} sadece alfabetik karakterler ve sayı içerebilir.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */\n    alpha_spaces({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */\n        return `${sentence(name)} yalnızca harf ve boşluk içerebilir.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */\n    date_before({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */\n            return `${sentence(name)} ${date(args[0])} tarihinden önce olmalı.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} geçmişte olmalı.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */\n    between({ name, args }) {\n        if (isNaN(args[0]) || isNaN(args[1])) {\n            /* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */\n            return `Alan yanlış yapılandırılmış ve gönderilemez.`;\n            /* </i18n> */\n        }\n        const [a, b] = order(args[0], args[1]);\n        /* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */\n        return `${sentence(name)} ${a} ve ${b} aralığında olmalı.`;\n        /* </i18n> */\n    },\n    /**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */\n    confirm({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */\n        return `${sentence(name)} eşleşmiyor.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */\n    date_format({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */\n            return `${sentence(name)} geçerli bir tarih değil, lütfen ${args[0]} biçimini kullanın.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */\n        return 'Alan yanlış yapılandırılmış ve gönderilemez.';\n        /* </i18n> */\n    },\n    /**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */\n    date_between({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */\n        return `${sentence(name)}, ${date(args[0])} ve ${date(args[1])} aralığında olmalı.`;\n        /* </i18n> */\n    },\n    /**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */\n    email: 'Lütfen geçerli bir e-mail adresi girin.',\n    /**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */\n    ends_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */\n        return `${sentence(name)} ${list(args)} ile bitmiyor.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */\n    is({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */\n        return `${sentence(name)} izin verilen bir değer değil.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */\n    length({ name, args: [first = 0, second = Infinity] }) {\n        const min = Number(first) <= Number(second) ? first : second;\n        const max = Number(second) >= Number(first) ? second : first;\n        if (min == 1 && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */\n            return `${sentence(name)} en azından bir karakter uzunluğunda olmalı.`;\n            /* </i18n> */\n        }\n        if (min == 0 && max) {\n            /* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */\n            return `${sentence(name)} ${max}'e eşit veya daha küçük olmalı.`;\n            /* </i18n> */\n        }\n        if (min === max) {\n            /* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */\n            return `${sentence(name)} ${max} karakter uzunluğunda olmalıdır.`;\n            /* </i18n> */\n        }\n        if (min && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */\n            return `${sentence(name)} ${min}'e eşit veya daha büyük olmalı.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */\n        return `${sentence(name)}, ${min} ve ${max} karakter uzunluğu aralığında olmalı.`;\n        /* </i18n> */\n    },\n    /**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */\n    matches({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */\n        return `${sentence(name)} izin verilen bir değer değil.`;\n        /* </i18n> */\n    },\n    /**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */\n    max({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */\n            return `${name}'in uzunluğu ${args[0]}'dan daha uzun olamaz.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */\n        return `${sentence(name)} en azından ${args[0]} uzunluğunda veya ona eşit olmalı.`;\n        /* </i18n> */\n    },\n    /**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */\n    mime({ name, args }) {\n        if (!args[0]) {\n            /* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */\n            return 'Hiçbir dosya türüne izin verilmez.';\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */\n        return `${sentence(name)} şu tiplerden biri olmalı: ${args[0]}`;\n        /* </i18n> */\n    },\n    /**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */\n    min({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */\n            return `${name}'in uzunluğu ${args[0]}'dan daha kısa olamaz.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */\n        return `${sentence(name)} en azından ${args[0]} uzunluğunda olmalı.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */\n    not({ name, node: { value } }) {\n        /* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */\n        return `“${value}” ${name} olamaz.`;\n        /* </i18n> */\n    },\n    /**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */\n    number({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a number.\"> */\n        return `${sentence(name)} sayı olmalı.`;\n        /* </i18n> */\n    },\n    /**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */\n    required({ name }) {\n        /* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */\n        return `${sentence(name)} gerekli.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */\n    starts_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */\n        return `${sentence(name)} ${list(args)} ile başlamıyor.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */\n    url() {\n        /* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */\n        return `Lütfen geçerli bir URL girin.`;\n        /* </i18n> */\n    },\n};\n\nvar tr = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ui: ui$4,\n    validation: validation$4\n});\n\n/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */\n/**\n * Standard language for interface features.\n * @public\n */\nconst ui$3 = {\n    /**\n     * Shown on a button for adding additional items.\n     */\n    add: 'Додати',\n    /**\n     * Shown when a button to remove items is visible.\n     */\n    remove: 'Видалити',\n    /**\n     * Shown when there are multiple items to remove at the same time.\n     */\n    removeAll: 'Видалити все',\n    /**\n     * Shown when all fields are not filled out correctly.\n     */\n    incomplete: 'Вибачте, не всі поля заповнені правильно.',\n    /**\n     * Shown in a button inside a form to submit the form.\n     */\n    submit: 'Відправити',\n    /**\n     * Shown when no files are selected.\n     */\n    noFiles: 'Файл не вибрано',\n    /**\n     * Shown on buttons that move fields up in a list.\n     */\n    moveUp: 'Рухатися вгору',\n    /**\n     * Shown on buttons that move fields down in a list.\n     */\n    moveDown: 'Пересунути вниз',\n    /**\n     * Shown when something is actively loading.\n     */\n    isLoading: 'Завантаження...',\n    /**\n     * Shown when there is more to load.\n     */\n    loadMore: 'Завантажте більше',\n    /**\n     * Shown on buttons that navigate state forward\n     */\n    next: 'Наступний',\n    /**\n     * Shown on buttons that navigate state backward\n     */\n    prev: 'Попередній',\n    /**\n     * Shown when adding all values.\n     */\n    addAllValues: 'Додати всі значення',\n    /**\n     * Shown when adding selected values.\n     */\n    addSelectedValues: 'Додати вибрані значення',\n    /**\n     * Shown when removing all values.\n     */\n    removeAllValues: 'Вилучити всі значення',\n    /**\n     * Shown when removing selected values.\n     */\n    removeSelectedValues: 'Вилучити вибрані значення',\n    /**\n     * Shown when there is a date to choose.\n     */\n    chooseDate: 'Виберіть дату',\n    /**\n     * Shown when there is a date to change.\n     */\n    changeDate: 'Змінити дату',\n    /**\n     * Shown when the date is invalid.\n     */\n    invalidDate: 'Вибрана дата недійсна.',\n};\n/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */\nconst validation$3 = {\n    /**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */\n    accepted({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */\n        return `Будь ласка, прийміть ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */\n    date_after({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */\n            return `Дата ${sentence(name)} повинна бути пізніше за ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */\n        return `Дата ${sentence(name)} має бути в майбутньому.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */\n    alpha({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */\n        return `Поле ${sentence(name)} може містити лише літери.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */\n    alphanumeric({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */\n        return `Поле ${sentence(name)} може містити лише літери та цифри.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */\n    alpha_spaces({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */\n        return `Поле ${sentence(name)} може містити лише літери та пробіли.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */\n    date_before({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */\n            return `Дата ${sentence(name)} повинна бути раніше за ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */\n        return `Дата ${sentence(name)} повинна бути в минулому.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */\n    between({ name, args }) {\n        if (isNaN(args[0]) || isNaN(args[1])) {\n            /* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */\n            return `Це поле заповнено неправильно і не може бути надіслано.`;\n            /* </i18n> */\n        }\n        const [a, b] = order(args[0], args[1]);\n        /* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */\n        return `Поле ${sentence(name)} повинно бути між ${a} та ${b}.`;\n        /* </i18n> */\n    },\n    /**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */\n    confirm({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */\n        return `Поле ${sentence(name)} не збігається.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */\n    date_format({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */\n            return `Поле ${sentence(name)} має неправильну дату. Будь ласка, використовуйте формат ${args[0]}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */\n        return 'Це поле заповнено неправильно і не може бути надіслано.';\n        /* </i18n> */\n    },\n    /**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */\n    date_between({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */\n        return `Дата ${sentence(name)} повинна бути між ${date(args[0])} та ${date(args[1])}.`;\n        /* </i18n> */\n    },\n    /**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */\n    email: 'Будь ласка, введіть дійсну електронну адресу.',\n    /**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */\n    ends_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */\n        return `Поле ${sentence(name)} не повинно закінчуватися на ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */\n    is({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */\n        return `Поле ${sentence(name)} має неприпустиме значення.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */\n    length({ name, args: [first = 0, second = Infinity] }) {\n        const min = Number(first) <= Number(second) ? first : second;\n        const max = Number(second) >= Number(first) ? second : first;\n        if (min == 1 && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */\n            return `Поле ${sentence(name)} має містити щонайменше один символ.`;\n            /* </i18n> */\n        }\n        if (min == 0 && max) {\n            /* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */\n            return `Довжина поля ${sentence(name)} повинна бути меншою або дорівнювати ${max} символам.`;\n            /* </i18n> */\n        }\n        if (min === max) {\n            /* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */\n            return `${sentence(name)} має бути довжиною ${max} символів.`;\n            /* </i18n> */\n        }\n        if (min && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */\n            return `Довжина поля ${sentence(name)} повинна бути більшою або дорівнювати ${min} символам.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */\n        return `Довжина поля ${sentence(name)} повинна бути між ${min} та ${max} символами.`;\n        /* </i18n> */\n    },\n    /**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */\n    matches({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */\n        return `Поле ${sentence(name)} має неприпустиме значення.`;\n        /* </i18n> */\n    },\n    /**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */\n    max({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */\n            return `Не може бути вибрано більше ніж ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */\n        return `Поле ${sentence(name)} має бути менше або дорівнювати ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */\n    mime({ name, args }) {\n        if (!args[0]) {\n            /* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */\n            return 'Не вказано дозволені типи файлів.';\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */\n        return `Тип файлу в полі ${sentence(name)} має бути: ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */\n    min({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */\n            return `Не може бути вибрано менше ніж ${args[0]} ${name}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */\n        return `Поле ${sentence(name)} має бути не менше ніж ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */\n    not({ name, node: { value } }) {\n        /* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */\n        return `“${value}” не дозволено в полі ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */\n    number({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a number.\"> */\n        return `Поле ${sentence(name)} має бути числом.`;\n        /* </i18n> */\n    },\n    /**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */\n    required({ name }) {\n        /* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */\n        return `Поле ${sentence(name)} є обов'язковим.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */\n    starts_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */\n        return `Поле ${sentence(name)} має починатися з ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */\n    url() {\n        /* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */\n        return `Будь ласка, введіть коректну URL-адресу.`;\n        /* </i18n> */\n    },\n};\n\nvar uk = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ui: ui$3,\n    validation: validation$3\n});\n\n/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */\n/**\n * Standard language for interface features.\n * @public\n */\nconst ui$2 = {\n    /**\n     * Shown on a button for adding additional items.\n     */\n    add: \"Qo'shish\",\n    /**\n     * Shown when a button to remove items is visible.\n     */\n    remove: \"O'chirish\",\n    /**\n     * Shown when there are multiple items to remove at the same time.\n     */\n    removeAll: \"Hammasini o'chirish\",\n    /**\n     * Shown when all fields are not filled out correctly.\n     */\n    incomplete: \"Kechirasiz, barcha maydonlar to'g'ri to'ldirilmagan.\",\n    /**\n     * Shown in a button inside a form to submit the form.\n     */\n    submit: 'Yuborish',\n    /**\n     * Shown when no files are selected.\n     */\n    noFiles: 'Hech qanday fayl tanlanmagan',\n    /**\n     * Shown on buttons that move fields up in a list.\n     */\n    moveUp: 'Yuqoriga ko’taring',\n    /**\n     * Shown on buttons that move fields down in a list.\n     */\n    moveDown: 'Pastga siljish',\n    /**\n     * Shown when something is actively loading.\n     */\n    isLoading: 'Yuklanmoqda...',\n    /**\n     * Shown when there is more to load.\n     */\n    loadMore: 'Ko’proq yuklang',\n    /**\n     * Shown on buttons that navigate state forward\n     */\n    next: 'Keyingi',\n    /**\n     * Shown on buttons that navigate state backward\n     */\n    prev: 'Oldingi',\n    /**\n     * Shown when adding all values.\n     */\n    addAllValues: `Barcha qiymatlarni qo'shish`,\n    /**\n     * Shown when adding selected values.\n     */\n    addSelectedValues: `Tanlangan qiymatlarni qoʻshish`,\n    /**\n     * Shown when removing all values.\n     */\n    removeAllValues: 'Barcha qiymatlarni olib tashlang',\n    /**\n     * Shown when removing selected values.\n     */\n    removeSelectedValues: 'Tanlangan qiymatlarni olib tashlash',\n    /**\n     * Shown when there is a date to choose.\n     */\n    chooseDate: 'Sanani tanlang',\n    /**\n     * Shown when there is a date to change.\n     */\n    changeDate: `O'zgartirish sanasi`,\n    /**\n     * Shown when the date is invalid.\n     */\n    invalidDate: 'Tanlangan sana yaroqsiz.',\n};\n/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */\nconst validation$2 = {\n    /**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */\n    accepted({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */\n        return `${name} ni qabul qiling.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */\n    date_after({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */\n            return `${sentence(name)} ${date(args[0])} dan keyin bo'lishi kerak.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} kelajakda bo'lishi kerak.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */\n    alpha({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */\n        return `${sentence(name)} faqat alifbo tartibidagi belgilardan iborat bo'lishi mumkin.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */\n    alphanumeric({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */\n        return `${sentence(name)} faqat harflar va raqamlardan iborat bo'lishi mumkin.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */\n    alpha_spaces({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */\n        return `${sentence(name)} faqat harf va bo'shliqlardan iborat bo'lishi mumkin.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */\n    date_before({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */\n            return `${sentence(name)} ${date(args[0])} dan oldin bo'lishi kerak`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} o'tmishda bo'lishi kerak.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */\n    between({ name, args }) {\n        if (isNaN(args[0]) || isNaN(args[1])) {\n            /* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */\n            return `Bu maydon noto'g'ri sozlangan va uni yuborib bo'lmaydi.`;\n            /* </i18n> */\n        }\n        const [a, b] = order(args[0], args[1]);\n        /* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */\n        return `${sentence(name)} ${a} va ${b} orasida bo'lishi kerak.`;\n        /* </i18n> */\n    },\n    /**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */\n    confirm({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */\n        return `${sentence(name)} mos emas.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */\n    date_format({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */\n            return `${sentence(name)} haqiqiy sana emas, iltimos ${args[0]} formatidan foydalaning`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */\n        return \"Bu maydon noto'g'ri sozlangan va uni yuborib bo'lmaydi\";\n        /* </i18n> */\n    },\n    /**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */\n    date_between({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */\n        return `${sentence(name)} ${date(args[0])} va ${date(args[1])} oralig'ida bo'lishi kerak`;\n        /* </i18n> */\n    },\n    /**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */\n    email: 'Iltimos amaldagi e-mail manzilingizni kiriting.',\n    /**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */\n    ends_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */\n        return `${sentence(name)} ${list(args)} bilan tugamaydi.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */\n    is({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */\n        return `${sentence(name)} ruxsat etilgan qiymat emas.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */\n    length({ name, args: [first = 0, second = Infinity] }) {\n        const min = Number(first) <= Number(second) ? first : second;\n        const max = Number(second) >= Number(first) ? second : first;\n        if (min == 1 && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */\n            return `${sentence(name)} kamida bitta belgidan iborat bo'lishi kerak.`;\n            /* </i18n> */\n        }\n        if (min == 0 && max) {\n            /* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */\n            return `${sentence(name)} ${max} ta belgidan kam yoki teng bo'lishi kerak.`;\n            /* </i18n> */\n        }\n        if (min === max) {\n            /* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */\n            return `${sentence(name)} bo'lishi kerak ${max} belgilar uzun.`;\n            /* </i18n> */\n        }\n        if (min && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */\n            return `${sentence(name)} ${min} ta belgidan ko'p yoki teng bo'lishi kerak.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */\n        return `${sentence(name)} ${min} va ${max} gacha belgilardan iborat bo'lishi kerak.`;\n        /* </i18n> */\n    },\n    /**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */\n    matches({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */\n        return `${sentence(name)} ruxsat etilgan qiymat emas.`;\n        /* </i18n> */\n    },\n    /**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */\n    max({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */\n            return `${args[0]} ${name} dan ortiq bo'lishi mumkin emas.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */\n        return `${sentence(name)} ${args[0]} dan kichik yoki teng bo'lishi kerak.`;\n        /* </i18n> */\n    },\n    /**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */\n    mime({ name, args }) {\n        if (!args[0]) {\n            /* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */\n            return 'Fayl formatlariga ruxsat berilmagan.';\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */\n        return `${sentence(name)} quyidagi turdagi bo'lishi kerak: ${args[0]}`;\n        /* </i18n> */\n    },\n    /**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */\n    min({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */\n            return `${args[0]} ${name} dan kam bo'lmasligi kerak.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */\n        return `${sentence(name)} kamida ${args[0]} bo'lishi kerak.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */\n    not({ name, node: { value } }) {\n        /* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */\n        return `\"${value}\" ruxsat berilmagan ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */\n    number({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a number.\"> */\n        return `${sentence(name)} raqam bo'lishi kerak.`;\n        /* </i18n> */\n    },\n    /**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */\n    required({ name }) {\n        /* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */\n        return `${sentence(name)} talab qilinadi.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */\n    starts_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */\n        return `${sentence(name)} ${list(args)} bilan boshlanmaydi.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */\n    url() {\n        /* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */\n        return `Iltimos, tegishli URL manzilini kiriting.`;\n        /* </i18n> */\n    },\n};\n\nvar uz = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ui: ui$2,\n    validation: validation$2\n});\n\n/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */\n/**\n * Standard language for interface features.\n * @public\n */\nconst ui$1 = {\n    /**\n     * Shown on buttons for adding new items.\n     */\n    add: 'Thêm',\n    /**\n     * Shown when a button to remove items is visible.\n     */\n    remove: 'Xoá',\n    /**\n     * Shown when there are multiple items to remove at the same time.\n     */\n    removeAll: 'Xoá tất cả',\n    /**\n     * Shown when all fields are not filled out correctly.\n     */\n    incomplete: 'Xin lỗi, không phải tất cả các trường đều được nhập đúng.',\n    /**\n     * Shown in a button inside a form to submit the form.\n     */\n    submit: 'Gửi',\n    /**\n     * Shown when no files are selected.\n     */\n    noFiles: 'Chưa chọn file',\n    /**\n     * Shown on buttons that move fields up in a list.\n     */\n    moveUp: 'Di chuyển lên',\n    /**\n     * Shown on buttons that move fields down in a list.\n     */\n    moveDown: 'Di chuyển xuống',\n    /**\n     * Shown when something is actively loading.\n     */\n    isLoading: 'Đang tải...',\n    /**\n     * Shown when there is more to load.\n     */\n    loadMore: 'Tải thêm',\n    /**\n     * Shown on buttons that navigate state forward\n     */\n    next: 'Tiếp',\n    /**\n     * Shown on buttons that navigate state backward\n     */\n    prev: 'Trước',\n    /**\n     * Shown when adding all values.\n     */\n    addAllValues: 'Thêm tất cả các giá trị',\n    /**\n     * Shown when adding selected values.\n     */\n    addSelectedValues: 'Thêm các giá trị đã chọn',\n    /**\n     * Shown when removing all values.\n     */\n    removeAllValues: 'Loại bỏ tất cả các giá trị',\n    /**\n     * Shown when removing selected values.\n     */\n    removeSelectedValues: 'Loại bỏ các giá trị đã chọn',\n    /**\n     * Shown when there is a date to choose.\n     */\n    chooseDate: 'Chọn ngày',\n    /**\n     * Shown when there is a date to change.\n     */\n    changeDate: 'Thay đổi ngày',\n    /**\n     * Shown when the date is invalid.\n     */\n    invalidDate: 'Ngày đã chọn không hợp lệ.',\n};\n/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */\nconst validation$1 = {\n    /**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */\n    accepted({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */\n        return `Hãy đồng ý với ${name}.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */\n    date_after({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */\n            return `${sentence(name)} phải sau ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} phải trong tương lai.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */\n    alpha({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */\n        return `${sentence(name)} có thể chỉ bao gồm các chữ cái alphabet.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */\n    alphanumeric({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */\n        return `${sentence(name)} có thể chỉ bao gồm các chữ cái và chữ số.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */\n    alpha_spaces({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */\n        return `${sentence(name)} chỉ có thể chứa các chữ cái và khoảng trắng.`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */\n    date_before({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */\n            return `${sentence(name)} phải trước ${date(args[0])}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)} phải trong quá khứ.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */\n    between({ name, args }) {\n        if (isNaN(args[0]) || isNaN(args[1])) {\n            /* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */\n            return `Trường này đã được thiết lập sai và không thể gửi.`;\n            /* </i18n> */\n        }\n        const [a, b] = order(args[0], args[1]);\n        /* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */\n        return `${sentence(name)} phải ở giữa ${a} và ${b}.`;\n        /* </i18n> */\n    },\n    /**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */\n    confirm({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */\n        return `${sentence(name)} không khớp.`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */\n    date_format({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */\n            return `${sentence(name)} không phải ngày hợp lệ, hãy sử dụng định dạng ${args[0]}`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */\n        return 'Trường này đã được thiết lập sai và không thể gửi.';\n        /* </i18n> */\n    },\n    /**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */\n    date_between({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */\n        return `${sentence(name)} phải ở giữa khoảng từ ${date(args[0])} đến ${date(args[1])}.`;\n        /* </i18n> */\n    },\n    /**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */\n    email: 'Hãy nhập một địa chỉ email hợp lệ.',\n    /**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */\n    ends_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */\n        return `${sentence(name)} không kết thúc với ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */\n    is({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */\n        return `${sentence(name)} không phải một giá trị được cho phép.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */\n    length({ name, args: [first = 0, second = Infinity] }) {\n        const min = Number(first) <= Number(second) ? first : second;\n        const max = Number(second) >= Number(first) ? second : first;\n        if (min == 1 && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */\n            return `${sentence(name)} phải có độ dài tối thiểu một ký tự.`;\n            /* </i18n> */\n        }\n        if (min == 0 && max) {\n            /* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */\n            return `${sentence(name)} phải có độ dài tối đa ${max} ký tự.`;\n            /* </i18n> */\n        }\n        if (min === max) {\n            /* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */\n            return `${sentence(name)} nên dài ${max} ký tự.`;\n            /* </i18n> */\n        }\n        if (min && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */\n            return `${sentence(name)} phải có độ dài tối thiểu ${min} ký tự.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */\n        return `${sentence(name)} phải có độ dài tối đa trong khoảng từ ${min} đến ${max} ký tự.`;\n        /* </i18n> */\n    },\n    /**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */\n    matches({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */\n        return `${sentence(name)} không phải một giá trị được cho phép.`;\n        /* </i18n> */\n    },\n    /**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */\n    max({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */\n            return `${name} không thể lớn hơn ${args[0]}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */\n        return `${sentence(name)} phải tối đa bằng ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */\n    mime({ name, args }) {\n        if (!args[0]) {\n            /* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */\n            return 'Định dạng tệp tin này không được phép.';\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */\n        return `${sentence(name)} phải là một trong các dạng: ${args[0]}`;\n        /* </i18n> */\n    },\n    /**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */\n    min({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */\n            return `${name} không thể nhỏ hơn ${args[0]}.`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */\n        return `${sentence(name)} phải tối thiểu bằng ${args[0]}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */\n    not({ name, node: { value } }) {\n        /* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */\n        return `\"${value}\" không phải giá trị ${name} được phép.`;\n        /* </i18n> */\n    },\n    /**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */\n    number({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a number.\"> */\n        return `${sentence(name)} phải là một số.`;\n        /* </i18n> */\n    },\n    /**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */\n    required({ name }) {\n        /* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */\n        return `${sentence(name)} là bắt buộc.`;\n        /* </i18n> */\n    },\n    /**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */\n    starts_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */\n        return `${sentence(name)} không bắt đầu với ${list(args)}.`;\n        /* </i18n> */\n    },\n    /**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */\n    url() {\n        /* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */\n        return `Vui lòng nhập một URL hợp lệ.`;\n        /* </i18n> */\n    },\n};\n\nvar vi = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ui: ui$1,\n    validation: validation$1\n});\n\n/**\n * Here we can import additional helper functions to assist in formatting our\n * language. Feel free to add additional helper methods to libs/formats if it\n * assists in creating good validation messages for your locale.\n */\n/**\n * Standard language for interface features.\n * @public\n */\nconst ui = {\n    /**\n     * Shown on a button for adding additional items.\n     */\n    add: '添加',\n    /**\n     * Shown when a button to remove items is visible.\n     */\n    remove: '移除',\n    /**\n     * Shown when there are multiple items to remove at the same time.\n     */\n    removeAll: '移除全部',\n    /**\n     * Shown when all fields are not filled out correctly.\n     */\n    incomplete: '抱歉，部分字段未被正确填写。',\n    /**\n     * Shown in a button inside a form to submit the form.\n     */\n    submit: '提交',\n    /**\n     * Shown when no files are selected.\n     */\n    noFiles: '未选择文件',\n    /**\n     * Shown on buttons that move fields up in a list.\n     */\n    moveUp: '上移',\n    /**\n     * Shown on buttons that move fields down in a list.\n     */\n    moveDown: '下移',\n    /**\n     * Shown when something is actively loading.\n     */\n    isLoading: '加载中...',\n    /**\n     * Shown when there is more to load.\n     */\n    loadMore: '加载更多',\n    /**\n     * Shown on buttons that navigate state forward\n     */\n    next: '下一步',\n    /**\n     * Shown on buttons that navigate state backward\n     */\n    prev: '以前',\n    /**\n     * Shown when adding all values.\n     */\n    addAllValues: '将所有值相加',\n    /**\n     * Shown when adding selected values.\n     */\n    addSelectedValues: '添加所选值',\n    /**\n     * Shown when removing all values.\n     */\n    removeAllValues: '移除所有值',\n    /**\n     * Shown when removing selected values.\n     */\n    removeSelectedValues: '移除所选值',\n    /**\n     * Shown when there is a date to choose.\n     */\n    chooseDate: '选择日期',\n    /**\n     * Shown when there is a date to change.\n     */\n    changeDate: '更改日期',\n    /**\n     * Shown when the date is invalid.\n     */\n    invalidDate: '所选日期无效。',\n};\n/**\n * These are all the possible strings that pertain to validation messages.\n * @public\n */\nconst validation = {\n    /**\n     * The value is not an accepted value.\n     * @see {@link https://formkit.com/essentials/validation#accepted}\n     */\n    accepted({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */\n        return `请接受${name}。`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not after\n     * @see {@link https://formkit.com/essentials/validation#date-after}\n     */\n    date_after({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */\n            return `${sentence(name)}必须晚于${date(args[0])}。`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)}必须是未来的日期。`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a letter.\n     * @see {@link https://formkit.com/essentials/validation#alpha}\n     */\n    alpha({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */\n        return `${sentence(name)}只能包含英文字母。`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not alphanumeric\n     * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n     */\n    alphanumeric({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */\n        return `${sentence(name)}只能包含字母和数字。`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not letter and/or spaces\n     * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n     */\n    alpha_spaces({ name }) {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */\n        return `${sentence(name)}只能包含字母和空格。`;\n        /* </i18n> */\n    },\n    /**\n     * The date is not before\n     * @see {@link https://formkit.com/essentials/validation#date-before}\n     */\n    date_before({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */\n            return `${sentence(name)}必须早于${date(args[0])}。`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */\n        return `${sentence(name)}必须是过去的日期。`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not between two numbers\n     * @see {@link https://formkit.com/essentials/validation#between}\n     */\n    between({ name, args }) {\n        if (isNaN(args[0]) || isNaN(args[1])) {\n            /* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */\n            return `该字段未被正确设置而无法提交。`;\n            /* </i18n> */\n        }\n        const [a, b] = order(args[0], args[1]);\n        /* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */\n        return `${sentence(name)}必须在${a}和${b}之间。`;\n        /* </i18n> */\n    },\n    /**\n     * The confirmation field does not match\n     * @see {@link https://formkit.com/essentials/validation#confirm}\n     */\n    confirm({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */\n        return `${sentence(name)}不匹配。`;\n        /* </i18n> */\n    },\n    /**\n     * The value is not a valid date\n     * @see {@link https://formkit.com/essentials/validation#date-format}\n     */\n    date_format({ name, args }) {\n        if (Array.isArray(args) && args.length) {\n            /* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */\n            return `${sentence(name)}不是合法日期，请使用 ${args[0]} 格式`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */\n        return '该字段未被正确设置而无法提交';\n        /* </i18n> */\n    },\n    /**\n     * Is not within expected date range\n     * @see {@link https://formkit.com/essentials/validation#date-between}\n     */\n    date_between({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */\n        return `${sentence(name)}必须在${date(args[0])}和${date(args[1])}之间`;\n        /* </i18n> */\n    },\n    /**\n     * Shown when the user-provided value is not a valid email address.\n     * @see {@link https://formkit.com/essentials/validation#email}\n     */\n    email: '请输入合法的电子邮件地址。',\n    /**\n     * Does not end with the specified value\n     * @see {@link https://formkit.com/essentials/validation#ends-with}\n     */\n    ends_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */\n        return `${sentence(name)}必须以${list(args)}结尾。`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#is}\n     */\n    is({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */\n        return `${sentence(name)}是不允许的。`;\n        /* </i18n> */\n    },\n    /**\n     * Does not match specified length\n     * @see {@link https://formkit.com/essentials/validation#length}\n     */\n    length({ name, args: [first = 0, second = Infinity] }) {\n        const min = Number(first) <= Number(second) ? first : second;\n        const max = Number(second) >= Number(first) ? second : first;\n        if (min == 1 && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */\n            return `${sentence(name)}至少要有一个字符。`;\n            /* </i18n> */\n        }\n        if (min == 0 && max) {\n            /* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */\n            return `${sentence(name)}必须少于或等于${max}个字符。`;\n            /* </i18n> */\n        }\n        if (min === max) {\n            /* <i18n case=\"Shown when first and second argument supplied to the rule are the same, and the user-provided value is not any of the arguments supplied to the rule.\"> */\n            return `${sentence(name)}必须包含${max}个字符。`;\n            /* </i18n> */\n        }\n        if (min && max === Infinity) {\n            /* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */\n            return `${sentence(name)}必须多于或等于${min}个字符。`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */\n        return `${sentence(name)}必须介于${min}和${max}个字符之间。`;\n        /* </i18n> */\n    },\n    /**\n     * Value is not a match\n     * @see {@link https://formkit.com/essentials/validation#matches}\n     */\n    matches({ name }) {\n        /* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */\n        return `${sentence(name)}是不允许的。`;\n        /* </i18n> */\n    },\n    /**\n     * Exceeds maximum allowed value\n     * @see {@link https://formkit.com/essentials/validation#max}\n     */\n    max({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */\n            return `${name}不得多于${args[0]}个值。`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */\n        return `${name}不得大于${args[0]}。`;\n        /* </i18n> */\n    },\n    /**\n     * The (field-level) value does not match specified mime type\n     * @see {@link https://formkit.com/essentials/validation#mime}\n     */\n    mime({ name, args }) {\n        if (!args[0]) {\n            /* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */\n            return '没有允许的文件格式。';\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */\n        return `${sentence(name)}的类型必须为：${args[0]}`;\n        /* </i18n> */\n    },\n    /**\n     * Does not fulfill minimum allowed value\n     * @see {@link https://formkit.com/essentials/validation#min}\n     */\n    min({ name, node: { value }, args }) {\n        if (Array.isArray(value)) {\n            /* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */\n            return `${name}不得少于${args[0]}个值。`;\n            /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */\n        return `${sentence(name)}不得小于${args[0]}。`;\n        /* </i18n> */\n    },\n    /**\n     * Is not an allowed value\n     * @see {@link https://formkit.com/essentials/validation#not}\n     */\n    not({ name, node: { value } }) {\n        /* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */\n        return `\"${value}\"不是一个合法的${name}。`;\n        /* </i18n> */\n    },\n    /**\n     *  Is not a number\n     * @see {@link https://formkit.com/essentials/validation#number}\n     */\n    number({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a number.\"> */\n        return `${sentence(name)}必须为数字。`;\n        /* </i18n> */\n    },\n    /**\n     * Required field.\n     * @see {@link https://formkit.com/essentials/validation#required}\n     */\n    required({ name }) {\n        /* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */\n        return `${sentence(name)}不得留空。`;\n        /* </i18n> */\n    },\n    /**\n     * Does not start with specified value\n     * @see {@link https://formkit.com/essentials/validation#starts-with}\n     */\n    starts_with({ name, args }) {\n        /* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */\n        return `${sentence(name)}必须以${list(args)}开头。`;\n        /* </i18n> */\n    },\n    /**\n     * Is not a url\n     * @see {@link https://formkit.com/essentials/validation#url}\n     */\n    url() {\n        /* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */\n        return `请输入有效的 URL。`;\n        /* </i18n> */\n    },\n};\n\nvar zh = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ui: ui,\n    validation: validation\n});\n\n/**\n * Create a new internationalization plugin for FormKit.\n *\n * @param registry - The registry of {@link @formkit/i18n#FormKitLocaleRegistry | FormKitLocales}.\n *\n * @returns {@link @formkit/core#FormKitPlugin | FormKitPlugin}\n *\n * @public\n */\nfunction createI18nPlugin(registry) {\n    return function i18nPlugin(node) {\n        let localeKey = parseLocale(node.config.locale, registry);\n        let locale = localeKey ? registry[localeKey] : {};\n        /* If the locale prop changes, update the active locale */\n        node.on('prop:locale', ({ payload: lang }) => {\n            localeKey = parseLocale(lang, registry);\n            locale = localeKey ? registry[localeKey] : {};\n            // Run through all the messages in the store and update with new locale\n            node.store.touch();\n        });\n        node.on('prop:label', () => node.store.touch());\n        node.on('prop:validationLabel', () => node.store.touch());\n        /**\n         * Hook into the core text or t() hook to perform localization on the\n         * output of core functionality.\n         */\n        node.hook.text((fragment, next) => {\n            var _a, _b;\n            const key = ((_a = fragment.meta) === null || _a === void 0 ? void 0 : _a.messageKey) || fragment.key;\n            if (has(locale, fragment.type) && has(locale[fragment.type], key)) {\n                const t = locale[fragment.type][key];\n                if (typeof t === 'function') {\n                    fragment.value = Array.isArray((_b = fragment.meta) === null || _b === void 0 ? void 0 : _b.i18nArgs)\n                        ? t(...fragment.meta.i18nArgs) // eslint-disable-line @typescript-eslint/no-non-null-assertion\n                        : t(fragment);\n                }\n                else {\n                    fragment.value = t;\n                }\n            }\n            return next(fragment);\n        });\n    };\n}\n/**\n * Parse ISO 639-1 and 639-2 to a valid locale key.\n *\n * @param locale - An ISO 639-1 and (optionally) ISO 639-2 language tag. For these are valid locale keys:\n * zh\n * zh-CN\n * zh-HK\n * en\n * en-GB\n *\n * @param availableLocales - An array of locales that may be valid.\n *\n * @public\n */\nfunction parseLocale(locale, availableLocales) {\n    if (has(availableLocales, locale)) {\n        return locale;\n    }\n    const [lang] = locale.split('-');\n    if (has(availableLocales, lang)) {\n        return lang;\n    }\n    for (const locale in availableLocales) {\n        return locale;\n    }\n    return false;\n}\n\n/**\n * The official FormKit internationalization (i18n) plugin. This package\n * contains the locales and the plugin that integrates FormKit with these\n * locales. Read the {@link https://formkit.com/essentials/internationalization\n * | internationalization documentation} for usage instructions.\n *\n * @packageDocumentation\n */\n/**\n * Export all the available locales at once.\n *\n * @public\n */\nconst locales = {\n    ar,\n    az,\n    bg,\n    ca,\n    cs,\n    da,\n    de,\n    el,\n    en,\n    es,\n    fa,\n    fi,\n    fr,\n    fy,\n    he,\n    hr,\n    hu,\n    id,\n    it,\n    ja,\n    kk,\n    ko,\n    nb,\n    nl,\n    pl,\n    pt,\n    ro,\n    ru,\n    sk,\n    sl,\n    sr,\n    sv,\n    tg,\n    th,\n    tr,\n    uk,\n    uz,\n    vi,\n    zh,\n};\n\nexport { ar, az, bg, ca, createI18nPlugin, cs, da, date, de, el, en, es, fa, fi, fr, fy, he, hr, hu, id, it, ja, kk, ko, list, locales, nb, nl, order, pl, pt, ro, ru, sentence, sk, sl, sr, sv, tg, th, tr, uk, uz, vi, zh };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}