{"ast":null,"code":"import { errorHandler, warningHandler } from '@formkit/core';\nlet registered = false;\n/**\n * Catalog of the error message codes in FormKit.\n * @public\n */\nconst errors = {\n  /**\n   * FormKit errors:\n   */\n  100: ({\n    data: node\n  }) => `Only groups, lists, and forms can have children (${node.name}).`,\n  101: ({\n    data: node\n  }) => `You cannot directly modify the store (${node.name}). See: https://formkit.com/advanced/core#message-store`,\n  102: ({\n    data: [node, property]\n  }) => `You cannot directly assign node.${property} (${node.name})`,\n  103: ({\n    data: [operator]\n  }) => `Schema expressions cannot start with an operator (${operator})`,\n  104: ({\n    data: [operator, expression]\n  }) => `Schema expressions cannot end with an operator (${operator} in \"${expression}\")`,\n  105: ({\n    data: expression\n  }) => `Invalid schema expression: ${expression}`,\n  106: ({\n    data: name\n  }) => `Cannot submit because (${name}) is not in a form.`,\n  107: ({\n    data: [node, value]\n  }) => `Cannot set ${node.name} to non object value: ${value}`,\n  108: ({\n    data: [node, value]\n  }) => `Cannot set ${node.name} to non array value: ${value}`,\n  /**\n   * Input specific errors:\n   */\n  300: ({\n    data: [node]\n  }) => `Cannot set behavior prop to overscroll (on ${node.name} input) when options prop is a function.`,\n  /**\n   * FormKit vue errors:\n   */\n  600: ({\n    data: node\n  }) => `Unknown input type${typeof node.props.type === 'string' ? ' \"' + node.props.type + '\"' : ''} (\"${node.name}\")`,\n  601: ({\n    data: node\n  }) => `Input definition${typeof node.props.type === 'string' ? ' \"' + node.props.type + '\"' : ''} is missing a schema or component property (${node.name}).`\n};\n/**\n * Catalog of the warning message codes in FormKit.\n * @public\n */\nconst warnings = {\n  /**\n   * Core warnings:\n   */\n  150: ({\n    data: fn\n  }) => `Schema function \"${fn}()\" is not a valid function.`,\n  151: ({\n    data: id\n  }) => `No form element with id: ${id}`,\n  152: ({\n    data: id\n  }) => `No input element with id: ${id}`,\n  /**\n   * Input specific warnings:\n   */\n  350: ({\n    data: node\n  }) => `Invalid options prop for radio input (${node.name}). See https://formkit.com/inputs/radio`,\n  /**\n   * Vue warnings:\n   */\n  650: 'Schema \"$get()\" must use the id of an input to access.',\n  651: ({\n    data: id\n  }) => `Cannot setErrors() on \"${id}\" because no such id exists.`,\n  652: ({\n    data: id\n  }) => `Cannot clearErrors() on \"${id}\" because no such id exists.`,\n  /**\n   * Deprecation warnings:\n   */\n  800: ({\n    data: name\n  }) => `${name} is deprecated.`\n};\n/**\n * Decodes an error that is being emitted and console logs it.\n * @param error - The error currently being handled\n * @param next - Call additional handlers\n * @returns\n */\nconst decodeErrors = (error, next) => {\n  if (error.code in errors) {\n    const err = errors[error.code];\n    error.message = typeof err === 'function' ? err(error) : err;\n  }\n  return next(error);\n};\nif (!registered) errorHandler(decodeErrors);\n/**\n * Decodes an error that is being emitted and console logs it.\n * @param error - The error currently being handled\n * @param next - Call additional handlers\n * @returns\n */\nconst decodeWarnings = (warning, next) => {\n  if (warning.code in warnings) {\n    const warn = warnings[warning.code];\n    warning.message = typeof warn === 'function' ? warn(warning) : warn;\n  }\n  return next(warning);\n};\nif (!registered) warningHandler(decodeWarnings);\nregistered = true;\nexport { errors, warnings };","map":{"version":3,"names":["errorHandler","warningHandler","registered","errors","data","node","name","property","operator","expression","value","props","type","warnings","fn","id","decodeErrors","error","next","code","err","message","decodeWarnings","warning","warn"],"sources":["D:/VueJS/Form Validation with Formkit/node_modules/@formkit/dev/dist/index.mjs"],"sourcesContent":["import { errorHandler, warningHandler } from '@formkit/core';\n\nlet registered = false;\n/**\n * Catalog of the error message codes in FormKit.\n * @public\n */\nconst errors = {\n    /**\n     * FormKit errors:\n     */\n    100: ({ data: node }) => `Only groups, lists, and forms can have children (${node.name}).`,\n    101: ({ data: node }) => `You cannot directly modify the store (${node.name}). See: https://formkit.com/advanced/core#message-store`,\n    102: ({ data: [node, property], }) => `You cannot directly assign node.${property} (${node.name})`,\n    103: ({ data: [operator] }) => `Schema expressions cannot start with an operator (${operator})`,\n    104: ({ data: [operator, expression] }) => `Schema expressions cannot end with an operator (${operator} in \"${expression}\")`,\n    105: ({ data: expression }) => `Invalid schema expression: ${expression}`,\n    106: ({ data: name }) => `Cannot submit because (${name}) is not in a form.`,\n    107: ({ data: [node, value] }) => `Cannot set ${node.name} to non object value: ${value}`,\n    108: ({ data: [node, value] }) => `Cannot set ${node.name} to non array value: ${value}`,\n    /**\n     * Input specific errors:\n     */\n    300: ({ data: [node] }) => `Cannot set behavior prop to overscroll (on ${node.name} input) when options prop is a function.`,\n    /**\n     * FormKit vue errors:\n     */\n    600: ({ data: node }) => `Unknown input type${typeof node.props.type === 'string' ? ' \"' + node.props.type + '\"' : ''} (\"${node.name}\")`,\n    601: ({ data: node }) => `Input definition${typeof node.props.type === 'string' ? ' \"' + node.props.type + '\"' : ''} is missing a schema or component property (${node.name}).`,\n};\n/**\n * Catalog of the warning message codes in FormKit.\n * @public\n */\nconst warnings = {\n    /**\n     * Core warnings:\n     */\n    150: ({ data: fn }) => `Schema function \"${fn}()\" is not a valid function.`,\n    151: ({ data: id }) => `No form element with id: ${id}`,\n    152: ({ data: id }) => `No input element with id: ${id}`,\n    /**\n     * Input specific warnings:\n     */\n    350: ({ data: node }) => `Invalid options prop for radio input (${node.name}). See https://formkit.com/inputs/radio`,\n    /**\n     * Vue warnings:\n     */\n    650: 'Schema \"$get()\" must use the id of an input to access.',\n    651: ({ data: id }) => `Cannot setErrors() on \"${id}\" because no such id exists.`,\n    652: ({ data: id }) => `Cannot clearErrors() on \"${id}\" because no such id exists.`,\n    /**\n     * Deprecation warnings:\n     */\n    800: ({ data: name }) => `${name} is deprecated.`,\n};\n/**\n * Decodes an error that is being emitted and console logs it.\n * @param error - The error currently being handled\n * @param next - Call additional handlers\n * @returns\n */\nconst decodeErrors = (error, next) => {\n    if (error.code in errors) {\n        const err = errors[error.code];\n        error.message = typeof err === 'function' ? err(error) : err;\n    }\n    return next(error);\n};\nif (!registered)\n    errorHandler(decodeErrors);\n/**\n * Decodes an error that is being emitted and console logs it.\n * @param error - The error currently being handled\n * @param next - Call additional handlers\n * @returns\n */\nconst decodeWarnings = (warning, next) => {\n    if (warning.code in warnings) {\n        const warn = warnings[warning.code];\n        warning.message = typeof warn === 'function' ? warn(warning) : warn;\n    }\n    return next(warning);\n};\nif (!registered)\n    warningHandler(decodeWarnings);\nregistered = true;\n\nexport { errors, warnings };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}